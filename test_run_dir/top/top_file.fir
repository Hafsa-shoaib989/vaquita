;buildInfoPackage: chisel3, version: 3.4.3, scalaVersion: 2.12.12, sbtVersion: 1.3.10
circuit top_file : 
  module pc_counter_plus_4 : 
    input clock : Clock
    input reset : Reset
    output io : {flip pc : UInt<32>, out : UInt<32>, out4 : UInt<32>}
    
    reg reg : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[pc_counter_plus_4.scala 10:22]
    reg <= io.pc @[pc_counter_plus_4.scala 11:9]
    io.out <= reg @[pc_counter_plus_4.scala 12:12]
    node _io_out4_T = add(reg, UInt<3>("h04")) @[pc_counter_plus_4.scala 13:20]
    node _io_out4_T_1 = tail(_io_out4_T, 1) @[pc_counter_plus_4.scala 13:20]
    io.out4 <= _io_out4_T_1 @[pc_counter_plus_4.scala 13:13]
    
  module alu_control : 
    input clock : Clock
    input reset : Reset
    output io : {flip op_code : UInt<7>, flip fn3 : UInt<3>, flip fn7 : UInt<7>, flip lumop : UInt<5>, out : UInt<5>}
    
    node mop = bits(io.fn7, 3, 2) @[alu_control.scala 13:21]
    node _T = eq(io.op_code, UInt<6>("h033")) @[alu_control.scala 15:21]
    when _T : @[alu_control.scala 15:37]
      node _T_1 = eq(io.fn7, UInt<1>("h00")) @[alu_control.scala 16:21]
      when _T_1 : @[alu_control.scala 16:28]
        node _T_2 = eq(io.fn3, UInt<1>("h00")) @[alu_control.scala 18:25]
        when _T_2 : @[alu_control.scala 18:32]
          io.out <= UInt<1>("h00") @[alu_control.scala 19:24]
          skip @[alu_control.scala 18:32]
        else : @[alu_control.scala 22:37]
          node _T_3 = eq(io.fn3, UInt<1>("h01")) @[alu_control.scala 22:30]
          when _T_3 : @[alu_control.scala 22:37]
            io.out <= UInt<2>("h02") @[alu_control.scala 23:24]
            skip @[alu_control.scala 22:37]
          else : @[alu_control.scala 26:37]
            node _T_4 = eq(io.fn3, UInt<2>("h02")) @[alu_control.scala 26:30]
            when _T_4 : @[alu_control.scala 26:37]
              io.out <= UInt<3>("h04") @[alu_control.scala 27:24]
              skip @[alu_control.scala 26:37]
            else : @[alu_control.scala 30:37]
              node _T_5 = eq(io.fn3, UInt<2>("h03")) @[alu_control.scala 30:30]
              when _T_5 : @[alu_control.scala 30:37]
                io.out <= UInt<3>("h06") @[alu_control.scala 31:24]
                skip @[alu_control.scala 30:37]
              else : @[alu_control.scala 34:37]
                node _T_6 = eq(io.fn3, UInt<3>("h04")) @[alu_control.scala 34:30]
                when _T_6 : @[alu_control.scala 34:37]
                  io.out <= UInt<4>("h09") @[alu_control.scala 35:24]
                  skip @[alu_control.scala 34:37]
                else : @[alu_control.scala 38:37]
                  node _T_7 = eq(io.fn3, UInt<3>("h05")) @[alu_control.scala 38:30]
                  when _T_7 : @[alu_control.scala 38:37]
                    io.out <= UInt<4>("h0b") @[alu_control.scala 39:24]
                    skip @[alu_control.scala 38:37]
                  else : @[alu_control.scala 42:37]
                    node _T_8 = eq(io.fn3, UInt<3>("h06")) @[alu_control.scala 42:30]
                    when _T_8 : @[alu_control.scala 42:37]
                      io.out <= UInt<4>("h0d") @[alu_control.scala 43:24]
                      skip @[alu_control.scala 42:37]
                    else : @[alu_control.scala 46:37]
                      node _T_9 = eq(io.fn3, UInt<3>("h07")) @[alu_control.scala 46:30]
                      when _T_9 : @[alu_control.scala 46:37]
                        io.out <= UInt<4>("h0f") @[alu_control.scala 47:24]
                        skip @[alu_control.scala 46:37]
                      else : @[alu_control.scala 49:23]
                        io.out <= UInt<1>("h00") @[alu_control.scala 50:24]
                        skip @[alu_control.scala 49:23]
        skip @[alu_control.scala 16:28]
      else : @[alu_control.scala 55:33]
        node _T_10 = eq(io.fn7, UInt<1>("h01")) @[alu_control.scala 55:26]
        when _T_10 : @[alu_control.scala 55:33]
          node _T_11 = eq(io.fn3, UInt<1>("h00")) @[alu_control.scala 57:25]
          when _T_11 : @[alu_control.scala 57:32]
            io.out <= UInt<5>("h011") @[alu_control.scala 58:24]
            skip @[alu_control.scala 57:32]
          else : @[alu_control.scala 61:37]
            node _T_12 = eq(io.fn3, UInt<3>("h05")) @[alu_control.scala 61:30]
            when _T_12 : @[alu_control.scala 61:37]
              io.out <= UInt<5>("h012") @[alu_control.scala 62:24]
              skip @[alu_control.scala 61:37]
            else : @[alu_control.scala 64:23]
              io.out <= UInt<1>("h00") @[alu_control.scala 65:24]
              skip @[alu_control.scala 64:23]
          skip @[alu_control.scala 55:33]
        else : @[alu_control.scala 71:19]
          io.out <= UInt<1>("h00") @[alu_control.scala 72:20]
          skip @[alu_control.scala 71:19]
      skip @[alu_control.scala 15:37]
    else : @[alu_control.scala 80:42]
      node _T_13 = eq(io.op_code, UInt<5>("h013")) @[alu_control.scala 80:26]
      when _T_13 : @[alu_control.scala 80:42]
        node _T_14 = eq(io.fn7, UInt<1>("h00")) @[alu_control.scala 81:21]
        when _T_14 : @[alu_control.scala 81:28]
          node _T_15 = eq(io.fn3, UInt<1>("h01")) @[alu_control.scala 83:25]
          when _T_15 : @[alu_control.scala 83:32]
            io.out <= UInt<2>("h03") @[alu_control.scala 84:24]
            skip @[alu_control.scala 83:32]
          else : @[alu_control.scala 87:37]
            node _T_16 = eq(io.fn3, UInt<3>("h05")) @[alu_control.scala 87:30]
            when _T_16 : @[alu_control.scala 87:37]
              io.out <= UInt<4>("h0c") @[alu_control.scala 88:24]
              skip @[alu_control.scala 87:37]
            else : @[alu_control.scala 94:37]
              node _T_17 = eq(io.fn3, UInt<1>("h00")) @[alu_control.scala 94:30]
              when _T_17 : @[alu_control.scala 94:37]
                io.out <= UInt<1>("h01") @[alu_control.scala 95:24]
                skip @[alu_control.scala 94:37]
              else : @[alu_control.scala 98:37]
                node _T_18 = eq(io.fn3, UInt<2>("h02")) @[alu_control.scala 98:30]
                when _T_18 : @[alu_control.scala 98:37]
                  io.out <= UInt<3>("h05") @[alu_control.scala 99:24]
                  skip @[alu_control.scala 98:37]
                else : @[alu_control.scala 102:37]
                  node _T_19 = eq(io.fn3, UInt<2>("h03")) @[alu_control.scala 102:30]
                  when _T_19 : @[alu_control.scala 102:37]
                    io.out <= UInt<3>("h07") @[alu_control.scala 103:24]
                    skip @[alu_control.scala 102:37]
                  else : @[alu_control.scala 106:37]
                    node _T_20 = eq(io.fn3, UInt<3>("h04")) @[alu_control.scala 106:30]
                    when _T_20 : @[alu_control.scala 106:37]
                      io.out <= UInt<4>("h0a") @[alu_control.scala 107:24]
                      skip @[alu_control.scala 106:37]
                    else : @[alu_control.scala 110:37]
                      node _T_21 = eq(io.fn3, UInt<3>("h06")) @[alu_control.scala 110:30]
                      when _T_21 : @[alu_control.scala 110:37]
                        io.out <= UInt<4>("h0e") @[alu_control.scala 111:24]
                        skip @[alu_control.scala 110:37]
                      else : @[alu_control.scala 114:37]
                        node _T_22 = eq(io.fn3, UInt<3>("h07")) @[alu_control.scala 114:30]
                        when _T_22 : @[alu_control.scala 114:37]
                          io.out <= UInt<5>("h010") @[alu_control.scala 115:24]
                          skip @[alu_control.scala 114:37]
                        else : @[alu_control.scala 119:23]
                          io.out <= UInt<1>("h00") @[alu_control.scala 120:24]
                          skip @[alu_control.scala 119:23]
          skip @[alu_control.scala 81:28]
        else : @[alu_control.scala 125:33]
          node _T_23 = eq(io.fn7, UInt<1>("h01")) @[alu_control.scala 125:26]
          when _T_23 : @[alu_control.scala 125:33]
            node _T_24 = eq(io.fn3, UInt<3>("h05")) @[alu_control.scala 127:25]
            when _T_24 : @[alu_control.scala 127:32]
              io.out <= UInt<5>("h013") @[alu_control.scala 128:24]
              skip @[alu_control.scala 127:32]
            else : @[alu_control.scala 130:23]
              io.out <= UInt<1>("h00") @[alu_control.scala 131:24]
              skip @[alu_control.scala 130:23]
            skip @[alu_control.scala 125:33]
          else : @[alu_control.scala 134:19]
            io.out <= UInt<1>("h00") @[alu_control.scala 135:20]
            skip @[alu_control.scala 134:19]
        skip @[alu_control.scala 80:42]
      else : @[alu_control.scala 141:42]
        node _T_25 = eq(io.op_code, UInt<7>("h067")) @[alu_control.scala 141:26]
        when _T_25 : @[alu_control.scala 141:42]
          io.out <= UInt<5>("h019") @[alu_control.scala 142:16]
          skip @[alu_control.scala 141:42]
        else : @[alu_control.scala 145:42]
          node _T_26 = eq(io.op_code, UInt<2>("h03")) @[alu_control.scala 145:26]
          when _T_26 : @[alu_control.scala 145:42]
            node _T_27 = eq(io.fn3, UInt<2>("h02")) @[alu_control.scala 146:22]
            when _T_27 : @[alu_control.scala 146:29]
              io.out <= UInt<5>("h01c") @[alu_control.scala 147:20]
              skip @[alu_control.scala 146:29]
            else : @[alu_control.scala 149:20]
              io.out <= UInt<1>("h00") @[alu_control.scala 150:20]
              skip @[alu_control.scala 149:20]
            skip @[alu_control.scala 145:42]
          else : @[alu_control.scala 155:42]
            node _T_28 = eq(io.op_code, UInt<7>("h06f")) @[alu_control.scala 155:26]
            when _T_28 : @[alu_control.scala 155:42]
              io.out <= UInt<5>("h018") @[alu_control.scala 156:16]
              skip @[alu_control.scala 155:42]
            else : @[alu_control.scala 160:42]
              node _T_29 = eq(io.op_code, UInt<7>("h063")) @[alu_control.scala 160:26]
              when _T_29 : @[alu_control.scala 160:42]
                node _T_30 = eq(io.fn3, UInt<1>("h00")) @[alu_control.scala 162:21]
                when _T_30 : @[alu_control.scala 162:28]
                  io.out <= UInt<5>("h014") @[alu_control.scala 163:20]
                  skip @[alu_control.scala 162:28]
                else : @[alu_control.scala 166:33]
                  node _T_31 = eq(io.fn3, UInt<1>("h01")) @[alu_control.scala 166:26]
                  when _T_31 : @[alu_control.scala 166:33]
                    io.out <= UInt<5>("h015") @[alu_control.scala 167:20]
                    skip @[alu_control.scala 166:33]
                  else : @[alu_control.scala 170:33]
                    node _T_32 = eq(io.fn3, UInt<3>("h04")) @[alu_control.scala 170:26]
                    when _T_32 : @[alu_control.scala 170:33]
                      io.out <= UInt<5>("h016") @[alu_control.scala 171:20]
                      skip @[alu_control.scala 170:33]
                    else : @[alu_control.scala 178:33]
                      node _T_33 = eq(io.fn3, UInt<3>("h06")) @[alu_control.scala 178:26]
                      when _T_33 : @[alu_control.scala 178:33]
                        io.out <= UInt<4>("h08") @[alu_control.scala 179:20]
                        skip @[alu_control.scala 178:33]
                      else : @[alu_control.scala 182:33]
                        node _T_34 = eq(io.fn3, UInt<3>("h07")) @[alu_control.scala 182:26]
                        when _T_34 : @[alu_control.scala 182:33]
                          io.out <= UInt<5>("h017") @[alu_control.scala 183:20]
                          skip @[alu_control.scala 182:33]
                        else : @[alu_control.scala 185:19]
                          io.out <= UInt<5>("h01e") @[alu_control.scala 186:20]
                          skip @[alu_control.scala 185:19]
                skip @[alu_control.scala 160:42]
              else : @[alu_control.scala 190:41]
                node _T_35 = eq(io.op_code, UInt<6>("h023")) @[alu_control.scala 190:25]
                when _T_35 : @[alu_control.scala 190:41]
                  node _T_36 = eq(io.fn3, UInt<2>("h02")) @[alu_control.scala 191:21]
                  when _T_36 : @[alu_control.scala 191:28]
                    io.out <= UInt<5>("h01b") @[alu_control.scala 192:20]
                    skip @[alu_control.scala 191:28]
                  else : @[alu_control.scala 194:19]
                    io.out <= UInt<1>("h00") @[alu_control.scala 195:20]
                    skip @[alu_control.scala 194:19]
                  skip @[alu_control.scala 190:41]
                else : @[alu_control.scala 199:62]
                  node _T_37 = eq(io.op_code, UInt<7>("h057")) @[alu_control.scala 199:25]
                  node _T_38 = eq(io.fn3, UInt<3>("h07")) @[alu_control.scala 199:50]
                  node _T_39 = and(_T_37, _T_38) @[alu_control.scala 199:41]
                  when _T_39 : @[alu_control.scala 199:62]
                    node _T_40 = eq(io.fn3, UInt<3>("h07")) @[alu_control.scala 200:21]
                    when _T_40 : @[alu_control.scala 200:28]
                      io.out <= UInt<5>("h01d") @[alu_control.scala 201:20]
                      skip @[alu_control.scala 200:28]
                    else : @[alu_control.scala 203:19]
                      io.out <= UInt<1>("h00") @[alu_control.scala 204:20]
                      skip @[alu_control.scala 203:19]
                    skip @[alu_control.scala 199:62]
                  else : @[alu_control.scala 209:41]
                    node _T_41 = eq(io.op_code, UInt<3>("h07")) @[alu_control.scala 209:25]
                    when _T_41 : @[alu_control.scala 209:41]
                      node _T_42 = eq(mop, UInt<1>("h00")) @[alu_control.scala 210:18]
                      node _T_43 = eq(io.lumop, UInt<1>("h00")) @[alu_control.scala 210:41]
                      node _T_44 = and(_T_42, _T_43) @[alu_control.scala 210:29]
                      when _T_44 : @[alu_control.scala 210:56]
                        io.out <= UInt<5>("h01e") @[alu_control.scala 211:20]
                        skip @[alu_control.scala 210:56]
                      else : @[alu_control.scala 213:19]
                        io.out <= UInt<1>("h00") @[alu_control.scala 214:20]
                        skip @[alu_control.scala 213:19]
                      skip @[alu_control.scala 209:41]
                    else : @[alu_control.scala 219:88]
                      node _T_45 = eq(io.op_code, UInt<7>("h057")) @[alu_control.scala 219:26]
                      node _T_46 = eq(io.fn3, UInt<1>("h00")) @[alu_control.scala 219:51]
                      node _T_47 = and(_T_45, _T_46) @[alu_control.scala 219:42]
                      node _T_48 = eq(io.fn7, UInt<1>("h00")) @[alu_control.scala 219:72]
                      node _T_49 = and(_T_47, _T_48) @[alu_control.scala 219:63]
                      when _T_49 : @[alu_control.scala 219:88]
                        io.out <= UInt<5>("h01f") @[alu_control.scala 220:16]
                        skip @[alu_control.scala 219:88]
                      else : @[alu_control.scala 223:15]
                        io.out <= UInt<1>("h00") @[alu_control.scala 224:16]
                        skip @[alu_control.scala 223:15]
    
  module alu : 
    input clock : Clock
    input reset : Reset
    output io : {flip alu : UInt<5>, flip a32 : SInt<32>[1], flip b32 : SInt<32>[1], flip vs1 : SInt<128>, flip vs2 : SInt<128>, out : SInt<32>[4], branch : UInt<1>, vec_out : SInt<128>}
    
    node _T = eq(io.alu, UInt<5>("h00")) @[alu.scala 57:18]
    node _T_1 = eq(io.alu, UInt<5>("h01")) @[alu.scala 57:36]
    node _T_2 = or(_T, _T_1) @[alu.scala 57:26]
    when _T_2 : @[alu.scala 57:45]
      node _io_out_0_T = add(io.a32[0], io.b32[0]) @[alu.scala 58:30]
      node _io_out_0_T_1 = tail(_io_out_0_T, 1) @[alu.scala 58:30]
      node _io_out_0_T_2 = asSInt(_io_out_0_T_1) @[alu.scala 58:30]
      io.out[0] <= _io_out_0_T_2 @[alu.scala 58:17]
      io.out[1] <= asSInt(UInt<1>("h00")) @[alu.scala 59:17]
      io.out[2] <= asSInt(UInt<1>("h00")) @[alu.scala 60:17]
      io.out[3] <= asSInt(UInt<1>("h00")) @[alu.scala 61:17]
      skip @[alu.scala 57:45]
    else : @[alu.scala 63:49]
      node _T_3 = eq(io.alu, UInt<5>("h02")) @[alu.scala 63:22]
      node _T_4 = eq(io.alu, UInt<5>("h03")) @[alu.scala 63:40]
      node _T_5 = or(_T_3, _T_4) @[alu.scala 63:30]
      when _T_5 : @[alu.scala 63:49]
        node _io_out_0_T_3 = bits(io.b32[0], 15, 0) @[alu.scala 64:42]
        node _io_out_0_T_4 = dshl(io.a32[0], _io_out_0_T_3) @[alu.scala 64:30]
        io.out[0] <= _io_out_0_T_4 @[alu.scala 64:17]
        io.out[1] <= asSInt(UInt<1>("h00")) @[alu.scala 65:17]
        io.out[2] <= asSInt(UInt<1>("h00")) @[alu.scala 66:17]
        io.out[3] <= asSInt(UInt<1>("h00")) @[alu.scala 67:17]
        skip @[alu.scala 63:49]
      else : @[alu.scala 69:49]
        node _T_6 = eq(io.alu, UInt<5>("h04")) @[alu.scala 69:22]
        node _T_7 = eq(io.alu, UInt<5>("h05")) @[alu.scala 69:40]
        node _T_8 = or(_T_6, _T_7) @[alu.scala 69:30]
        when _T_8 : @[alu.scala 69:49]
          io.out[1] <= asSInt(UInt<1>("h00")) @[alu.scala 70:17]
          io.out[2] <= asSInt(UInt<1>("h00")) @[alu.scala 71:17]
          io.out[3] <= asSInt(UInt<1>("h00")) @[alu.scala 72:17]
          node _T_9 = lt(io.a32[0], io.b32[0]) @[alu.scala 73:23]
          when _T_9 : @[alu.scala 73:35]
            io.out[0] <= asSInt(UInt<2>("h01")) @[alu.scala 74:19]
            skip @[alu.scala 73:35]
          else : @[alu.scala 76:17]
            io.out[0] <= asSInt(UInt<1>("h00")) @[alu.scala 77:19]
            skip @[alu.scala 76:17]
          skip @[alu.scala 69:49]
        else : @[alu.scala 80:51]
          node _T_10 = eq(io.alu, UInt<5>("h06")) @[alu.scala 80:22]
          node _T_11 = eq(io.alu, UInt<5>("h07")) @[alu.scala 80:41]
          node _T_12 = or(_T_10, _T_11) @[alu.scala 80:31]
          when _T_12 : @[alu.scala 80:51]
            io.out[1] <= asSInt(UInt<1>("h00")) @[alu.scala 81:17]
            io.out[2] <= asSInt(UInt<1>("h00")) @[alu.scala 82:17]
            io.out[3] <= asSInt(UInt<1>("h00")) @[alu.scala 83:17]
            node _T_13 = asUInt(io.a32[0]) @[alu.scala 84:23]
            node _T_14 = asUInt(io.b32[0]) @[alu.scala 84:42]
            node _T_15 = lt(_T_13, _T_14) @[alu.scala 84:30]
            when _T_15 : @[alu.scala 84:49]
              io.out[0] <= asSInt(UInt<2>("h01")) @[alu.scala 85:19]
              skip @[alu.scala 84:49]
            else : @[alu.scala 87:17]
              io.out[0] <= asSInt(UInt<1>("h00")) @[alu.scala 88:19]
              skip @[alu.scala 87:17]
            skip @[alu.scala 80:51]
          else : @[alu.scala 91:49]
            node _T_16 = eq(io.alu, UInt<5>("h09")) @[alu.scala 91:22]
            node _T_17 = eq(io.alu, UInt<5>("h0a")) @[alu.scala 91:40]
            node _T_18 = or(_T_16, _T_17) @[alu.scala 91:30]
            when _T_18 : @[alu.scala 91:49]
              node _io_out_0_T_5 = xor(io.a32[0], io.b32[0]) @[alu.scala 92:30]
              node _io_out_0_T_6 = asSInt(_io_out_0_T_5) @[alu.scala 92:30]
              io.out[0] <= _io_out_0_T_6 @[alu.scala 92:17]
              io.out[1] <= asSInt(UInt<1>("h00")) @[alu.scala 93:17]
              io.out[2] <= asSInt(UInt<1>("h00")) @[alu.scala 94:17]
              io.out[3] <= asSInt(UInt<1>("h00")) @[alu.scala 95:17]
              skip @[alu.scala 91:49]
            else : @[alu.scala 97:49]
              node _T_19 = eq(io.alu, UInt<5>("h0b")) @[alu.scala 97:22]
              node _T_20 = eq(io.alu, UInt<5>("h0c")) @[alu.scala 97:40]
              node _T_21 = or(_T_19, _T_20) @[alu.scala 97:30]
              when _T_21 : @[alu.scala 97:49]
                node _io_out_0_T_7 = bits(io.b32[0], 15, 0) @[alu.scala 98:42]
                node _io_out_0_T_8 = dshr(io.a32[0], _io_out_0_T_7) @[alu.scala 98:30]
                io.out[0] <= _io_out_0_T_8 @[alu.scala 98:17]
                io.out[1] <= asSInt(UInt<1>("h00")) @[alu.scala 99:17]
                io.out[2] <= asSInt(UInt<1>("h00")) @[alu.scala 100:17]
                io.out[3] <= asSInt(UInt<1>("h00")) @[alu.scala 101:17]
                skip @[alu.scala 97:49]
              else : @[alu.scala 103:47]
                node _T_22 = eq(io.alu, UInt<5>("h0d")) @[alu.scala 103:22]
                node _T_23 = eq(io.alu, UInt<5>("h0e")) @[alu.scala 103:39]
                node _T_24 = or(_T_22, _T_23) @[alu.scala 103:29]
                when _T_24 : @[alu.scala 103:47]
                  node _io_out_0_T_9 = or(io.a32[0], io.b32[0]) @[alu.scala 104:30]
                  node _io_out_0_T_10 = asSInt(_io_out_0_T_9) @[alu.scala 104:30]
                  io.out[0] <= _io_out_0_T_10 @[alu.scala 104:17]
                  io.out[1] <= asSInt(UInt<1>("h00")) @[alu.scala 105:17]
                  io.out[2] <= asSInt(UInt<1>("h00")) @[alu.scala 106:17]
                  io.out[3] <= asSInt(UInt<1>("h00")) @[alu.scala 107:17]
                  skip @[alu.scala 103:47]
                else : @[alu.scala 109:49]
                  node _T_25 = eq(io.alu, UInt<5>("h0f")) @[alu.scala 109:22]
                  node _T_26 = eq(io.alu, UInt<5>("h010")) @[alu.scala 109:40]
                  node _T_27 = or(_T_25, _T_26) @[alu.scala 109:30]
                  when _T_27 : @[alu.scala 109:49]
                    node _io_out_0_T_11 = and(io.a32[0], io.b32[0]) @[alu.scala 110:30]
                    node _io_out_0_T_12 = asSInt(_io_out_0_T_11) @[alu.scala 110:30]
                    io.out[0] <= _io_out_0_T_12 @[alu.scala 110:17]
                    io.out[1] <= asSInt(UInt<1>("h00")) @[alu.scala 111:17]
                    io.out[2] <= asSInt(UInt<1>("h00")) @[alu.scala 112:17]
                    io.out[3] <= asSInt(UInt<1>("h00")) @[alu.scala 113:17]
                    skip @[alu.scala 109:49]
                  else : @[alu.scala 115:30]
                    node _T_28 = eq(io.alu, UInt<5>("h011")) @[alu.scala 115:22]
                    when _T_28 : @[alu.scala 115:30]
                      node _io_out_0_T_13 = sub(io.a32[0], io.b32[0]) @[alu.scala 116:30]
                      node _io_out_0_T_14 = tail(_io_out_0_T_13, 1) @[alu.scala 116:30]
                      node _io_out_0_T_15 = asSInt(_io_out_0_T_14) @[alu.scala 116:30]
                      io.out[0] <= _io_out_0_T_15 @[alu.scala 116:17]
                      io.out[1] <= asSInt(UInt<1>("h00")) @[alu.scala 117:17]
                      io.out[2] <= asSInt(UInt<1>("h00")) @[alu.scala 118:17]
                      io.out[3] <= asSInt(UInt<1>("h00")) @[alu.scala 119:17]
                      skip @[alu.scala 115:30]
                    else : @[alu.scala 121:49]
                      node _T_29 = eq(io.alu, UInt<5>("h012")) @[alu.scala 121:22]
                      node _T_30 = eq(io.alu, UInt<5>("h013")) @[alu.scala 121:40]
                      node _T_31 = or(_T_29, _T_30) @[alu.scala 121:30]
                      when _T_31 : @[alu.scala 121:49]
                        node _io_out_0_T_16 = bits(io.b32[0], 15, 0) @[alu.scala 122:41]
                        node _io_out_0_T_17 = dshr(io.a32[0], _io_out_0_T_16) @[alu.scala 122:29]
                        io.out[0] <= _io_out_0_T_17 @[alu.scala 122:17]
                        io.out[1] <= asSInt(UInt<1>("h00")) @[alu.scala 123:17]
                        io.out[2] <= asSInt(UInt<1>("h00")) @[alu.scala 124:17]
                        io.out[3] <= asSInt(UInt<1>("h00")) @[alu.scala 125:17]
                        skip @[alu.scala 121:49]
                      else : @[alu.scala 127:49]
                        node _T_32 = eq(io.alu, UInt<5>("h018")) @[alu.scala 127:22]
                        node _T_33 = eq(io.alu, UInt<5>("h019")) @[alu.scala 127:40]
                        node _T_34 = or(_T_32, _T_33) @[alu.scala 127:30]
                        when _T_34 : @[alu.scala 127:49]
                          io.out[0] <= io.a32[0] @[alu.scala 128:17]
                          io.out[1] <= asSInt(UInt<1>("h00")) @[alu.scala 129:17]
                          io.out[2] <= asSInt(UInt<1>("h00")) @[alu.scala 130:17]
                          io.out[3] <= asSInt(UInt<1>("h00")) @[alu.scala 131:17]
                          skip @[alu.scala 127:49]
                        else : @[alu.scala 133:29]
                          node _T_35 = eq(io.alu, UInt<5>("h01b")) @[alu.scala 133:22]
                          when _T_35 : @[alu.scala 133:29]
                            node _io_out_0_T_18 = add(io.a32[0], io.b32[0]) @[alu.scala 134:30]
                            node _io_out_0_T_19 = tail(_io_out_0_T_18, 1) @[alu.scala 134:30]
                            node _io_out_0_T_20 = asSInt(_io_out_0_T_19) @[alu.scala 134:30]
                            io.out[0] <= _io_out_0_T_20 @[alu.scala 134:17]
                            io.out[1] <= asSInt(UInt<1>("h00")) @[alu.scala 135:17]
                            io.out[2] <= asSInt(UInt<1>("h00")) @[alu.scala 136:17]
                            io.out[3] <= asSInt(UInt<1>("h00")) @[alu.scala 137:17]
                            skip @[alu.scala 133:29]
                          else : @[alu.scala 139:33]
                            node _T_36 = eq(io.alu, UInt<5>("h01d")) @[alu.scala 139:22]
                            when _T_36 : @[alu.scala 139:33]
                              io.out[1] <= asSInt(UInt<1>("h00")) @[alu.scala 140:17]
                              io.out[2] <= asSInt(UInt<1>("h00")) @[alu.scala 141:17]
                              io.out[3] <= asSInt(UInt<1>("h00")) @[alu.scala 142:17]
                              node _T_37 = asUInt(io.a32[0]) @[alu.scala 143:22]
                              node _T_38 = asUInt(io.b32[0]) @[alu.scala 143:42]
                              node _T_39 = leq(_T_37, _T_38) @[alu.scala 143:29]
                              when _T_39 : @[alu.scala 143:49]
                                io.out[0] <= io.a32[0] @[alu.scala 144:19]
                                skip @[alu.scala 143:49]
                              else : @[alu.scala 146:48]
                                node _T_40 = mul(asSInt(UInt<3>("h02")), io.b32[0]) @[alu.scala 146:35]
                                node _T_41 = geq(io.a32[0], _T_40) @[alu.scala 146:27]
                                when _T_41 : @[alu.scala 146:48]
                                  io.out[0] <= io.b32[0] @[alu.scala 147:19]
                                  skip @[alu.scala 146:48]
                                else : @[alu.scala 149:17]
                                  io.out[0] <= asSInt(UInt<1>("h00")) @[alu.scala 150:19]
                                  skip @[alu.scala 149:17]
                              skip @[alu.scala 139:33]
                            else : @[alu.scala 153:32]
                              node _T_42 = eq(io.alu, UInt<5>("h01e")) @[alu.scala 153:22]
                              when _T_42 : @[alu.scala 153:32]
                                io.out[0] <= io.a32[0] @[alu.scala 154:17]
                                node _io_out_1_T = add(io.a32[0], asSInt(UInt<4>("h04"))) @[alu.scala 155:29]
                                node _io_out_1_T_1 = tail(_io_out_1_T, 1) @[alu.scala 155:29]
                                node _io_out_1_T_2 = asSInt(_io_out_1_T_1) @[alu.scala 155:29]
                                io.out[1] <= _io_out_1_T_2 @[alu.scala 155:17]
                                node _io_out_2_T = add(io.a32[0], asSInt(UInt<5>("h08"))) @[alu.scala 156:29]
                                node _io_out_2_T_1 = tail(_io_out_2_T, 1) @[alu.scala 156:29]
                                node _io_out_2_T_2 = asSInt(_io_out_2_T_1) @[alu.scala 156:29]
                                io.out[2] <= _io_out_2_T_2 @[alu.scala 156:17]
                                node _io_out_3_T = add(io.a32[0], asSInt(UInt<5>("h0c"))) @[alu.scala 157:29]
                                node _io_out_3_T_1 = tail(_io_out_3_T, 1) @[alu.scala 157:29]
                                node _io_out_3_T_2 = asSInt(_io_out_3_T_1) @[alu.scala 157:29]
                                io.out[3] <= _io_out_3_T_2 @[alu.scala 157:17]
                                skip @[alu.scala 153:32]
                              else : @[alu.scala 159:15]
                                io.out[0] <= asSInt(UInt<1>("h00")) @[alu.scala 160:17]
                                io.out[1] <= asSInt(UInt<1>("h00")) @[alu.scala 161:17]
                                io.out[2] <= asSInt(UInt<1>("h00")) @[alu.scala 162:17]
                                io.out[3] <= asSInt(UInt<1>("h00")) @[alu.scala 163:17]
                                skip @[alu.scala 159:15]
    node _io_vec_out_T = bits(io.vs1, 127, 96) @[alu.scala 167:29]
    node _io_vec_out_T_1 = bits(io.vs2, 127, 96) @[alu.scala 167:44]
    node _io_vec_out_T_2 = add(_io_vec_out_T, _io_vec_out_T_1) @[alu.scala 167:37]
    node io_vec_out_hi_hi = tail(_io_vec_out_T_2, 1) @[alu.scala 167:37]
    node _io_vec_out_T_3 = bits(io.vs1, 95, 64) @[alu.scala 167:59]
    node _io_vec_out_T_4 = bits(io.vs2, 95, 64) @[alu.scala 167:73]
    node _io_vec_out_T_5 = add(_io_vec_out_T_3, _io_vec_out_T_4) @[alu.scala 167:66]
    node io_vec_out_hi_lo = tail(_io_vec_out_T_5, 1) @[alu.scala 167:66]
    node _io_vec_out_T_6 = bits(io.vs1, 63, 32) @[alu.scala 167:87]
    node _io_vec_out_T_7 = bits(io.vs2, 63, 32) @[alu.scala 167:101]
    node _io_vec_out_T_8 = add(_io_vec_out_T_6, _io_vec_out_T_7) @[alu.scala 167:94]
    node io_vec_out_lo_hi = tail(_io_vec_out_T_8, 1) @[alu.scala 167:94]
    node _io_vec_out_T_9 = bits(io.vs1, 31, 0) @[alu.scala 167:115]
    node _io_vec_out_T_10 = bits(io.vs2, 31, 0) @[alu.scala 167:128]
    node _io_vec_out_T_11 = add(_io_vec_out_T_9, _io_vec_out_T_10) @[alu.scala 167:121]
    node io_vec_out_lo_lo = tail(_io_vec_out_T_11, 1) @[alu.scala 167:121]
    node io_vec_out_lo = cat(io_vec_out_lo_hi, io_vec_out_lo_lo) @[Cat.scala 30:58]
    node io_vec_out_hi = cat(io_vec_out_hi_hi, io_vec_out_hi_lo) @[Cat.scala 30:58]
    node _io_vec_out_T_12 = cat(io_vec_out_hi, io_vec_out_lo) @[Cat.scala 30:58]
    node _io_vec_out_T_13 = asSInt(_io_vec_out_T_12) @[alu.scala 167:136]
    io.vec_out <= _io_vec_out_T_13 @[alu.scala 167:16]
    node _io_branch_T = eq(io.alu, UInt<5>("h014")) @[alu.scala 181:29]
    node _io_branch_T_1 = eq(io.a32[0], io.b32[0]) @[alu.scala 181:48]
    node _io_branch_T_2 = eq(io.alu, UInt<5>("h015")) @[alu.scala 182:16]
    node _io_branch_T_3 = neq(io.a32[0], io.b32[0]) @[alu.scala 182:34]
    node _io_branch_T_4 = eq(io.alu, UInt<5>("h016")) @[alu.scala 183:16]
    node _io_branch_T_5 = lt(io.a32[0], io.b32[0]) @[alu.scala 183:34]
    node _io_branch_T_6 = eq(io.alu, UInt<5>("h017")) @[alu.scala 184:16]
    node _io_branch_T_7 = asUInt(io.a32[0]) @[alu.scala 184:35]
    node _io_branch_T_8 = asUInt(io.b32[0]) @[alu.scala 184:55]
    node _io_branch_T_9 = geq(_io_branch_T_7, _io_branch_T_8) @[alu.scala 184:42]
    node _io_branch_T_10 = eq(io.alu, UInt<5>("h08")) @[alu.scala 185:16]
    node _io_branch_T_11 = asUInt(io.a32[0]) @[alu.scala 185:35]
    node _io_branch_T_12 = asUInt(io.b32[0]) @[alu.scala 185:54]
    node _io_branch_T_13 = lt(_io_branch_T_11, _io_branch_T_12) @[alu.scala 185:42]
    node _io_branch_T_14 = eq(io.alu, UInt<5>("h01a")) @[alu.scala 186:16]
    node _io_branch_T_15 = geq(io.a32[0], io.b32[0]) @[alu.scala 186:34]
    node _io_branch_T_16 = mux(_io_branch_T_14, _io_branch_T_15, UInt<1>("h00")) @[alu.scala 186:8]
    node _io_branch_T_17 = mux(_io_branch_T_10, _io_branch_T_13, _io_branch_T_16) @[alu.scala 185:8]
    node _io_branch_T_18 = mux(_io_branch_T_6, _io_branch_T_9, _io_branch_T_17) @[alu.scala 184:8]
    node _io_branch_T_19 = mux(_io_branch_T_4, _io_branch_T_5, _io_branch_T_18) @[alu.scala 183:8]
    node _io_branch_T_20 = mux(_io_branch_T_2, _io_branch_T_3, _io_branch_T_19) @[alu.scala 182:8]
    node _io_branch_T_21 = mux(_io_branch_T, _io_branch_T_1, _io_branch_T_20) @[alu.scala 181:21]
    io.branch <= _io_branch_T_21 @[alu.scala 181:15]
    
  module control_unit : 
    input clock : Clock
    input reset : Reset
    output io : {flip op_code : UInt<7>, flip rd : UInt<5>, flip rs1 : UInt<5>, flip fn3 : UInt<3>, mem_write : UInt<1>, branch : UInt<1>, mem_read : UInt<1>, reg_write : UInt<1>, vec_write : UInt<1>, mem_data_sel : UInt<4>, operand_a : UInt<4>, operand_b : UInt<4>, extend_sel : UInt<4>, next_pc_selector : UInt<4>, stall_true : UInt<32>}
    
    node _T = eq(io.op_code, UInt<6>("h033")) @[control_unit.scala 28:20]
    when _T : @[control_unit.scala 28:36]
      io.mem_write <= UInt<1>("h00") @[control_unit.scala 29:22]
      io.branch <= UInt<1>("h00") @[control_unit.scala 30:19]
      io.mem_read <= UInt<1>("h00") @[control_unit.scala 31:21]
      io.reg_write <= UInt<1>("h01") @[control_unit.scala 32:22]
      io.vec_write <= UInt<1>("h00") @[control_unit.scala 33:22]
      io.mem_data_sel <= UInt<1>("h00") @[control_unit.scala 34:24]
      io.operand_a <= UInt<1>("h00") @[control_unit.scala 35:22]
      io.operand_b <= UInt<1>("h00") @[control_unit.scala 36:22]
      io.extend_sel <= UInt<1>("h00") @[control_unit.scala 37:23]
      io.next_pc_selector <= UInt<1>("h00") @[control_unit.scala 38:29]
      io.stall_true <= UInt<1>("h00") @[control_unit.scala 39:31]
      skip @[control_unit.scala 28:36]
    else : @[control_unit.scala 45:41]
      node _T_1 = eq(io.op_code, UInt<5>("h013")) @[control_unit.scala 45:25]
      when _T_1 : @[control_unit.scala 45:41]
        io.mem_write <= UInt<1>("h00") @[control_unit.scala 46:22]
        io.branch <= UInt<1>("h00") @[control_unit.scala 47:19]
        io.mem_read <= UInt<1>("h00") @[control_unit.scala 48:21]
        io.reg_write <= UInt<1>("h01") @[control_unit.scala 49:22]
        io.vec_write <= UInt<1>("h00") @[control_unit.scala 50:22]
        io.mem_data_sel <= UInt<1>("h00") @[control_unit.scala 51:24]
        io.operand_a <= UInt<1>("h00") @[control_unit.scala 52:22]
        io.operand_b <= UInt<1>("h01") @[control_unit.scala 53:22]
        io.extend_sel <= UInt<1>("h00") @[control_unit.scala 54:23]
        io.next_pc_selector <= UInt<1>("h00") @[control_unit.scala 55:29]
        io.stall_true <= UInt<1>("h00") @[control_unit.scala 56:31]
        skip @[control_unit.scala 45:41]
      else : @[control_unit.scala 62:41]
        node _T_2 = eq(io.op_code, UInt<6>("h023")) @[control_unit.scala 62:25]
        when _T_2 : @[control_unit.scala 62:41]
          io.mem_write <= UInt<1>("h01") @[control_unit.scala 63:22]
          io.branch <= UInt<1>("h00") @[control_unit.scala 64:19]
          io.mem_read <= UInt<1>("h00") @[control_unit.scala 65:21]
          io.reg_write <= UInt<1>("h00") @[control_unit.scala 66:22]
          io.vec_write <= UInt<1>("h00") @[control_unit.scala 67:22]
          io.mem_data_sel <= UInt<1>("h00") @[control_unit.scala 68:24]
          io.operand_a <= UInt<1>("h00") @[control_unit.scala 69:22]
          io.operand_b <= UInt<1>("h01") @[control_unit.scala 70:22]
          io.extend_sel <= UInt<2>("h03") @[control_unit.scala 71:23]
          io.next_pc_selector <= UInt<1>("h00") @[control_unit.scala 72:29]
          io.stall_true <= UInt<1>("h00") @[control_unit.scala 73:31]
          skip @[control_unit.scala 62:41]
        else : @[control_unit.scala 79:41]
          node _T_3 = eq(io.op_code, UInt<7>("h063")) @[control_unit.scala 79:25]
          when _T_3 : @[control_unit.scala 79:41]
            io.mem_write <= UInt<1>("h00") @[control_unit.scala 80:22]
            io.branch <= UInt<1>("h01") @[control_unit.scala 81:19]
            io.mem_read <= UInt<1>("h00") @[control_unit.scala 82:21]
            io.reg_write <= UInt<1>("h00") @[control_unit.scala 83:22]
            io.vec_write <= UInt<1>("h00") @[control_unit.scala 84:22]
            io.mem_data_sel <= UInt<1>("h00") @[control_unit.scala 85:24]
            io.operand_a <= UInt<1>("h00") @[control_unit.scala 86:22]
            io.operand_b <= UInt<1>("h00") @[control_unit.scala 87:22]
            io.extend_sel <= UInt<1>("h00") @[control_unit.scala 88:23]
            io.next_pc_selector <= UInt<1>("h01") @[control_unit.scala 89:29]
            io.stall_true <= UInt<1>("h00") @[control_unit.scala 90:31]
            skip @[control_unit.scala 79:41]
          else : @[control_unit.scala 96:41]
            node _T_4 = eq(io.op_code, UInt<6>("h037")) @[control_unit.scala 96:25]
            when _T_4 : @[control_unit.scala 96:41]
              io.mem_write <= UInt<1>("h00") @[control_unit.scala 97:22]
              io.branch <= UInt<1>("h00") @[control_unit.scala 98:19]
              io.mem_read <= UInt<1>("h00") @[control_unit.scala 99:21]
              io.reg_write <= UInt<1>("h01") @[control_unit.scala 100:22]
              io.vec_write <= UInt<1>("h00") @[control_unit.scala 101:22]
              io.mem_data_sel <= UInt<1>("h00") @[control_unit.scala 102:24]
              io.operand_a <= UInt<1>("h00") @[control_unit.scala 103:22]
              io.operand_b <= UInt<1>("h01") @[control_unit.scala 104:22]
              io.extend_sel <= UInt<1>("h00") @[control_unit.scala 105:23]
              io.next_pc_selector <= UInt<1>("h00") @[control_unit.scala 106:29]
              io.stall_true <= UInt<1>("h00") @[control_unit.scala 107:31]
              skip @[control_unit.scala 96:41]
            else : @[control_unit.scala 112:41]
              node _T_5 = eq(io.op_code, UInt<7>("h06f")) @[control_unit.scala 112:25]
              when _T_5 : @[control_unit.scala 112:41]
                io.mem_write <= UInt<1>("h00") @[control_unit.scala 113:22]
                io.branch <= UInt<1>("h00") @[control_unit.scala 114:19]
                io.mem_read <= UInt<1>("h00") @[control_unit.scala 115:21]
                io.reg_write <= UInt<1>("h01") @[control_unit.scala 116:22]
                io.vec_write <= UInt<1>("h00") @[control_unit.scala 117:22]
                io.mem_data_sel <= UInt<1>("h00") @[control_unit.scala 118:24]
                io.operand_a <= UInt<2>("h02") @[control_unit.scala 119:22]
                io.operand_b <= UInt<1>("h00") @[control_unit.scala 120:22]
                io.extend_sel <= UInt<1>("h00") @[control_unit.scala 121:23]
                io.next_pc_selector <= UInt<2>("h02") @[control_unit.scala 122:29]
                io.stall_true <= UInt<1>("h00") @[control_unit.scala 123:31]
                skip @[control_unit.scala 112:41]
              else : @[control_unit.scala 129:41]
                node _T_6 = eq(io.op_code, UInt<7>("h067")) @[control_unit.scala 129:25]
                when _T_6 : @[control_unit.scala 129:41]
                  io.mem_write <= UInt<1>("h00") @[control_unit.scala 130:22]
                  io.branch <= UInt<1>("h00") @[control_unit.scala 131:19]
                  io.mem_read <= UInt<1>("h00") @[control_unit.scala 132:21]
                  io.reg_write <= UInt<1>("h01") @[control_unit.scala 133:22]
                  io.vec_write <= UInt<1>("h00") @[control_unit.scala 134:22]
                  io.mem_data_sel <= UInt<1>("h00") @[control_unit.scala 135:24]
                  io.operand_a <= UInt<2>("h02") @[control_unit.scala 136:22]
                  io.operand_b <= UInt<1>("h00") @[control_unit.scala 137:22]
                  io.extend_sel <= UInt<1>("h00") @[control_unit.scala 138:23]
                  io.next_pc_selector <= UInt<2>("h03") @[control_unit.scala 139:29]
                  io.stall_true <= UInt<1>("h00") @[control_unit.scala 140:31]
                  skip @[control_unit.scala 129:41]
                else : @[control_unit.scala 146:41]
                  node _T_7 = eq(io.op_code, UInt<2>("h03")) @[control_unit.scala 146:25]
                  when _T_7 : @[control_unit.scala 146:41]
                    io.mem_write <= UInt<1>("h00") @[control_unit.scala 147:22]
                    io.branch <= UInt<1>("h00") @[control_unit.scala 148:19]
                    io.mem_read <= UInt<1>("h01") @[control_unit.scala 149:21]
                    io.reg_write <= UInt<1>("h01") @[control_unit.scala 150:22]
                    io.vec_write <= UInt<1>("h00") @[control_unit.scala 151:22]
                    io.mem_data_sel <= UInt<1>("h01") @[control_unit.scala 152:24]
                    io.operand_a <= UInt<1>("h00") @[control_unit.scala 153:22]
                    io.operand_b <= UInt<1>("h01") @[control_unit.scala 154:22]
                    io.extend_sel <= UInt<1>("h00") @[control_unit.scala 155:23]
                    io.next_pc_selector <= UInt<1>("h00") @[control_unit.scala 156:29]
                    io.stall_true <= UInt<1>("h00") @[control_unit.scala 157:31]
                    skip @[control_unit.scala 146:41]
                  else : @[control_unit.scala 161:62]
                    node _T_8 = eq(io.op_code, UInt<7>("h057")) @[control_unit.scala 161:25]
                    node _T_9 = eq(io.fn3, UInt<3>("h07")) @[control_unit.scala 161:50]
                    node _T_10 = and(_T_8, _T_9) @[control_unit.scala 161:41]
                    when _T_10 : @[control_unit.scala 161:62]
                      io.mem_write <= UInt<1>("h00") @[control_unit.scala 162:22]
                      io.branch <= UInt<1>("h00") @[control_unit.scala 163:19]
                      io.mem_read <= UInt<1>("h00") @[control_unit.scala 164:21]
                      io.reg_write <= UInt<1>("h01") @[control_unit.scala 165:22]
                      io.vec_write <= UInt<1>("h00") @[control_unit.scala 166:22]
                      io.mem_data_sel <= UInt<1>("h00") @[control_unit.scala 167:24]
                      io.operand_b <= UInt<2>("h02") @[control_unit.scala 168:22]
                      io.extend_sel <= UInt<1>("h00") @[control_unit.scala 169:23]
                      io.next_pc_selector <= UInt<1>("h00") @[control_unit.scala 170:29]
                      io.stall_true <= UInt<1>("h00") @[control_unit.scala 171:31]
                      node _T_11 = eq(io.rs1, UInt<1>("h00")) @[control_unit.scala 173:22]
                      node _T_12 = eq(io.rd, UInt<1>("h00")) @[control_unit.scala 173:38]
                      node _T_13 = and(_T_11, _T_12) @[control_unit.scala 173:30]
                      when _T_13 : @[control_unit.scala 173:45]
                        io.operand_a <= UInt<1>("h00") @[control_unit.scala 174:26]
                        skip @[control_unit.scala 173:45]
                      else : @[control_unit.scala 176:50]
                        node _T_14 = eq(io.rs1, UInt<1>("h00")) @[control_unit.scala 176:26]
                        node _T_15 = neq(io.rd, UInt<1>("h00")) @[control_unit.scala 176:42]
                        node _T_16 = and(_T_14, _T_15) @[control_unit.scala 176:34]
                        when _T_16 : @[control_unit.scala 176:50]
                          io.operand_a <= UInt<1>("h00") @[control_unit.scala 177:26]
                          skip @[control_unit.scala 176:50]
                        else : @[control_unit.scala 179:19]
                          io.operand_a <= UInt<1>("h00") @[control_unit.scala 180:26]
                          skip @[control_unit.scala 179:19]
                      skip @[control_unit.scala 161:62]
                    else : @[control_unit.scala 185:43]
                      node _T_17 = eq(io.op_code, UInt<3>("h07")) @[control_unit.scala 185:26]
                      when _T_17 : @[control_unit.scala 185:43]
                        io.mem_write <= UInt<1>("h00") @[control_unit.scala 186:22]
                        io.branch <= UInt<1>("h00") @[control_unit.scala 187:19]
                        io.mem_read <= UInt<1>("h01") @[control_unit.scala 188:21]
                        io.reg_write <= UInt<1>("h00") @[control_unit.scala 189:22]
                        io.mem_data_sel <= UInt<2>("h02") @[control_unit.scala 190:24]
                        io.operand_a <= UInt<1>("h00") @[control_unit.scala 191:22]
                        io.operand_b <= UInt<2>("h02") @[control_unit.scala 192:22]
                        io.extend_sel <= UInt<1>("h00") @[control_unit.scala 193:23]
                        reg reg123 : UInt<32>, clock with : (reset => (reset, UInt<32>("h03"))) @[control_unit.scala 195:29]
                        node _T_18 = gt(reg123, UInt<1>("h00")) @[control_unit.scala 196:21]
                        node _T_19 = eq(io.op_code, UInt<3>("h07")) @[control_unit.scala 196:40]
                        node _T_20 = and(_T_18, _T_19) @[control_unit.scala 196:27]
                        when _T_20 : @[control_unit.scala 196:56]
                          io.next_pc_selector <= UInt<3>("h04") @[control_unit.scala 197:33]
                          node _reg123_T = sub(reg123, UInt<1>("h01")) @[control_unit.scala 198:30]
                          node _reg123_T_1 = tail(_reg123_T, 1) @[control_unit.scala 198:30]
                          reg123 <= _reg123_T_1 @[control_unit.scala 198:20]
                          io.vec_write <= UInt<1>("h00") @[control_unit.scala 199:26]
                          io.stall_true <= reg123 @[control_unit.scala 200:27]
                          skip @[control_unit.scala 196:56]
                        else : @[control_unit.scala 203:19]
                          io.vec_write <= UInt<1>("h01") @[control_unit.scala 204:26]
                          io.next_pc_selector <= UInt<1>("h00") @[control_unit.scala 205:33]
                          io.stall_true <= UInt<1>("h00") @[control_unit.scala 206:27]
                          skip @[control_unit.scala 203:19]
                        skip @[control_unit.scala 185:43]
                      else : @[control_unit.scala 210:41]
                        node _T_21 = eq(io.op_code, UInt<6>("h027")) @[control_unit.scala 210:25]
                        when _T_21 : @[control_unit.scala 210:41]
                          io.mem_write <= UInt<1>("h01") @[control_unit.scala 211:22]
                          io.branch <= UInt<1>("h00") @[control_unit.scala 212:19]
                          io.mem_read <= UInt<1>("h00") @[control_unit.scala 213:21]
                          io.reg_write <= UInt<1>("h00") @[control_unit.scala 214:22]
                          io.vec_write <= UInt<1>("h00") @[control_unit.scala 215:22]
                          io.mem_data_sel <= UInt<1>("h00") @[control_unit.scala 216:24]
                          io.operand_a <= UInt<1>("h00") @[control_unit.scala 217:22]
                          io.operand_b <= UInt<1>("h01") @[control_unit.scala 218:22]
                          io.extend_sel <= UInt<2>("h03") @[control_unit.scala 219:23]
                          io.next_pc_selector <= UInt<1>("h00") @[control_unit.scala 220:29]
                          io.stall_true <= UInt<1>("h00") @[control_unit.scala 221:23]
                          skip @[control_unit.scala 210:41]
                        else : @[control_unit.scala 224:62]
                          node _T_22 = eq(io.op_code, UInt<7>("h057")) @[control_unit.scala 224:25]
                          node _T_23 = eq(io.fn3, UInt<1>("h00")) @[control_unit.scala 224:50]
                          node _T_24 = and(_T_22, _T_23) @[control_unit.scala 224:41]
                          when _T_24 : @[control_unit.scala 224:62]
                            io.mem_write <= UInt<1>("h00") @[control_unit.scala 225:22]
                            io.branch <= UInt<1>("h00") @[control_unit.scala 226:19]
                            io.mem_read <= UInt<1>("h00") @[control_unit.scala 227:21]
                            io.reg_write <= UInt<1>("h00") @[control_unit.scala 228:22]
                            io.vec_write <= UInt<1>("h01") @[control_unit.scala 229:22]
                            io.mem_data_sel <= UInt<2>("h03") @[control_unit.scala 230:24]
                            io.operand_a <= UInt<3>("h04") @[control_unit.scala 231:22]
                            io.operand_b <= UInt<2>("h03") @[control_unit.scala 232:22]
                            io.extend_sel <= UInt<1>("h00") @[control_unit.scala 233:23]
                            io.next_pc_selector <= UInt<1>("h00") @[control_unit.scala 234:29]
                            io.stall_true <= UInt<1>("h00") @[control_unit.scala 235:23]
                            skip @[control_unit.scala 224:62]
                          else : @[control_unit.scala 238:15]
                            io.mem_write <= UInt<1>("h00") @[control_unit.scala 239:22]
                            io.branch <= UInt<1>("h00") @[control_unit.scala 240:19]
                            io.mem_read <= UInt<1>("h00") @[control_unit.scala 241:21]
                            io.reg_write <= UInt<1>("h00") @[control_unit.scala 242:22]
                            io.vec_write <= UInt<1>("h00") @[control_unit.scala 243:22]
                            io.mem_data_sel <= UInt<1>("h00") @[control_unit.scala 244:25]
                            io.operand_a <= UInt<1>("h00") @[control_unit.scala 245:22]
                            io.operand_b <= UInt<1>("h00") @[control_unit.scala 246:22]
                            io.extend_sel <= UInt<1>("h00") @[control_unit.scala 247:23]
                            io.next_pc_selector <= UInt<1>("h00") @[control_unit.scala 248:29]
                            io.stall_true <= UInt<1>("h00") @[control_unit.scala 249:31]
                            skip @[control_unit.scala 238:15]
    
  module immediate_instruction : 
    input clock : Clock
    input reset : Reset
    output io : {flip i_instruction : UInt<32>, out : SInt<32>, flip pc_in : UInt<32>, out_j_b : SInt<32>, flip stall_in : UInt<32>, stall : UInt<32>}
    
    node op_code = bits(io.i_instruction, 6, 0) @[immediate_instruction.scala 15:35]
    node _T = eq(op_code, UInt<5>("h013")) @[immediate_instruction.scala 19:18]
    node _T_1 = eq(op_code, UInt<7>("h067")) @[immediate_instruction.scala 19:44]
    node _T_2 = or(_T, _T_1) @[immediate_instruction.scala 19:34]
    node _T_3 = eq(op_code, UInt<2>("h03")) @[immediate_instruction.scala 19:70]
    node _T_4 = or(_T_2, _T_3) @[immediate_instruction.scala 19:60]
    when _T_4 : @[immediate_instruction.scala 19:86]
      node _io_out_T = bits(io.i_instruction, 31, 20) @[immediate_instruction.scala 20:35]
      node _io_out_T_1 = asSInt(_io_out_T) @[immediate_instruction.scala 20:43]
      io.out <= _io_out_T_1 @[immediate_instruction.scala 20:16]
      io.out_j_b <= asSInt(UInt<1>("h00")) @[immediate_instruction.scala 21:20]
      io.stall <= UInt<1>("h00") @[immediate_instruction.scala 22:18]
      skip @[immediate_instruction.scala 19:86]
    else : @[immediate_instruction.scala 25:38]
      node _T_5 = eq(op_code, UInt<6>("h023")) @[immediate_instruction.scala 25:22]
      when _T_5 : @[immediate_instruction.scala 25:38]
        node io_out_hi = bits(io.i_instruction, 31, 25) @[immediate_instruction.scala 26:40]
        node io_out_lo = bits(io.i_instruction, 11, 7) @[immediate_instruction.scala 26:64]
        node _io_out_T_2 = cat(io_out_hi, io_out_lo) @[Cat.scala 30:58]
        node _io_out_T_3 = asSInt(_io_out_T_2) @[immediate_instruction.scala 26:73]
        io.out <= _io_out_T_3 @[immediate_instruction.scala 26:16]
        io.out_j_b <= asSInt(UInt<1>("h00")) @[immediate_instruction.scala 27:20]
        io.stall <= UInt<1>("h00") @[immediate_instruction.scala 28:18]
        skip @[immediate_instruction.scala 25:38]
      else : @[immediate_instruction.scala 31:38]
        node _T_6 = eq(op_code, UInt<7>("h063")) @[immediate_instruction.scala 31:22]
        when _T_6 : @[immediate_instruction.scala 31:38]
          node b_hi_hi_hi = bits(io.i_instruction, 31, 31) @[immediate_instruction.scala 32:37]
          node b_hi_hi_lo = bits(io.i_instruction, 7, 7) @[immediate_instruction.scala 32:58]
          node b_hi_lo = bits(io.i_instruction, 30, 25) @[immediate_instruction.scala 32:78]
          node b_lo_hi = bits(io.i_instruction, 11, 8) @[immediate_instruction.scala 32:102]
          node b_lo = cat(b_lo_hi, UInt<1>("h00")) @[Cat.scala 30:58]
          node b_hi_hi = cat(b_hi_hi_hi, b_hi_hi_lo) @[Cat.scala 30:58]
          node b_hi = cat(b_hi_hi, b_hi_lo) @[Cat.scala 30:58]
          node _b_T = cat(b_hi, b_lo) @[Cat.scala 30:58]
          node b = asSInt(_b_T) @[immediate_instruction.scala 32:117]
          node _io_out_j_b_T = asSInt(io.pc_in) @[immediate_instruction.scala 33:36]
          node _io_out_j_b_T_1 = add(b, _io_out_j_b_T) @[immediate_instruction.scala 33:25]
          node _io_out_j_b_T_2 = tail(_io_out_j_b_T_1, 1) @[immediate_instruction.scala 33:25]
          node _io_out_j_b_T_3 = asSInt(_io_out_j_b_T_2) @[immediate_instruction.scala 33:25]
          io.out_j_b <= _io_out_j_b_T_3 @[immediate_instruction.scala 33:20]
          io.out <= asSInt(UInt<1>("h00")) @[immediate_instruction.scala 34:16]
          io.stall <= UInt<1>("h00") @[immediate_instruction.scala 35:18]
          skip @[immediate_instruction.scala 31:38]
        else : @[immediate_instruction.scala 38:38]
          node _T_7 = eq(op_code, UInt<6>("h037")) @[immediate_instruction.scala 38:22]
          when _T_7 : @[immediate_instruction.scala 38:38]
            node io_out_hi_1 = bits(io.i_instruction, 31, 12) @[immediate_instruction.scala 39:40]
            node _io_out_T_4 = cat(io_out_hi_1, UInt<1>("h00")) @[Cat.scala 30:58]
            node _io_out_T_5 = asSInt(_io_out_T_4) @[immediate_instruction.scala 39:67]
            io.out <= _io_out_T_5 @[immediate_instruction.scala 39:16]
            io.out_j_b <= asSInt(UInt<1>("h00")) @[immediate_instruction.scala 40:20]
            io.stall <= UInt<1>("h00") @[immediate_instruction.scala 41:18]
            skip @[immediate_instruction.scala 38:38]
          else : @[immediate_instruction.scala 44:38]
            node _T_8 = eq(op_code, UInt<7>("h06f")) @[immediate_instruction.scala 44:22]
            when _T_8 : @[immediate_instruction.scala 44:38]
              node a_hi_hi_hi = bits(io.i_instruction, 31, 31) @[immediate_instruction.scala 45:37]
              node a_hi_hi_lo = bits(io.i_instruction, 19, 12) @[immediate_instruction.scala 45:58]
              node a_hi_lo = bits(io.i_instruction, 20, 20) @[immediate_instruction.scala 45:82]
              node a_lo_hi = bits(io.i_instruction, 30, 21) @[immediate_instruction.scala 45:103]
              node a_lo = cat(a_lo_hi, UInt<1>("h00")) @[Cat.scala 30:58]
              node a_hi_hi = cat(a_hi_hi_hi, a_hi_hi_lo) @[Cat.scala 30:58]
              node a_hi = cat(a_hi_hi, a_hi_lo) @[Cat.scala 30:58]
              node a = cat(a_hi, a_lo) @[Cat.scala 30:58]
              node _io_out_j_b_T_4 = asSInt(a) @[immediate_instruction.scala 46:25]
              node _io_out_j_b_T_5 = asSInt(io.pc_in) @[immediate_instruction.scala 46:43]
              node _io_out_j_b_T_6 = add(_io_out_j_b_T_4, _io_out_j_b_T_5) @[immediate_instruction.scala 46:32]
              node _io_out_j_b_T_7 = tail(_io_out_j_b_T_6, 1) @[immediate_instruction.scala 46:32]
              node _io_out_j_b_T_8 = asSInt(_io_out_j_b_T_7) @[immediate_instruction.scala 46:32]
              io.out_j_b <= _io_out_j_b_T_8 @[immediate_instruction.scala 46:20]
              io.out <= asSInt(UInt<1>("h00")) @[immediate_instruction.scala 47:16]
              io.stall <= UInt<1>("h00") @[immediate_instruction.scala 48:18]
              skip @[immediate_instruction.scala 44:38]
            else : @[immediate_instruction.scala 51:15]
              io.out <= asSInt(UInt<1>("h00")) @[immediate_instruction.scala 52:16]
              io.out_j_b <= asSInt(UInt<1>("h00")) @[immediate_instruction.scala 53:20]
              io.stall <= UInt<1>("h00") @[immediate_instruction.scala 54:18]
              skip @[immediate_instruction.scala 51:15]
    
  module instr_memory : 
    input clock : Clock
    input reset : Reset
    output io : {flip address : UInt<32>, r_data : UInt<32>}
    
    cmem memory : UInt<32>[1024] @[instr_memory.scala 13:21]
    node _io_r_data_T = bits(io.address, 9, 0) @[instr_memory.scala 15:29]
    read mport io_r_data_MPORT = memory[_io_r_data_T], clock @[instr_memory.scala 15:29]
    io.r_data <= io_r_data_MPORT @[instr_memory.scala 15:15]
    
  module register_file : 
    input clock : Clock
    input reset : Reset
    output io : {flip rs1_in : UInt<5>, flip rs2_in : UInt<5>, flip rd : UInt<5>, flip reg_enable : UInt<1>, flip reg_data : SInt<32>, rs1_out : SInt<32>, rs2_out : SInt<32>}
    
    wire _regs_WIRE : SInt<32>[32] @[register_file.scala 21:31]
    _regs_WIRE[0] <= asSInt(UInt<32>("h00")) @[register_file.scala 21:31]
    _regs_WIRE[1] <= asSInt(UInt<32>("h00")) @[register_file.scala 21:31]
    _regs_WIRE[2] <= asSInt(UInt<32>("h00")) @[register_file.scala 21:31]
    _regs_WIRE[3] <= asSInt(UInt<32>("h00")) @[register_file.scala 21:31]
    _regs_WIRE[4] <= asSInt(UInt<32>("h00")) @[register_file.scala 21:31]
    _regs_WIRE[5] <= asSInt(UInt<32>("h00")) @[register_file.scala 21:31]
    _regs_WIRE[6] <= asSInt(UInt<32>("h00")) @[register_file.scala 21:31]
    _regs_WIRE[7] <= asSInt(UInt<32>("h00")) @[register_file.scala 21:31]
    _regs_WIRE[8] <= asSInt(UInt<32>("h00")) @[register_file.scala 21:31]
    _regs_WIRE[9] <= asSInt(UInt<32>("h00")) @[register_file.scala 21:31]
    _regs_WIRE[10] <= asSInt(UInt<32>("h00")) @[register_file.scala 21:31]
    _regs_WIRE[11] <= asSInt(UInt<32>("h00")) @[register_file.scala 21:31]
    _regs_WIRE[12] <= asSInt(UInt<32>("h00")) @[register_file.scala 21:31]
    _regs_WIRE[13] <= asSInt(UInt<32>("h00")) @[register_file.scala 21:31]
    _regs_WIRE[14] <= asSInt(UInt<32>("h00")) @[register_file.scala 21:31]
    _regs_WIRE[15] <= asSInt(UInt<32>("h00")) @[register_file.scala 21:31]
    _regs_WIRE[16] <= asSInt(UInt<32>("h00")) @[register_file.scala 21:31]
    _regs_WIRE[17] <= asSInt(UInt<32>("h00")) @[register_file.scala 21:31]
    _regs_WIRE[18] <= asSInt(UInt<32>("h00")) @[register_file.scala 21:31]
    _regs_WIRE[19] <= asSInt(UInt<32>("h00")) @[register_file.scala 21:31]
    _regs_WIRE[20] <= asSInt(UInt<32>("h00")) @[register_file.scala 21:31]
    _regs_WIRE[21] <= asSInt(UInt<32>("h00")) @[register_file.scala 21:31]
    _regs_WIRE[22] <= asSInt(UInt<32>("h00")) @[register_file.scala 21:31]
    _regs_WIRE[23] <= asSInt(UInt<32>("h00")) @[register_file.scala 21:31]
    _regs_WIRE[24] <= asSInt(UInt<32>("h00")) @[register_file.scala 21:31]
    _regs_WIRE[25] <= asSInt(UInt<32>("h00")) @[register_file.scala 21:31]
    _regs_WIRE[26] <= asSInt(UInt<32>("h00")) @[register_file.scala 21:31]
    _regs_WIRE[27] <= asSInt(UInt<32>("h00")) @[register_file.scala 21:31]
    _regs_WIRE[28] <= asSInt(UInt<32>("h00")) @[register_file.scala 21:31]
    _regs_WIRE[29] <= asSInt(UInt<32>("h00")) @[register_file.scala 21:31]
    _regs_WIRE[30] <= asSInt(UInt<32>("h00")) @[register_file.scala 21:31]
    _regs_WIRE[31] <= asSInt(UInt<32>("h00")) @[register_file.scala 21:31]
    reg regs : SInt<32>[32], clock with : (reset => (reset, _regs_WIRE)) @[register_file.scala 21:23]
    node _io_rs1_out_T = orr(io.rs1_in) @[register_file.scala 22:34]
    node _io_rs1_out_T_1 = mux(_io_rs1_out_T, regs[io.rs1_in], asSInt(UInt<1>("h00"))) @[register_file.scala 22:22]
    io.rs1_out <= _io_rs1_out_T_1 @[register_file.scala 22:16]
    node _io_rs2_out_T = orr(io.rs2_in) @[register_file.scala 23:34]
    node _io_rs2_out_T_1 = mux(_io_rs2_out_T, regs[io.rs2_in], asSInt(UInt<1>("h00"))) @[register_file.scala 23:22]
    io.rs2_out <= _io_rs2_out_T_1 @[register_file.scala 23:16]
    node _T = orr(io.rd) @[register_file.scala 24:33]
    node _T_1 = and(io.reg_enable, _T) @[register_file.scala 24:25]
    when _T_1 : @[register_file.scala 24:37]
      regs[io.rd] <= io.reg_data @[register_file.scala 25:20]
      skip @[register_file.scala 24:37]
    
  module s_memory : 
    input clock : Clock
    input reset : Reset
    output io : {flip addr : UInt<32>[4], flip mem_data : SInt<32>, flip w_enable : UInt<1>, flip r_enable : UInt<1>, dataout : SInt<128>, flip stall : UInt<32>}
    
    wire _rdata_WIRE : SInt<32>[4] @[s_memory.scala 13:32]
    _rdata_WIRE[0] <= asSInt(UInt<32>("h00")) @[s_memory.scala 13:32]
    _rdata_WIRE[1] <= asSInt(UInt<32>("h00")) @[s_memory.scala 13:32]
    _rdata_WIRE[2] <= asSInt(UInt<32>("h00")) @[s_memory.scala 13:32]
    _rdata_WIRE[3] <= asSInt(UInt<32>("h00")) @[s_memory.scala 13:32]
    reg rdata : SInt<32>[4], clock with : (reset => (reset, _rdata_WIRE)) @[s_memory.scala 13:24]
    cmem memory : SInt<32>[1024] @[s_memory.scala 14:21]
    when io.w_enable : @[s_memory.scala 16:22]
      node _T = bits(io.addr[0], 9, 0)
      write mport MPORT = memory[_T], clock
      MPORT <= io.mem_data
      skip @[s_memory.scala 16:22]
    node _T_1 = gt(io.stall, UInt<1>("h00")) @[s_memory.scala 19:34]
    node _T_2 = and(io.r_enable, _T_1) @[s_memory.scala 19:22]
    when _T_2 : @[s_memory.scala 19:41]
      node _T_3 = geq(io.stall, UInt<1>("h00")) @[s_memory.scala 21:28]
      when _T_3 : @[s_memory.scala 21:35]
        node _rdata_0_T = bits(io.addr[0], 9, 0) @[s_memory.scala 22:40]
        read mport rdata_0_MPORT = memory[_rdata_0_T], clock @[s_memory.scala 22:40]
        rdata[0] <= rdata_0_MPORT @[s_memory.scala 22:26]
        skip @[s_memory.scala 21:35]
      node _T_4 = geq(io.stall, UInt<1>("h00")) @[s_memory.scala 21:28]
      when _T_4 : @[s_memory.scala 21:35]
        node _rdata_1_T = bits(io.addr[1], 9, 0) @[s_memory.scala 22:40]
        read mport rdata_1_MPORT = memory[_rdata_1_T], clock @[s_memory.scala 22:40]
        rdata[1] <= rdata_1_MPORT @[s_memory.scala 22:26]
        skip @[s_memory.scala 21:35]
      node _T_5 = geq(io.stall, UInt<1>("h00")) @[s_memory.scala 21:28]
      when _T_5 : @[s_memory.scala 21:35]
        node _rdata_2_T = bits(io.addr[2], 9, 0) @[s_memory.scala 22:40]
        read mport rdata_2_MPORT = memory[_rdata_2_T], clock @[s_memory.scala 22:40]
        rdata[2] <= rdata_2_MPORT @[s_memory.scala 22:26]
        skip @[s_memory.scala 21:35]
      node _T_6 = geq(io.stall, UInt<1>("h00")) @[s_memory.scala 21:28]
      when _T_6 : @[s_memory.scala 21:35]
        node _rdata_3_T = bits(io.addr[3], 9, 0) @[s_memory.scala 22:40]
        read mport rdata_3_MPORT = memory[_rdata_3_T], clock @[s_memory.scala 22:40]
        rdata[3] <= rdata_3_MPORT @[s_memory.scala 22:26]
        skip @[s_memory.scala 21:35]
      skip @[s_memory.scala 19:41]
    node io_dataout_lo_lo = asUInt(rdata[3]) @[Cat.scala 30:58]
    node io_dataout_lo_hi = asUInt(rdata[2]) @[Cat.scala 30:58]
    node io_dataout_lo = cat(io_dataout_lo_hi, io_dataout_lo_lo) @[Cat.scala 30:58]
    node io_dataout_hi_lo = asUInt(rdata[1]) @[Cat.scala 30:58]
    node io_dataout_hi_hi = asUInt(rdata[0]) @[Cat.scala 30:58]
    node io_dataout_hi = cat(io_dataout_hi_hi, io_dataout_hi_lo) @[Cat.scala 30:58]
    node _io_dataout_T = cat(io_dataout_hi, io_dataout_lo) @[Cat.scala 30:58]
    node _io_dataout_T_1 = asSInt(_io_dataout_T) @[s_memory.scala 26:60]
    io.dataout <= _io_dataout_T_1 @[s_memory.scala 26:16]
    
  module vlsu : 
    input clock : Clock
    input reset : Reset
    output io : {flip vlmul : UInt<3>, flip vsew : UInt<3>, flip opcode : UInt<7>, flip mew : UInt<1>, flip width_lw : UInt<3>, out : UInt<32>}
    
    node _T = eq(io.opcode, UInt<7>("h057")) @[vlsu.scala 16:21]
    when _T : @[vlsu.scala 16:38]
      node _T_1 = eq(io.vlmul, UInt<2>("h03")) @[vlsu.scala 17:23]
      node _T_2 = eq(io.vsew, UInt<1>("h00")) @[vlsu.scala 17:45]
      node _T_3 = and(_T_1, _T_2) @[vlsu.scala 17:35]
      when _T_3 : @[vlsu.scala 17:57]
        io.out <= UInt<8>("h080") @[vlsu.scala 18:20]
        skip @[vlsu.scala 17:57]
      else : @[vlsu.scala 21:9]
        node _T_4 = eq(io.vlmul, UInt<2>("h02")) @[vlsu.scala 20:29]
        node _T_5 = eq(io.vsew, UInt<1>("h00")) @[vlsu.scala 20:52]
        node _T_6 = and(_T_4, _T_5) @[vlsu.scala 20:42]
        node _T_7 = eq(io.vlmul, UInt<2>("h03")) @[vlsu.scala 20:77]
        node _T_8 = eq(io.vsew, UInt<1>("h01")) @[vlsu.scala 20:99]
        node _T_9 = and(_T_7, _T_8) @[vlsu.scala 20:89]
        node _T_10 = or(_T_6, _T_9) @[vlsu.scala 20:65]
        when _T_10 : @[vlsu.scala 21:9]
          io.out <= UInt<7>("h040") @[vlsu.scala 22:20]
          skip @[vlsu.scala 21:9]
        else : @[vlsu.scala 26:9]
          node _T_11 = eq(io.vlmul, UInt<1>("h01")) @[vlsu.scala 24:29]
          node _T_12 = eq(io.vsew, UInt<1>("h00")) @[vlsu.scala 24:51]
          node _T_13 = and(_T_11, _T_12) @[vlsu.scala 24:41]
          node _T_14 = eq(io.vlmul, UInt<2>("h02")) @[vlsu.scala 24:76]
          node _T_15 = eq(io.vsew, UInt<1>("h01")) @[vlsu.scala 24:98]
          node _T_16 = and(_T_14, _T_15) @[vlsu.scala 24:88]
          node _T_17 = or(_T_13, _T_16) @[vlsu.scala 24:64]
          node _T_18 = eq(io.vlmul, UInt<2>("h03")) @[vlsu.scala 25:18]
          node _T_19 = eq(io.vsew, UInt<2>("h02")) @[vlsu.scala 25:40]
          node _T_20 = and(_T_18, _T_19) @[vlsu.scala 25:30]
          node _T_21 = or(_T_17, _T_20) @[vlsu.scala 24:111]
          when _T_21 : @[vlsu.scala 26:9]
            io.out <= UInt<6>("h020") @[vlsu.scala 27:20]
            skip @[vlsu.scala 26:9]
          else : @[vlsu.scala 32:9]
            node _T_22 = eq(io.vlmul, UInt<1>("h00")) @[vlsu.scala 30:29]
            node _T_23 = eq(io.vsew, UInt<1>("h00")) @[vlsu.scala 30:51]
            node _T_24 = and(_T_22, _T_23) @[vlsu.scala 30:41]
            node _T_25 = eq(io.vlmul, UInt<1>("h01")) @[vlsu.scala 30:76]
            node _T_26 = eq(io.vsew, UInt<1>("h01")) @[vlsu.scala 30:98]
            node _T_27 = and(_T_25, _T_26) @[vlsu.scala 30:88]
            node _T_28 = or(_T_24, _T_27) @[vlsu.scala 30:64]
            node _T_29 = eq(io.vlmul, UInt<2>("h02")) @[vlsu.scala 31:18]
            node _T_30 = eq(io.vsew, UInt<2>("h02")) @[vlsu.scala 31:40]
            node _T_31 = and(_T_29, _T_30) @[vlsu.scala 31:30]
            node _T_32 = or(_T_28, _T_31) @[vlsu.scala 30:111]
            node _T_33 = eq(io.vlmul, UInt<2>("h03")) @[vlsu.scala 31:65]
            node _T_34 = eq(io.vsew, UInt<2>("h03")) @[vlsu.scala 31:87]
            node _T_35 = and(_T_33, _T_34) @[vlsu.scala 31:77]
            node _T_36 = or(_T_32, _T_35) @[vlsu.scala 31:53]
            when _T_36 : @[vlsu.scala 32:9]
              io.out <= UInt<5>("h010") @[vlsu.scala 33:20]
              skip @[vlsu.scala 32:9]
            else : @[vlsu.scala 38:9]
              node _T_37 = eq(io.vlmul, UInt<1>("h00")) @[vlsu.scala 36:29]
              node _T_38 = eq(io.vsew, UInt<1>("h01")) @[vlsu.scala 36:51]
              node _T_39 = and(_T_37, _T_38) @[vlsu.scala 36:41]
              node _T_40 = eq(io.vlmul, UInt<1>("h01")) @[vlsu.scala 36:76]
              node _T_41 = eq(io.vsew, UInt<2>("h02")) @[vlsu.scala 36:98]
              node _T_42 = and(_T_40, _T_41) @[vlsu.scala 36:88]
              node _T_43 = or(_T_39, _T_42) @[vlsu.scala 36:64]
              node _T_44 = eq(io.vlmul, UInt<2>("h02")) @[vlsu.scala 37:18]
              node _T_45 = eq(io.vsew, UInt<2>("h03")) @[vlsu.scala 37:40]
              node _T_46 = and(_T_44, _T_45) @[vlsu.scala 37:30]
              node _T_47 = or(_T_43, _T_46) @[vlsu.scala 36:111]
              node _T_48 = eq(io.vlmul, UInt<3>("h07")) @[vlsu.scala 37:65]
              node _T_49 = eq(io.vsew, UInt<1>("h00")) @[vlsu.scala 37:87]
              node _T_50 = and(_T_48, _T_49) @[vlsu.scala 37:77]
              node _T_51 = or(_T_47, _T_50) @[vlsu.scala 37:53]
              when _T_51 : @[vlsu.scala 38:9]
                io.out <= UInt<4>("h08") @[vlsu.scala 39:20]
                skip @[vlsu.scala 38:9]
              else : @[vlsu.scala 44:9]
                node _T_52 = eq(io.vlmul, UInt<1>("h00")) @[vlsu.scala 42:29]
                node _T_53 = eq(io.vsew, UInt<2>("h02")) @[vlsu.scala 42:51]
                node _T_54 = and(_T_52, _T_53) @[vlsu.scala 42:41]
                node _T_55 = eq(io.vlmul, UInt<1>("h01")) @[vlsu.scala 42:77]
                node _T_56 = eq(io.vsew, UInt<2>("h03")) @[vlsu.scala 42:99]
                node _T_57 = and(_T_55, _T_56) @[vlsu.scala 42:89]
                node _T_58 = or(_T_54, _T_57) @[vlsu.scala 42:65]
                node _T_59 = eq(io.vlmul, UInt<3>("h07")) @[vlsu.scala 43:18]
                node _T_60 = eq(io.vsew, UInt<1>("h01")) @[vlsu.scala 43:40]
                node _T_61 = and(_T_59, _T_60) @[vlsu.scala 43:30]
                node _T_62 = or(_T_58, _T_61) @[vlsu.scala 42:113]
                node _T_63 = eq(io.vlmul, UInt<3>("h06")) @[vlsu.scala 43:65]
                node _T_64 = eq(io.vsew, UInt<1>("h00")) @[vlsu.scala 43:87]
                node _T_65 = and(_T_63, _T_64) @[vlsu.scala 43:77]
                node _T_66 = or(_T_62, _T_65) @[vlsu.scala 43:53]
                when _T_66 : @[vlsu.scala 44:9]
                  io.out <= UInt<3>("h04") @[vlsu.scala 45:20]
                  skip @[vlsu.scala 44:9]
                else : @[vlsu.scala 49:9]
                  node _T_67 = eq(io.vlmul, UInt<1>("h00")) @[vlsu.scala 47:29]
                  node _T_68 = eq(io.vsew, UInt<2>("h03")) @[vlsu.scala 47:51]
                  node _T_69 = and(_T_67, _T_68) @[vlsu.scala 47:41]
                  node _T_70 = eq(io.vlmul, UInt<3>("h07")) @[vlsu.scala 47:76]
                  node _T_71 = eq(io.vsew, UInt<2>("h02")) @[vlsu.scala 47:98]
                  node _T_72 = and(_T_70, _T_71) @[vlsu.scala 47:88]
                  node _T_73 = or(_T_69, _T_72) @[vlsu.scala 47:64]
                  node _T_74 = eq(io.vlmul, UInt<3>("h06")) @[vlsu.scala 48:18]
                  node _T_75 = eq(io.vsew, UInt<1>("h01")) @[vlsu.scala 48:40]
                  node _T_76 = and(_T_74, _T_75) @[vlsu.scala 48:30]
                  node _T_77 = or(_T_73, _T_76) @[vlsu.scala 47:111]
                  node _T_78 = eq(io.vlmul, UInt<3>("h05")) @[vlsu.scala 48:65]
                  node _T_79 = eq(io.vsew, UInt<1>("h00")) @[vlsu.scala 48:87]
                  node _T_80 = and(_T_78, _T_79) @[vlsu.scala 48:77]
                  node _T_81 = or(_T_77, _T_80) @[vlsu.scala 48:53]
                  when _T_81 : @[vlsu.scala 49:9]
                    io.out <= UInt<2>("h02") @[vlsu.scala 50:20]
                    skip @[vlsu.scala 49:9]
                  else : @[vlsu.scala 54:9]
                    node _T_82 = eq(io.vlmul, UInt<3>("h07")) @[vlsu.scala 52:29]
                    node _T_83 = eq(io.vsew, UInt<2>("h03")) @[vlsu.scala 52:51]
                    node _T_84 = and(_T_82, _T_83) @[vlsu.scala 52:41]
                    node _T_85 = eq(io.vlmul, UInt<3>("h06")) @[vlsu.scala 52:76]
                    node _T_86 = eq(io.vsew, UInt<2>("h02")) @[vlsu.scala 52:98]
                    node _T_87 = and(_T_85, _T_86) @[vlsu.scala 52:88]
                    node _T_88 = or(_T_84, _T_87) @[vlsu.scala 52:64]
                    node _T_89 = eq(io.vlmul, UInt<3>("h05")) @[vlsu.scala 53:18]
                    node _T_90 = eq(io.vsew, UInt<1>("h01")) @[vlsu.scala 53:40]
                    node _T_91 = and(_T_89, _T_90) @[vlsu.scala 53:30]
                    node _T_92 = or(_T_88, _T_91) @[vlsu.scala 52:111]
                    when _T_92 : @[vlsu.scala 54:9]
                      io.out <= UInt<1>("h01") @[vlsu.scala 55:20]
                      skip @[vlsu.scala 54:9]
                    else : @[vlsu.scala 57:19]
                      io.out <= UInt<1>("h00") @[vlsu.scala 58:16]
                      skip @[vlsu.scala 57:19]
      skip @[vlsu.scala 16:38]
    else : @[vlsu.scala 79:15]
      io.out <= UInt<1>("h00") @[vlsu.scala 80:12]
      skip @[vlsu.scala 79:15]
    
  module vector_file : 
    input clock : Clock
    input reset : Reset
    output io : {flip vs1_in : UInt<5>, flip vs2_in : UInt<5>, flip vd : UInt<5>, flip vec_enable : UInt<1>, flip vec_data : SInt<128>, vs1_out : SInt<128>, vs2_out : SInt<128>}
    
    wire _regs_WIRE : SInt<128>[32] @[vector_file.scala 15:31]
    _regs_WIRE[0] <= asSInt(UInt<128>("h00")) @[vector_file.scala 15:31]
    _regs_WIRE[1] <= asSInt(UInt<128>("h00")) @[vector_file.scala 15:31]
    _regs_WIRE[2] <= asSInt(UInt<128>("h00")) @[vector_file.scala 15:31]
    _regs_WIRE[3] <= asSInt(UInt<128>("h00")) @[vector_file.scala 15:31]
    _regs_WIRE[4] <= asSInt(UInt<128>("h00")) @[vector_file.scala 15:31]
    _regs_WIRE[5] <= asSInt(UInt<128>("h00")) @[vector_file.scala 15:31]
    _regs_WIRE[6] <= asSInt(UInt<128>("h00")) @[vector_file.scala 15:31]
    _regs_WIRE[7] <= asSInt(UInt<128>("h00")) @[vector_file.scala 15:31]
    _regs_WIRE[8] <= asSInt(UInt<128>("h00")) @[vector_file.scala 15:31]
    _regs_WIRE[9] <= asSInt(UInt<128>("h00")) @[vector_file.scala 15:31]
    _regs_WIRE[10] <= asSInt(UInt<128>("h00")) @[vector_file.scala 15:31]
    _regs_WIRE[11] <= asSInt(UInt<128>("h00")) @[vector_file.scala 15:31]
    _regs_WIRE[12] <= asSInt(UInt<128>("h00")) @[vector_file.scala 15:31]
    _regs_WIRE[13] <= asSInt(UInt<128>("h00")) @[vector_file.scala 15:31]
    _regs_WIRE[14] <= asSInt(UInt<128>("h00")) @[vector_file.scala 15:31]
    _regs_WIRE[15] <= asSInt(UInt<128>("h00")) @[vector_file.scala 15:31]
    _regs_WIRE[16] <= asSInt(UInt<128>("h00")) @[vector_file.scala 15:31]
    _regs_WIRE[17] <= asSInt(UInt<128>("h00")) @[vector_file.scala 15:31]
    _regs_WIRE[18] <= asSInt(UInt<128>("h00")) @[vector_file.scala 15:31]
    _regs_WIRE[19] <= asSInt(UInt<128>("h00")) @[vector_file.scala 15:31]
    _regs_WIRE[20] <= asSInt(UInt<128>("h00")) @[vector_file.scala 15:31]
    _regs_WIRE[21] <= asSInt(UInt<128>("h00")) @[vector_file.scala 15:31]
    _regs_WIRE[22] <= asSInt(UInt<128>("h00")) @[vector_file.scala 15:31]
    _regs_WIRE[23] <= asSInt(UInt<128>("h00")) @[vector_file.scala 15:31]
    _regs_WIRE[24] <= asSInt(UInt<128>("h00")) @[vector_file.scala 15:31]
    _regs_WIRE[25] <= asSInt(UInt<128>("h00")) @[vector_file.scala 15:31]
    _regs_WIRE[26] <= asSInt(UInt<128>("h00")) @[vector_file.scala 15:31]
    _regs_WIRE[27] <= asSInt(UInt<128>("h00")) @[vector_file.scala 15:31]
    _regs_WIRE[28] <= asSInt(UInt<128>("h00")) @[vector_file.scala 15:31]
    _regs_WIRE[29] <= asSInt(UInt<128>("h00")) @[vector_file.scala 15:31]
    _regs_WIRE[30] <= asSInt(UInt<128>("h00")) @[vector_file.scala 15:31]
    _regs_WIRE[31] <= asSInt(UInt<128>("h00")) @[vector_file.scala 15:31]
    reg regs : SInt<128>[32], clock with : (reset => (reset, _regs_WIRE)) @[vector_file.scala 15:23]
    node _io_vs1_out_T = orr(io.vs1_in) @[vector_file.scala 16:34]
    node _io_vs1_out_T_1 = mux(_io_vs1_out_T, regs[io.vs1_in], asSInt(UInt<1>("h00"))) @[vector_file.scala 16:22]
    io.vs1_out <= _io_vs1_out_T_1 @[vector_file.scala 16:16]
    node _io_vs2_out_T = orr(io.vs2_in) @[vector_file.scala 17:34]
    node _io_vs2_out_T_1 = mux(_io_vs2_out_T, regs[io.vs2_in], asSInt(UInt<1>("h00"))) @[vector_file.scala 17:22]
    io.vs2_out <= _io_vs2_out_T_1 @[vector_file.scala 17:16]
    node _T = orr(io.vd) @[vector_file.scala 18:33]
    node _T_1 = and(io.vec_enable, _T) @[vector_file.scala 18:25]
    when _T_1 : @[vector_file.scala 18:37]
      regs[io.vd] <= io.vec_data @[vector_file.scala 19:20]
      skip @[vector_file.scala 18:37]
    
  module top_file : 
    input clock : Clock
    input reset : UInt<1>
    output io : {}
    
    inst pc_module of pc_counter_plus_4 @[top_file.scala 8:27]
    pc_module.clock <= clock
    pc_module.reset <= reset
    inst alu_control_module of alu_control @[top_file.scala 10:36]
    alu_control_module.clock <= clock
    alu_control_module.reset <= reset
    inst alu_module of alu @[top_file.scala 12:28]
    alu_module.clock <= clock
    alu_module.reset <= reset
    inst control_unit_module of control_unit @[top_file.scala 14:37]
    control_unit_module.clock <= clock
    control_unit_module.reset <= reset
    inst immediate_module of immediate_instruction @[top_file.scala 16:34]
    immediate_module.clock <= clock
    immediate_module.reset <= reset
    inst instr_module of instr_memory @[top_file.scala 18:30]
    instr_module.clock <= clock
    instr_module.reset <= reset
    inst register_file_module of register_file @[top_file.scala 20:38]
    register_file_module.clock <= clock
    register_file_module.reset <= reset
    inst s_memory_module of s_memory @[top_file.scala 22:33]
    s_memory_module.clock <= clock
    s_memory_module.reset <= reset
    inst vlsu_module of vlsu @[top_file.scala 24:29]
    vlsu_module.clock <= clock
    vlsu_module.reset <= reset
    inst vector_file_module of vector_file @[top_file.scala 26:36]
    vector_file_module.clock <= clock
    vector_file_module.reset <= reset
    node _instr_module_io_address_T = dshr(pc_module.io.out, UInt<2>("h02")) @[top_file.scala 32:49]
    instr_module.io.address <= _instr_module_io_address_T @[top_file.scala 32:29]
    node _control_unit_module_io_op_code_T = bits(instr_module.io.r_data, 7, 0) @[top_file.scala 33:61]
    control_unit_module.io.op_code <= _control_unit_module_io_op_code_T @[top_file.scala 33:36]
    node _control_unit_module_io_rs1_T = bits(instr_module.io.r_data, 19, 15) @[top_file.scala 34:57]
    control_unit_module.io.rs1 <= _control_unit_module_io_rs1_T @[top_file.scala 34:32]
    node _control_unit_module_io_rd_T = bits(instr_module.io.r_data, 11, 7) @[top_file.scala 35:56]
    control_unit_module.io.rd <= _control_unit_module_io_rd_T @[top_file.scala 35:31]
    node _control_unit_module_io_fn3_T = bits(instr_module.io.r_data, 14, 12) @[top_file.scala 36:57]
    control_unit_module.io.fn3 <= _control_unit_module_io_fn3_T @[top_file.scala 36:32]
    node _register_file_module_io_rs1_in_T = bits(instr_module.io.r_data, 19, 15) @[top_file.scala 38:61]
    register_file_module.io.rs1_in <= _register_file_module_io_rs1_in_T @[top_file.scala 38:36]
    node _register_file_module_io_rs2_in_T = bits(instr_module.io.r_data, 24, 20) @[top_file.scala 39:61]
    register_file_module.io.rs2_in <= _register_file_module_io_rs2_in_T @[top_file.scala 39:36]
    node _vector_file_module_io_vs1_in_T = bits(instr_module.io.r_data, 19, 15) @[top_file.scala 41:59]
    vector_file_module.io.vs1_in <= _vector_file_module_io_vs1_in_T @[top_file.scala 41:34]
    node _vector_file_module_io_vs2_in_T = bits(instr_module.io.r_data, 24, 20) @[top_file.scala 42:59]
    vector_file_module.io.vs2_in <= _vector_file_module_io_vs2_in_T @[top_file.scala 42:34]
    node _vlsu_module_io_vlmul_T = bits(instr_module.io.r_data, 22, 20) @[top_file.scala 44:51]
    vlsu_module.io.vlmul <= _vlsu_module_io_vlmul_T @[top_file.scala 44:26]
    node _vlsu_module_io_vsew_T = bits(instr_module.io.r_data, 25, 23) @[top_file.scala 45:50]
    vlsu_module.io.vsew <= _vlsu_module_io_vsew_T @[top_file.scala 45:25]
    node _vlsu_module_io_opcode_T = bits(instr_module.io.r_data, 7, 0) @[top_file.scala 47:52]
    vlsu_module.io.opcode <= _vlsu_module_io_opcode_T @[top_file.scala 47:27]
    node _vlsu_module_io_mew_T = bits(instr_module.io.r_data, 28, 28) @[top_file.scala 48:49]
    vlsu_module.io.mew <= _vlsu_module_io_mew_T @[top_file.scala 48:24]
    node _vlsu_module_io_width_lw_T = bits(instr_module.io.r_data, 14, 12) @[top_file.scala 49:54]
    vlsu_module.io.width_lw <= _vlsu_module_io_width_lw_T @[top_file.scala 49:29]
    immediate_module.io.i_instruction <= instr_module.io.r_data @[top_file.scala 51:39]
    node _alu_control_module_io_op_code_T = bits(instr_module.io.r_data, 7, 0) @[top_file.scala 53:60]
    alu_control_module.io.op_code <= _alu_control_module_io_op_code_T @[top_file.scala 53:35]
    node _alu_control_module_io_fn3_T = bits(instr_module.io.r_data, 14, 12) @[top_file.scala 54:56]
    alu_control_module.io.fn3 <= _alu_control_module_io_fn3_T @[top_file.scala 54:31]
    node _alu_control_module_io_fn7_T = bits(instr_module.io.r_data, 30, 30) @[top_file.scala 55:56]
    alu_control_module.io.fn7 <= _alu_control_module_io_fn7_T @[top_file.scala 55:31]
    node _alu_control_module_io_lumop_T = bits(instr_module.io.r_data, 24, 20) @[top_file.scala 56:58]
    alu_control_module.io.lumop <= _alu_control_module_io_lumop_T @[top_file.scala 56:33]
    immediate_module.io.pc_in <= pc_module.io.out @[top_file.scala 58:31]
    node _alu_module_io_a32_0_T = asSInt(pc_module.io.out4) @[top_file.scala 62:36]
    node _alu_module_io_a32_0_T_1 = asSInt(pc_module.io.out) @[top_file.scala 63:35]
    node _alu_module_io_a32_0_T_2 = eq(UInt<1>("h00"), control_unit_module.io.operand_a) @[Mux.scala 80:60]
    node _alu_module_io_a32_0_T_3 = mux(_alu_module_io_a32_0_T_2, register_file_module.io.rs1_out, asSInt(UInt<1>("h00"))) @[Mux.scala 80:57]
    node _alu_module_io_a32_0_T_4 = eq(UInt<1>("h01"), control_unit_module.io.operand_a) @[Mux.scala 80:60]
    node _alu_module_io_a32_0_T_5 = mux(_alu_module_io_a32_0_T_4, _alu_module_io_a32_0_T, _alu_module_io_a32_0_T_3) @[Mux.scala 80:57]
    node _alu_module_io_a32_0_T_6 = eq(UInt<2>("h02"), control_unit_module.io.operand_a) @[Mux.scala 80:60]
    node _alu_module_io_a32_0_T_7 = mux(_alu_module_io_a32_0_T_6, _alu_module_io_a32_0_T_1, _alu_module_io_a32_0_T_5) @[Mux.scala 80:57]
    node _alu_module_io_a32_0_T_8 = eq(UInt<2>("h03"), control_unit_module.io.operand_a) @[Mux.scala 80:60]
    node _alu_module_io_a32_0_T_9 = mux(_alu_module_io_a32_0_T_8, register_file_module.io.rs1_out, _alu_module_io_a32_0_T_7) @[Mux.scala 80:57]
    node _alu_module_io_a32_0_T_10 = eq(UInt<3>("h04"), control_unit_module.io.operand_a) @[Mux.scala 80:60]
    node _alu_module_io_a32_0_T_11 = mux(_alu_module_io_a32_0_T_10, vector_file_module.io.vs1_out, _alu_module_io_a32_0_T_9) @[Mux.scala 80:57]
    alu_module.io.a32[0] <= _alu_module_io_a32_0_T_11 @[top_file.scala 60:26]
    node _alu_module_io_b32_0_T = asSInt(vlsu_module.io.out) @[top_file.scala 73:37]
    node _alu_module_io_b32_0_T_1 = eq(UInt<1>("h00"), control_unit_module.io.operand_b) @[Mux.scala 80:60]
    node _alu_module_io_b32_0_T_2 = mux(_alu_module_io_b32_0_T_1, register_file_module.io.rs2_out, asSInt(UInt<1>("h00"))) @[Mux.scala 80:57]
    node _alu_module_io_b32_0_T_3 = eq(UInt<1>("h01"), control_unit_module.io.operand_b) @[Mux.scala 80:60]
    node _alu_module_io_b32_0_T_4 = mux(_alu_module_io_b32_0_T_3, immediate_module.io.out, _alu_module_io_b32_0_T_2) @[Mux.scala 80:57]
    node _alu_module_io_b32_0_T_5 = eq(UInt<2>("h02"), control_unit_module.io.operand_b) @[Mux.scala 80:60]
    node _alu_module_io_b32_0_T_6 = mux(_alu_module_io_b32_0_T_5, _alu_module_io_b32_0_T, _alu_module_io_b32_0_T_4) @[Mux.scala 80:57]
    node _alu_module_io_b32_0_T_7 = eq(UInt<3>("h04"), control_unit_module.io.operand_b) @[Mux.scala 80:60]
    node _alu_module_io_b32_0_T_8 = mux(_alu_module_io_b32_0_T_7, vector_file_module.io.vs2_out, _alu_module_io_b32_0_T_6) @[Mux.scala 80:57]
    alu_module.io.b32[0] <= _alu_module_io_b32_0_T_8 @[top_file.scala 70:26]
    node _alu_module_io_vs1_T = eq(UInt<3>("h04"), control_unit_module.io.operand_a) @[Mux.scala 80:60]
    node _alu_module_io_vs1_T_1 = mux(_alu_module_io_vs1_T, vector_file_module.io.vs1_out, asSInt(UInt<1>("h00"))) @[Mux.scala 80:57]
    alu_module.io.vs1 <= _alu_module_io_vs1_T_1 @[top_file.scala 77:23]
    node _alu_module_io_vs2_T = eq(UInt<2>("h03"), control_unit_module.io.operand_b) @[Mux.scala 80:60]
    node _alu_module_io_vs2_T_1 = mux(_alu_module_io_vs2_T, vector_file_module.io.vs2_out, asSInt(UInt<1>("h00"))) @[Mux.scala 80:57]
    alu_module.io.vs2 <= _alu_module_io_vs2_T_1 @[top_file.scala 81:23]
    alu_module.io.alu <= alu_control_module.io.out @[top_file.scala 86:23]
    node _s_memory_module_io_addr_0_T = asUInt(alu_module.io.out[0]) @[top_file.scala 87:56]
    s_memory_module.io.addr[0] <= _s_memory_module_io_addr_0_T @[top_file.scala 87:32]
    node _s_memory_module_io_addr_1_T = asUInt(alu_module.io.out[1]) @[top_file.scala 88:56]
    s_memory_module.io.addr[1] <= _s_memory_module_io_addr_1_T @[top_file.scala 88:32]
    node _s_memory_module_io_addr_2_T = asUInt(alu_module.io.out[2]) @[top_file.scala 89:56]
    s_memory_module.io.addr[2] <= _s_memory_module_io_addr_2_T @[top_file.scala 89:32]
    node _s_memory_module_io_addr_3_T = asUInt(alu_module.io.out[3]) @[top_file.scala 90:56]
    s_memory_module.io.addr[3] <= _s_memory_module_io_addr_3_T @[top_file.scala 90:32]
    s_memory_module.io.mem_data <= register_file_module.io.rs2_out @[top_file.scala 91:33]
    s_memory_module.io.w_enable <= control_unit_module.io.mem_write @[top_file.scala 92:33]
    s_memory_module.io.r_enable <= control_unit_module.io.mem_read @[top_file.scala 93:33]
    s_memory_module.io.stall <= control_unit_module.io.stall_true @[top_file.scala 94:30]
    node _register_file_module_io_rd_T = bits(instr_module.io.r_data, 11, 7) @[top_file.scala 100:57]
    register_file_module.io.rd <= _register_file_module_io_rd_T @[top_file.scala 100:32]
    register_file_module.io.reg_enable <= control_unit_module.io.reg_write @[top_file.scala 101:41]
    node _vector_file_module_io_vd_T = bits(instr_module.io.r_data, 11, 7) @[top_file.scala 103:55]
    vector_file_module.io.vd <= _vector_file_module_io_vd_T @[top_file.scala 103:30]
    vector_file_module.io.vec_enable <= control_unit_module.io.vec_write @[top_file.scala 104:39]
    node _register_file_module_io_reg_data_T = eq(UInt<1>("h00"), control_unit_module.io.mem_data_sel) @[Mux.scala 80:60]
    node _register_file_module_io_reg_data_T_1 = mux(_register_file_module_io_reg_data_T, alu_module.io.out[0], asSInt(UInt<1>("h00"))) @[Mux.scala 80:57]
    node _register_file_module_io_reg_data_T_2 = eq(UInt<1>("h01"), control_unit_module.io.mem_data_sel) @[Mux.scala 80:60]
    node _register_file_module_io_reg_data_T_3 = mux(_register_file_module_io_reg_data_T_2, s_memory_module.io.dataout, _register_file_module_io_reg_data_T_1) @[Mux.scala 80:57]
    register_file_module.io.reg_data <= _register_file_module_io_reg_data_T_3 @[top_file.scala 107:38]
    node _vector_file_module_io_vec_data_T = eq(UInt<1>("h00"), control_unit_module.io.mem_data_sel) @[Mux.scala 80:60]
    node _vector_file_module_io_vec_data_T_1 = mux(_vector_file_module_io_vec_data_T, alu_module.io.out[0], asSInt(UInt<1>("h00"))) @[Mux.scala 80:57]
    node _vector_file_module_io_vec_data_T_2 = eq(UInt<2>("h02"), control_unit_module.io.mem_data_sel) @[Mux.scala 80:60]
    node _vector_file_module_io_vec_data_T_3 = mux(_vector_file_module_io_vec_data_T_2, s_memory_module.io.dataout, _vector_file_module_io_vec_data_T_1) @[Mux.scala 80:57]
    node _vector_file_module_io_vec_data_T_4 = eq(UInt<2>("h03"), control_unit_module.io.mem_data_sel) @[Mux.scala 80:60]
    node _vector_file_module_io_vec_data_T_5 = mux(_vector_file_module_io_vec_data_T_4, alu_module.io.vec_out, _vector_file_module_io_vec_data_T_3) @[Mux.scala 80:57]
    vector_file_module.io.vec_data <= _vector_file_module_io_vec_data_T_5 @[top_file.scala 113:36]
    immediate_module.io.stall_in <= control_unit_module.io.stall_true @[top_file.scala 131:34]
    node logically_end = and(alu_module.io.branch, control_unit_module.io.branch) @[top_file.scala 135:46]
    node _mux1_T = asSInt(pc_module.io.out4) @[top_file.scala 137:80]
    node mux1 = mux(logically_end, immediate_module.io.out_j_b, _mux1_T) @[top_file.scala 137:19]
    node _plus_T = add(immediate_module.io.out, register_file_module.io.rs1_out) @[top_file.scala 138:40]
    node _plus_T_1 = tail(_plus_T, 1) @[top_file.scala 138:40]
    node plus = asSInt(_plus_T_1) @[top_file.scala 138:40]
    node _nextPC_T = asUInt(mux1) @[top_file.scala 142:23]
    node _nextPC_T_1 = asUInt(immediate_module.io.out_j_b) @[top_file.scala 143:46]
    node _nextPC_T_2 = asUInt(plus) @[top_file.scala 144:23]
    node _nextPC_T_3 = eq(UInt<1>("h00"), control_unit_module.io.next_pc_selector) @[Mux.scala 80:60]
    node _nextPC_T_4 = mux(_nextPC_T_3, pc_module.io.out4, UInt<1>("h00")) @[Mux.scala 80:57]
    node _nextPC_T_5 = eq(UInt<1>("h01"), control_unit_module.io.next_pc_selector) @[Mux.scala 80:60]
    node _nextPC_T_6 = mux(_nextPC_T_5, _nextPC_T, _nextPC_T_4) @[Mux.scala 80:57]
    node _nextPC_T_7 = eq(UInt<2>("h02"), control_unit_module.io.next_pc_selector) @[Mux.scala 80:60]
    node _nextPC_T_8 = mux(_nextPC_T_7, _nextPC_T_1, _nextPC_T_6) @[Mux.scala 80:57]
    node _nextPC_T_9 = eq(UInt<2>("h03"), control_unit_module.io.next_pc_selector) @[Mux.scala 80:60]
    node _nextPC_T_10 = mux(_nextPC_T_9, _nextPC_T_2, _nextPC_T_8) @[Mux.scala 80:57]
    node _nextPC_T_11 = eq(UInt<3>("h04"), control_unit_module.io.next_pc_selector) @[Mux.scala 80:60]
    node nextPC = mux(_nextPC_T_11, pc_module.io.out, _nextPC_T_10) @[Mux.scala 80:57]
    pc_module.io.pc <= nextPC @[top_file.scala 147:21]
    
