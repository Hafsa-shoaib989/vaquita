;buildInfoPackage: chisel3, version: 3.4.3, scalaVersion: 2.12.12, sbtVersion: 1.3.10
circuit top_file : 
  module pc_counter_plus_4 : 
    input clock : Clock
    input reset : Reset
    output io : {flip pc : UInt<32>, out : UInt<32>, out4 : UInt<32>}
    
    reg reg : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[pc_counter_plus_4.scala 10:22]
    reg <= io.pc @[pc_counter_plus_4.scala 11:9]
    io.out <= reg @[pc_counter_plus_4.scala 12:12]
    node _io_out4_T = add(reg, UInt<3>("h04")) @[pc_counter_plus_4.scala 13:20]
    node _io_out4_T_1 = tail(_io_out4_T, 1) @[pc_counter_plus_4.scala 13:20]
    io.out4 <= _io_out4_T_1 @[pc_counter_plus_4.scala 13:13]
    
  module alu_control : 
    input clock : Clock
    input reset : Reset
    output io : {flip op_code : UInt<7>, flip fn3 : UInt<3>, flip fn7 : UInt<7>, flip lumop : UInt<5>, out : UInt<5>}
    
    node mop = bits(io.fn7, 3, 2) @[alu_control.scala 13:21]
    node _T = eq(io.op_code, UInt<6>("h033")) @[alu_control.scala 15:21]
    when _T : @[alu_control.scala 15:37]
      node _T_1 = eq(io.fn7, UInt<1>("h00")) @[alu_control.scala 16:21]
      when _T_1 : @[alu_control.scala 16:28]
        node _T_2 = eq(io.fn3, UInt<1>("h00")) @[alu_control.scala 18:25]
        when _T_2 : @[alu_control.scala 18:32]
          io.out <= UInt<1>("h00") @[alu_control.scala 19:24]
          skip @[alu_control.scala 18:32]
        else : @[alu_control.scala 22:37]
          node _T_3 = eq(io.fn3, UInt<1>("h01")) @[alu_control.scala 22:30]
          when _T_3 : @[alu_control.scala 22:37]
            io.out <= UInt<2>("h02") @[alu_control.scala 23:24]
            skip @[alu_control.scala 22:37]
          else : @[alu_control.scala 26:37]
            node _T_4 = eq(io.fn3, UInt<2>("h02")) @[alu_control.scala 26:30]
            when _T_4 : @[alu_control.scala 26:37]
              io.out <= UInt<3>("h04") @[alu_control.scala 27:24]
              skip @[alu_control.scala 26:37]
            else : @[alu_control.scala 30:37]
              node _T_5 = eq(io.fn3, UInt<2>("h03")) @[alu_control.scala 30:30]
              when _T_5 : @[alu_control.scala 30:37]
                io.out <= UInt<3>("h06") @[alu_control.scala 31:24]
                skip @[alu_control.scala 30:37]
              else : @[alu_control.scala 34:37]
                node _T_6 = eq(io.fn3, UInt<3>("h04")) @[alu_control.scala 34:30]
                when _T_6 : @[alu_control.scala 34:37]
                  io.out <= UInt<4>("h09") @[alu_control.scala 35:24]
                  skip @[alu_control.scala 34:37]
                else : @[alu_control.scala 38:37]
                  node _T_7 = eq(io.fn3, UInt<3>("h05")) @[alu_control.scala 38:30]
                  when _T_7 : @[alu_control.scala 38:37]
                    io.out <= UInt<4>("h0b") @[alu_control.scala 39:24]
                    skip @[alu_control.scala 38:37]
                  else : @[alu_control.scala 42:37]
                    node _T_8 = eq(io.fn3, UInt<3>("h06")) @[alu_control.scala 42:30]
                    when _T_8 : @[alu_control.scala 42:37]
                      io.out <= UInt<4>("h0d") @[alu_control.scala 43:24]
                      skip @[alu_control.scala 42:37]
                    else : @[alu_control.scala 46:37]
                      node _T_9 = eq(io.fn3, UInt<3>("h07")) @[alu_control.scala 46:30]
                      when _T_9 : @[alu_control.scala 46:37]
                        io.out <= UInt<4>("h0f") @[alu_control.scala 47:24]
                        skip @[alu_control.scala 46:37]
                      else : @[alu_control.scala 49:23]
                        io.out <= UInt<1>("h00") @[alu_control.scala 50:24]
                        skip @[alu_control.scala 49:23]
        skip @[alu_control.scala 16:28]
      else : @[alu_control.scala 55:33]
        node _T_10 = eq(io.fn7, UInt<1>("h01")) @[alu_control.scala 55:26]
        when _T_10 : @[alu_control.scala 55:33]
          node _T_11 = eq(io.fn3, UInt<1>("h00")) @[alu_control.scala 57:25]
          when _T_11 : @[alu_control.scala 57:32]
            io.out <= UInt<5>("h011") @[alu_control.scala 58:24]
            skip @[alu_control.scala 57:32]
          else : @[alu_control.scala 61:37]
            node _T_12 = eq(io.fn3, UInt<3>("h05")) @[alu_control.scala 61:30]
            when _T_12 : @[alu_control.scala 61:37]
              io.out <= UInt<5>("h012") @[alu_control.scala 62:24]
              skip @[alu_control.scala 61:37]
            else : @[alu_control.scala 64:23]
              io.out <= UInt<1>("h00") @[alu_control.scala 65:24]
              skip @[alu_control.scala 64:23]
          skip @[alu_control.scala 55:33]
        else : @[alu_control.scala 71:19]
          io.out <= UInt<1>("h00") @[alu_control.scala 72:20]
          skip @[alu_control.scala 71:19]
      skip @[alu_control.scala 15:37]
    else : @[alu_control.scala 80:42]
      node _T_13 = eq(io.op_code, UInt<5>("h013")) @[alu_control.scala 80:26]
      when _T_13 : @[alu_control.scala 80:42]
        node _T_14 = eq(io.fn7, UInt<1>("h00")) @[alu_control.scala 81:21]
        when _T_14 : @[alu_control.scala 81:28]
          node _T_15 = eq(io.fn3, UInt<1>("h01")) @[alu_control.scala 83:25]
          when _T_15 : @[alu_control.scala 83:32]
            io.out <= UInt<2>("h03") @[alu_control.scala 84:24]
            skip @[alu_control.scala 83:32]
          else : @[alu_control.scala 87:37]
            node _T_16 = eq(io.fn3, UInt<3>("h05")) @[alu_control.scala 87:30]
            when _T_16 : @[alu_control.scala 87:37]
              io.out <= UInt<4>("h0c") @[alu_control.scala 88:24]
              skip @[alu_control.scala 87:37]
            else : @[alu_control.scala 94:37]
              node _T_17 = eq(io.fn3, UInt<1>("h00")) @[alu_control.scala 94:30]
              when _T_17 : @[alu_control.scala 94:37]
                io.out <= UInt<1>("h01") @[alu_control.scala 95:24]
                skip @[alu_control.scala 94:37]
              else : @[alu_control.scala 98:37]
                node _T_18 = eq(io.fn3, UInt<2>("h02")) @[alu_control.scala 98:30]
                when _T_18 : @[alu_control.scala 98:37]
                  io.out <= UInt<3>("h05") @[alu_control.scala 99:24]
                  skip @[alu_control.scala 98:37]
                else : @[alu_control.scala 102:37]
                  node _T_19 = eq(io.fn3, UInt<2>("h03")) @[alu_control.scala 102:30]
                  when _T_19 : @[alu_control.scala 102:37]
                    io.out <= UInt<3>("h07") @[alu_control.scala 103:24]
                    skip @[alu_control.scala 102:37]
                  else : @[alu_control.scala 106:37]
                    node _T_20 = eq(io.fn3, UInt<3>("h04")) @[alu_control.scala 106:30]
                    when _T_20 : @[alu_control.scala 106:37]
                      io.out <= UInt<4>("h0a") @[alu_control.scala 107:24]
                      skip @[alu_control.scala 106:37]
                    else : @[alu_control.scala 110:37]
                      node _T_21 = eq(io.fn3, UInt<3>("h06")) @[alu_control.scala 110:30]
                      when _T_21 : @[alu_control.scala 110:37]
                        io.out <= UInt<4>("h0e") @[alu_control.scala 111:24]
                        skip @[alu_control.scala 110:37]
                      else : @[alu_control.scala 114:37]
                        node _T_22 = eq(io.fn3, UInt<3>("h07")) @[alu_control.scala 114:30]
                        when _T_22 : @[alu_control.scala 114:37]
                          io.out <= UInt<5>("h010") @[alu_control.scala 115:24]
                          skip @[alu_control.scala 114:37]
                        else : @[alu_control.scala 119:23]
                          io.out <= UInt<1>("h00") @[alu_control.scala 120:24]
                          skip @[alu_control.scala 119:23]
          skip @[alu_control.scala 81:28]
        else : @[alu_control.scala 125:33]
          node _T_23 = eq(io.fn7, UInt<1>("h01")) @[alu_control.scala 125:26]
          when _T_23 : @[alu_control.scala 125:33]
            node _T_24 = eq(io.fn3, UInt<3>("h05")) @[alu_control.scala 127:25]
            when _T_24 : @[alu_control.scala 127:32]
              io.out <= UInt<5>("h013") @[alu_control.scala 128:24]
              skip @[alu_control.scala 127:32]
            else : @[alu_control.scala 130:23]
              io.out <= UInt<1>("h00") @[alu_control.scala 131:24]
              skip @[alu_control.scala 130:23]
            skip @[alu_control.scala 125:33]
          else : @[alu_control.scala 134:19]
            io.out <= UInt<1>("h00") @[alu_control.scala 135:20]
            skip @[alu_control.scala 134:19]
        skip @[alu_control.scala 80:42]
      else : @[alu_control.scala 141:42]
        node _T_25 = eq(io.op_code, UInt<7>("h067")) @[alu_control.scala 141:26]
        when _T_25 : @[alu_control.scala 141:42]
          io.out <= UInt<5>("h019") @[alu_control.scala 142:16]
          skip @[alu_control.scala 141:42]
        else : @[alu_control.scala 145:42]
          node _T_26 = eq(io.op_code, UInt<2>("h03")) @[alu_control.scala 145:26]
          when _T_26 : @[alu_control.scala 145:42]
            node _T_27 = eq(io.fn3, UInt<2>("h02")) @[alu_control.scala 146:22]
            when _T_27 : @[alu_control.scala 146:29]
              io.out <= UInt<5>("h01c") @[alu_control.scala 147:20]
              skip @[alu_control.scala 146:29]
            else : @[alu_control.scala 149:20]
              io.out <= UInt<1>("h00") @[alu_control.scala 150:20]
              skip @[alu_control.scala 149:20]
            skip @[alu_control.scala 145:42]
          else : @[alu_control.scala 155:42]
            node _T_28 = eq(io.op_code, UInt<7>("h06f")) @[alu_control.scala 155:26]
            when _T_28 : @[alu_control.scala 155:42]
              io.out <= UInt<5>("h018") @[alu_control.scala 156:16]
              skip @[alu_control.scala 155:42]
            else : @[alu_control.scala 160:42]
              node _T_29 = eq(io.op_code, UInt<7>("h063")) @[alu_control.scala 160:26]
              when _T_29 : @[alu_control.scala 160:42]
                node _T_30 = eq(io.fn3, UInt<1>("h00")) @[alu_control.scala 162:21]
                when _T_30 : @[alu_control.scala 162:28]
                  io.out <= UInt<5>("h014") @[alu_control.scala 163:20]
                  skip @[alu_control.scala 162:28]
                else : @[alu_control.scala 166:33]
                  node _T_31 = eq(io.fn3, UInt<1>("h01")) @[alu_control.scala 166:26]
                  when _T_31 : @[alu_control.scala 166:33]
                    io.out <= UInt<5>("h015") @[alu_control.scala 167:20]
                    skip @[alu_control.scala 166:33]
                  else : @[alu_control.scala 170:33]
                    node _T_32 = eq(io.fn3, UInt<3>("h04")) @[alu_control.scala 170:26]
                    when _T_32 : @[alu_control.scala 170:33]
                      io.out <= UInt<5>("h016") @[alu_control.scala 171:20]
                      skip @[alu_control.scala 170:33]
                    else : @[alu_control.scala 178:33]
                      node _T_33 = eq(io.fn3, UInt<3>("h06")) @[alu_control.scala 178:26]
                      when _T_33 : @[alu_control.scala 178:33]
                        io.out <= UInt<4>("h08") @[alu_control.scala 179:20]
                        skip @[alu_control.scala 178:33]
                      else : @[alu_control.scala 182:33]
                        node _T_34 = eq(io.fn3, UInt<3>("h07")) @[alu_control.scala 182:26]
                        when _T_34 : @[alu_control.scala 182:33]
                          io.out <= UInt<5>("h017") @[alu_control.scala 183:20]
                          skip @[alu_control.scala 182:33]
                        else : @[alu_control.scala 185:19]
                          io.out <= UInt<5>("h01e") @[alu_control.scala 186:20]
                          skip @[alu_control.scala 185:19]
                skip @[alu_control.scala 160:42]
              else : @[alu_control.scala 190:41]
                node _T_35 = eq(io.op_code, UInt<6>("h023")) @[alu_control.scala 190:25]
                when _T_35 : @[alu_control.scala 190:41]
                  node _T_36 = eq(io.fn3, UInt<2>("h02")) @[alu_control.scala 191:21]
                  when _T_36 : @[alu_control.scala 191:28]
                    io.out <= UInt<5>("h01b") @[alu_control.scala 192:20]
                    skip @[alu_control.scala 191:28]
                  else : @[alu_control.scala 194:19]
                    io.out <= UInt<1>("h00") @[alu_control.scala 195:20]
                    skip @[alu_control.scala 194:19]
                  skip @[alu_control.scala 190:41]
                else : @[alu_control.scala 199:41]
                  node _T_37 = eq(io.op_code, UInt<7>("h057")) @[alu_control.scala 199:25]
                  when _T_37 : @[alu_control.scala 199:41]
                    node _T_38 = eq(io.fn3, UInt<3>("h07")) @[alu_control.scala 200:21]
                    when _T_38 : @[alu_control.scala 200:28]
                      io.out <= UInt<5>("h01d") @[alu_control.scala 201:20]
                      skip @[alu_control.scala 200:28]
                    else : @[alu_control.scala 203:19]
                      io.out <= UInt<1>("h00") @[alu_control.scala 204:20]
                      skip @[alu_control.scala 203:19]
                    skip @[alu_control.scala 199:41]
                  else : @[alu_control.scala 209:41]
                    node _T_39 = eq(io.op_code, UInt<3>("h07")) @[alu_control.scala 209:25]
                    when _T_39 : @[alu_control.scala 209:41]
                      node _T_40 = eq(mop, UInt<1>("h00")) @[alu_control.scala 210:18]
                      node _T_41 = eq(io.lumop, UInt<1>("h00")) @[alu_control.scala 210:41]
                      node _T_42 = and(_T_40, _T_41) @[alu_control.scala 210:29]
                      when _T_42 : @[alu_control.scala 210:56]
                        io.out <= UInt<5>("h01e") @[alu_control.scala 211:20]
                        skip @[alu_control.scala 210:56]
                      else : @[alu_control.scala 213:19]
                        io.out <= UInt<1>("h00") @[alu_control.scala 214:20]
                        skip @[alu_control.scala 213:19]
                      skip @[alu_control.scala 209:41]
                    else : @[alu_control.scala 218:15]
                      io.out <= UInt<1>("h00") @[alu_control.scala 219:16]
                      skip @[alu_control.scala 218:15]
    
  module alu : 
    input clock : Clock
    input reset : Reset
    output io : {flip alu : UInt<5>, flip a32 : SInt<32>[1], flip b32 : SInt<32>[1], out : SInt<32>[2], branch : UInt<1>}
    
    node _io_out_0_T = eq(io.alu, UInt<5>("h00")) @[alu.scala 59:16]
    node _io_out_0_T_1 = eq(io.alu, UInt<5>("h01")) @[alu.scala 59:34]
    node _io_out_0_T_2 = or(_io_out_0_T, _io_out_0_T_1) @[alu.scala 59:24]
    node _io_out_0_T_3 = add(io.a32[0], io.b32[0]) @[alu.scala 59:53]
    node _io_out_0_T_4 = tail(_io_out_0_T_3, 1) @[alu.scala 59:53]
    node _io_out_0_T_5 = asSInt(_io_out_0_T_4) @[alu.scala 59:53]
    node _io_out_0_T_6 = eq(io.alu, UInt<5>("h02")) @[alu.scala 60:16]
    node _io_out_0_T_7 = eq(io.alu, UInt<5>("h03")) @[alu.scala 60:34]
    node _io_out_0_T_8 = or(_io_out_0_T_6, _io_out_0_T_7) @[alu.scala 60:24]
    node _io_out_0_T_9 = bits(io.b32[0], 15, 0) @[alu.scala 60:65]
    node _io_out_0_T_10 = dshl(io.a32[0], _io_out_0_T_9) @[alu.scala 60:53]
    node _io_out_0_T_11 = eq(io.alu, UInt<5>("h04")) @[alu.scala 61:16]
    node _io_out_0_T_12 = eq(io.alu, UInt<5>("h05")) @[alu.scala 61:34]
    node _io_out_0_T_13 = or(_io_out_0_T_11, _io_out_0_T_12) @[alu.scala 61:24]
    node _io_out_0_T_14 = lt(io.a32[0], io.b32[0]) @[alu.scala 61:57]
    node _io_out_0_T_15 = mux(_io_out_0_T_14, asSInt(UInt<2>("h01")), asSInt(UInt<1>("h00"))) @[alu.scala 61:46]
    node _io_out_0_T_16 = eq(io.alu, UInt<5>("h06")) @[alu.scala 62:16]
    node _io_out_0_T_17 = eq(io.alu, UInt<5>("h07")) @[alu.scala 62:35]
    node _io_out_0_T_18 = or(_io_out_0_T_16, _io_out_0_T_17) @[alu.scala 62:25]
    node _io_out_0_T_19 = asUInt(io.a32[0]) @[alu.scala 62:60]
    node _io_out_0_T_20 = asUInt(io.b32[0]) @[alu.scala 62:79]
    node _io_out_0_T_21 = lt(_io_out_0_T_19, _io_out_0_T_20) @[alu.scala 62:67]
    node _io_out_0_T_22 = mux(_io_out_0_T_21, asSInt(UInt<2>("h01")), asSInt(UInt<1>("h00"))) @[alu.scala 62:49]
    node _io_out_0_T_23 = eq(io.alu, UInt<5>("h09")) @[alu.scala 63:16]
    node _io_out_0_T_24 = eq(io.alu, UInt<5>("h0a")) @[alu.scala 63:34]
    node _io_out_0_T_25 = or(_io_out_0_T_23, _io_out_0_T_24) @[alu.scala 63:24]
    node _io_out_0_T_26 = xor(io.a32[0], io.b32[0]) @[alu.scala 63:54]
    node _io_out_0_T_27 = asSInt(_io_out_0_T_26) @[alu.scala 63:54]
    node _io_out_0_T_28 = eq(io.alu, UInt<5>("h0b")) @[alu.scala 64:16]
    node _io_out_0_T_29 = eq(io.alu, UInt<5>("h0c")) @[alu.scala 64:34]
    node _io_out_0_T_30 = or(_io_out_0_T_28, _io_out_0_T_29) @[alu.scala 64:24]
    node _io_out_0_T_31 = bits(io.b32[0], 15, 0) @[alu.scala 64:66]
    node _io_out_0_T_32 = dshr(io.a32[0], _io_out_0_T_31) @[alu.scala 64:54]
    node _io_out_0_T_33 = eq(io.alu, UInt<5>("h0d")) @[alu.scala 65:16]
    node _io_out_0_T_34 = eq(io.alu, UInt<5>("h0e")) @[alu.scala 65:33]
    node _io_out_0_T_35 = or(_io_out_0_T_33, _io_out_0_T_34) @[alu.scala 65:23]
    node _io_out_0_T_36 = or(io.a32[0], io.b32[0]) @[alu.scala 65:51]
    node _io_out_0_T_37 = asSInt(_io_out_0_T_36) @[alu.scala 65:51]
    node _io_out_0_T_38 = eq(io.alu, UInt<5>("h0f")) @[alu.scala 66:16]
    node _io_out_0_T_39 = eq(io.alu, UInt<5>("h010")) @[alu.scala 66:34]
    node _io_out_0_T_40 = or(_io_out_0_T_38, _io_out_0_T_39) @[alu.scala 66:24]
    node _io_out_0_T_41 = and(io.a32[0], io.b32[0]) @[alu.scala 66:53]
    node _io_out_0_T_42 = asSInt(_io_out_0_T_41) @[alu.scala 66:53]
    node _io_out_0_T_43 = eq(io.alu, UInt<5>("h011")) @[alu.scala 67:16]
    node _io_out_0_T_44 = sub(io.a32[0], io.b32[0]) @[alu.scala 67:34]
    node _io_out_0_T_45 = tail(_io_out_0_T_44, 1) @[alu.scala 67:34]
    node _io_out_0_T_46 = asSInt(_io_out_0_T_45) @[alu.scala 67:34]
    node _io_out_0_T_47 = eq(io.alu, UInt<5>("h012")) @[alu.scala 68:16]
    node _io_out_0_T_48 = eq(io.alu, UInt<5>("h013")) @[alu.scala 68:34]
    node _io_out_0_T_49 = or(_io_out_0_T_47, _io_out_0_T_48) @[alu.scala 68:24]
    node _io_out_0_T_50 = bits(io.b32[0], 15, 0) @[alu.scala 68:65]
    node _io_out_0_T_51 = dshr(io.a32[0], _io_out_0_T_50) @[alu.scala 68:53]
    node _io_out_0_T_52 = eq(io.alu, UInt<5>("h018")) @[alu.scala 69:16]
    node _io_out_0_T_53 = eq(io.alu, UInt<5>("h019")) @[alu.scala 69:34]
    node _io_out_0_T_54 = or(_io_out_0_T_52, _io_out_0_T_53) @[alu.scala 69:24]
    node _io_out_0_T_55 = eq(io.alu, UInt<5>("h01b")) @[alu.scala 70:16]
    node _io_out_0_T_56 = add(io.a32[0], io.b32[0]) @[alu.scala 70:33]
    node _io_out_0_T_57 = tail(_io_out_0_T_56, 1) @[alu.scala 70:33]
    node _io_out_0_T_58 = asSInt(_io_out_0_T_57) @[alu.scala 70:33]
    node _io_out_0_T_59 = eq(io.alu, UInt<5>("h01d")) @[alu.scala 71:16]
    node _io_out_0_T_60 = asUInt(io.a32[0]) @[alu.scala 71:41]
    node _io_out_0_T_61 = asUInt(io.b32[0]) @[alu.scala 71:61]
    node _io_out_0_T_62 = leq(_io_out_0_T_60, _io_out_0_T_61) @[alu.scala 71:48]
    node _io_out_0_T_63 = mul(asSInt(UInt<3>("h02")), io.b32[0]) @[alu.scala 71:100]
    node _io_out_0_T_64 = geq(io.a32[0], _io_out_0_T_63) @[alu.scala 71:92]
    node _io_out_0_T_65 = mux(_io_out_0_T_64, io.b32[0], asSInt(UInt<1>("h00"))) @[alu.scala 71:81]
    node _io_out_0_T_66 = mux(_io_out_0_T_62, io.a32[0], _io_out_0_T_65) @[alu.scala 71:30]
    node _io_out_0_T_67 = eq(io.alu, UInt<5>("h01e")) @[alu.scala 72:16]
    node _io_out_0_T_68 = mux(_io_out_0_T_67, io.a32[0], asSInt(UInt<1>("h00"))) @[alu.scala 72:8]
    node _io_out_0_T_69 = mux(_io_out_0_T_59, _io_out_0_T_66, _io_out_0_T_68) @[alu.scala 71:8]
    node _io_out_0_T_70 = mux(_io_out_0_T_55, _io_out_0_T_58, _io_out_0_T_69) @[alu.scala 70:8]
    node _io_out_0_T_71 = mux(_io_out_0_T_54, io.a32[0], _io_out_0_T_70) @[alu.scala 69:8]
    node _io_out_0_T_72 = mux(_io_out_0_T_49, _io_out_0_T_51, _io_out_0_T_71) @[alu.scala 68:8]
    node _io_out_0_T_73 = mux(_io_out_0_T_43, _io_out_0_T_46, _io_out_0_T_72) @[alu.scala 67:8]
    node _io_out_0_T_74 = mux(_io_out_0_T_40, _io_out_0_T_42, _io_out_0_T_73) @[alu.scala 66:8]
    node _io_out_0_T_75 = mux(_io_out_0_T_35, _io_out_0_T_37, _io_out_0_T_74) @[alu.scala 65:8]
    node _io_out_0_T_76 = mux(_io_out_0_T_30, _io_out_0_T_32, _io_out_0_T_75) @[alu.scala 64:8]
    node _io_out_0_T_77 = mux(_io_out_0_T_25, _io_out_0_T_27, _io_out_0_T_76) @[alu.scala 63:8]
    node _io_out_0_T_78 = mux(_io_out_0_T_18, _io_out_0_T_22, _io_out_0_T_77) @[alu.scala 62:8]
    node _io_out_0_T_79 = mux(_io_out_0_T_13, _io_out_0_T_15, _io_out_0_T_78) @[alu.scala 61:8]
    node _io_out_0_T_80 = mux(_io_out_0_T_8, _io_out_0_T_10, _io_out_0_T_79) @[alu.scala 60:8]
    node _io_out_0_T_81 = mux(_io_out_0_T_2, _io_out_0_T_5, _io_out_0_T_80) @[alu.scala 59:8]
    io.out[0] <= _io_out_0_T_81 @[alu.scala 58:15]
    node _io_out_1_T = eq(io.alu, UInt<5>("h01e")) @[alu.scala 74:27]
    node _io_out_1_T_1 = add(io.a32[0], asSInt(UInt<4>("h04"))) @[alu.scala 74:46]
    node _io_out_1_T_2 = tail(_io_out_1_T_1, 1) @[alu.scala 74:46]
    node _io_out_1_T_3 = asSInt(_io_out_1_T_2) @[alu.scala 74:46]
    node _io_out_1_T_4 = mux(_io_out_1_T, _io_out_1_T_3, asSInt(UInt<1>("h00"))) @[alu.scala 74:19]
    io.out[1] <= _io_out_1_T_4 @[alu.scala 74:14]
    node _io_branch_T = eq(io.alu, UInt<5>("h014")) @[alu.scala 81:29]
    node _io_branch_T_1 = eq(io.a32[0], io.b32[0]) @[alu.scala 81:48]
    node _io_branch_T_2 = eq(io.alu, UInt<5>("h015")) @[alu.scala 82:16]
    node _io_branch_T_3 = neq(io.a32[0], io.b32[0]) @[alu.scala 82:34]
    node _io_branch_T_4 = eq(io.alu, UInt<5>("h016")) @[alu.scala 83:16]
    node _io_branch_T_5 = lt(io.a32[0], io.b32[0]) @[alu.scala 83:34]
    node _io_branch_T_6 = eq(io.alu, UInt<5>("h017")) @[alu.scala 84:16]
    node _io_branch_T_7 = asUInt(io.a32[0]) @[alu.scala 84:35]
    node _io_branch_T_8 = asUInt(io.b32[0]) @[alu.scala 84:55]
    node _io_branch_T_9 = geq(_io_branch_T_7, _io_branch_T_8) @[alu.scala 84:42]
    node _io_branch_T_10 = eq(io.alu, UInt<5>("h08")) @[alu.scala 85:16]
    node _io_branch_T_11 = asUInt(io.a32[0]) @[alu.scala 85:35]
    node _io_branch_T_12 = asUInt(io.b32[0]) @[alu.scala 85:54]
    node _io_branch_T_13 = lt(_io_branch_T_11, _io_branch_T_12) @[alu.scala 85:42]
    node _io_branch_T_14 = eq(io.alu, UInt<5>("h01a")) @[alu.scala 86:16]
    node _io_branch_T_15 = geq(io.a32[0], io.b32[0]) @[alu.scala 86:34]
    node _io_branch_T_16 = mux(_io_branch_T_14, _io_branch_T_15, UInt<1>("h00")) @[alu.scala 86:8]
    node _io_branch_T_17 = mux(_io_branch_T_10, _io_branch_T_13, _io_branch_T_16) @[alu.scala 85:8]
    node _io_branch_T_18 = mux(_io_branch_T_6, _io_branch_T_9, _io_branch_T_17) @[alu.scala 84:8]
    node _io_branch_T_19 = mux(_io_branch_T_4, _io_branch_T_5, _io_branch_T_18) @[alu.scala 83:8]
    node _io_branch_T_20 = mux(_io_branch_T_2, _io_branch_T_3, _io_branch_T_19) @[alu.scala 82:8]
    node _io_branch_T_21 = mux(_io_branch_T, _io_branch_T_1, _io_branch_T_20) @[alu.scala 81:21]
    io.branch <= _io_branch_T_21 @[alu.scala 81:15]
    
  module control_unit : 
    input clock : Clock
    input reset : Reset
    output io : {flip op_code : UInt<7>, flip rd : UInt<5>, flip rs1 : UInt<5>, mem_write : UInt<1>, branch : UInt<1>, mem_read : UInt<1>, reg_write : UInt<1>, vec_write : UInt<1>, mem_data_sel : UInt<2>, operand_a : UInt<2>, operand_b : UInt<2>, extend_sel : UInt<2>, next_pc_selector : UInt<2>}
    
    node _T = eq(io.op_code, UInt<6>("h033")) @[control_unit.scala 23:20]
    when _T : @[control_unit.scala 23:36]
      io.mem_write <= UInt<1>("h00") @[control_unit.scala 24:22]
      io.branch <= UInt<1>("h00") @[control_unit.scala 25:19]
      io.mem_read <= UInt<1>("h00") @[control_unit.scala 26:21]
      io.reg_write <= UInt<1>("h01") @[control_unit.scala 27:22]
      io.vec_write <= UInt<1>("h00") @[control_unit.scala 28:22]
      io.mem_data_sel <= UInt<1>("h00") @[control_unit.scala 29:24]
      io.operand_a <= UInt<1>("h00") @[control_unit.scala 30:22]
      io.operand_b <= UInt<1>("h00") @[control_unit.scala 31:22]
      io.extend_sel <= UInt<1>("h00") @[control_unit.scala 32:23]
      io.next_pc_selector <= UInt<1>("h00") @[control_unit.scala 33:29]
      skip @[control_unit.scala 23:36]
    else : @[control_unit.scala 38:41]
      node _T_1 = eq(io.op_code, UInt<5>("h013")) @[control_unit.scala 38:25]
      when _T_1 : @[control_unit.scala 38:41]
        io.mem_write <= UInt<1>("h00") @[control_unit.scala 39:22]
        io.branch <= UInt<1>("h00") @[control_unit.scala 40:19]
        io.mem_read <= UInt<1>("h00") @[control_unit.scala 41:21]
        io.reg_write <= UInt<1>("h01") @[control_unit.scala 42:22]
        io.vec_write <= UInt<1>("h00") @[control_unit.scala 43:22]
        io.mem_data_sel <= UInt<1>("h00") @[control_unit.scala 44:24]
        io.operand_a <= UInt<1>("h00") @[control_unit.scala 45:22]
        io.operand_b <= UInt<1>("h01") @[control_unit.scala 46:22]
        io.extend_sel <= UInt<1>("h00") @[control_unit.scala 47:23]
        io.next_pc_selector <= UInt<1>("h00") @[control_unit.scala 48:29]
        skip @[control_unit.scala 38:41]
      else : @[control_unit.scala 53:41]
        node _T_2 = eq(io.op_code, UInt<6>("h023")) @[control_unit.scala 53:25]
        when _T_2 : @[control_unit.scala 53:41]
          io.mem_write <= UInt<1>("h01") @[control_unit.scala 54:22]
          io.branch <= UInt<1>("h00") @[control_unit.scala 55:19]
          io.mem_read <= UInt<1>("h00") @[control_unit.scala 56:21]
          io.reg_write <= UInt<1>("h00") @[control_unit.scala 57:22]
          io.vec_write <= UInt<1>("h00") @[control_unit.scala 58:22]
          io.mem_data_sel <= UInt<1>("h00") @[control_unit.scala 59:24]
          io.operand_a <= UInt<1>("h00") @[control_unit.scala 60:22]
          io.operand_b <= UInt<1>("h01") @[control_unit.scala 61:22]
          io.extend_sel <= UInt<2>("h03") @[control_unit.scala 62:23]
          io.next_pc_selector <= UInt<1>("h00") @[control_unit.scala 63:29]
          skip @[control_unit.scala 53:41]
        else : @[control_unit.scala 68:41]
          node _T_3 = eq(io.op_code, UInt<7>("h063")) @[control_unit.scala 68:25]
          when _T_3 : @[control_unit.scala 68:41]
            io.mem_write <= UInt<1>("h00") @[control_unit.scala 69:22]
            io.branch <= UInt<1>("h01") @[control_unit.scala 70:19]
            io.mem_read <= UInt<1>("h00") @[control_unit.scala 71:21]
            io.reg_write <= UInt<1>("h00") @[control_unit.scala 72:22]
            io.vec_write <= UInt<1>("h00") @[control_unit.scala 73:22]
            io.mem_data_sel <= UInt<1>("h00") @[control_unit.scala 74:24]
            io.operand_a <= UInt<1>("h00") @[control_unit.scala 75:22]
            io.operand_b <= UInt<1>("h00") @[control_unit.scala 76:22]
            io.extend_sel <= UInt<1>("h00") @[control_unit.scala 77:23]
            io.next_pc_selector <= UInt<1>("h01") @[control_unit.scala 78:29]
            skip @[control_unit.scala 68:41]
          else : @[control_unit.scala 83:41]
            node _T_4 = eq(io.op_code, UInt<6>("h037")) @[control_unit.scala 83:25]
            when _T_4 : @[control_unit.scala 83:41]
              io.mem_write <= UInt<1>("h00") @[control_unit.scala 84:22]
              io.branch <= UInt<1>("h00") @[control_unit.scala 85:19]
              io.mem_read <= UInt<1>("h00") @[control_unit.scala 86:21]
              io.reg_write <= UInt<1>("h01") @[control_unit.scala 87:22]
              io.vec_write <= UInt<1>("h00") @[control_unit.scala 88:22]
              io.mem_data_sel <= UInt<1>("h00") @[control_unit.scala 89:24]
              io.operand_a <= UInt<1>("h00") @[control_unit.scala 90:22]
              io.operand_b <= UInt<1>("h01") @[control_unit.scala 91:22]
              io.extend_sel <= UInt<1>("h00") @[control_unit.scala 92:23]
              io.next_pc_selector <= UInt<1>("h00") @[control_unit.scala 93:29]
              skip @[control_unit.scala 83:41]
            else : @[control_unit.scala 97:41]
              node _T_5 = eq(io.op_code, UInt<7>("h06f")) @[control_unit.scala 97:25]
              when _T_5 : @[control_unit.scala 97:41]
                io.mem_write <= UInt<1>("h00") @[control_unit.scala 98:22]
                io.branch <= UInt<1>("h00") @[control_unit.scala 99:19]
                io.mem_read <= UInt<1>("h00") @[control_unit.scala 100:21]
                io.reg_write <= UInt<1>("h01") @[control_unit.scala 101:22]
                io.vec_write <= UInt<1>("h00") @[control_unit.scala 102:22]
                io.mem_data_sel <= UInt<1>("h00") @[control_unit.scala 103:24]
                io.operand_a <= UInt<2>("h02") @[control_unit.scala 104:22]
                io.operand_b <= UInt<1>("h00") @[control_unit.scala 105:22]
                io.extend_sel <= UInt<1>("h00") @[control_unit.scala 106:23]
                io.next_pc_selector <= UInt<2>("h02") @[control_unit.scala 107:29]
                skip @[control_unit.scala 97:41]
              else : @[control_unit.scala 112:41]
                node _T_6 = eq(io.op_code, UInt<7>("h067")) @[control_unit.scala 112:25]
                when _T_6 : @[control_unit.scala 112:41]
                  io.mem_write <= UInt<1>("h00") @[control_unit.scala 113:22]
                  io.branch <= UInt<1>("h00") @[control_unit.scala 114:19]
                  io.mem_read <= UInt<1>("h00") @[control_unit.scala 115:21]
                  io.reg_write <= UInt<1>("h01") @[control_unit.scala 116:22]
                  io.vec_write <= UInt<1>("h00") @[control_unit.scala 117:22]
                  io.mem_data_sel <= UInt<1>("h00") @[control_unit.scala 118:24]
                  io.operand_a <= UInt<2>("h02") @[control_unit.scala 119:22]
                  io.operand_b <= UInt<1>("h00") @[control_unit.scala 120:22]
                  io.extend_sel <= UInt<1>("h00") @[control_unit.scala 121:23]
                  io.next_pc_selector <= UInt<2>("h03") @[control_unit.scala 122:29]
                  skip @[control_unit.scala 112:41]
                else : @[control_unit.scala 127:41]
                  node _T_7 = eq(io.op_code, UInt<2>("h03")) @[control_unit.scala 127:25]
                  when _T_7 : @[control_unit.scala 127:41]
                    io.mem_write <= UInt<1>("h00") @[control_unit.scala 128:22]
                    io.branch <= UInt<1>("h00") @[control_unit.scala 129:19]
                    io.mem_read <= UInt<1>("h01") @[control_unit.scala 130:21]
                    io.reg_write <= UInt<1>("h01") @[control_unit.scala 131:22]
                    io.vec_write <= UInt<1>("h00") @[control_unit.scala 132:22]
                    io.mem_data_sel <= UInt<1>("h01") @[control_unit.scala 133:24]
                    io.operand_a <= UInt<1>("h00") @[control_unit.scala 134:22]
                    io.operand_b <= UInt<1>("h01") @[control_unit.scala 135:22]
                    io.extend_sel <= UInt<1>("h00") @[control_unit.scala 136:23]
                    io.next_pc_selector <= UInt<1>("h00") @[control_unit.scala 137:29]
                    skip @[control_unit.scala 127:41]
                  else : @[control_unit.scala 140:41]
                    node _T_8 = eq(io.op_code, UInt<7>("h057")) @[control_unit.scala 140:25]
                    when _T_8 : @[control_unit.scala 140:41]
                      io.mem_write <= UInt<1>("h00") @[control_unit.scala 141:22]
                      io.branch <= UInt<1>("h00") @[control_unit.scala 142:19]
                      io.mem_read <= UInt<1>("h00") @[control_unit.scala 143:21]
                      io.reg_write <= UInt<1>("h01") @[control_unit.scala 144:22]
                      io.vec_write <= UInt<1>("h00") @[control_unit.scala 145:22]
                      io.mem_data_sel <= UInt<1>("h00") @[control_unit.scala 146:24]
                      io.operand_b <= UInt<2>("h02") @[control_unit.scala 147:22]
                      io.extend_sel <= UInt<1>("h00") @[control_unit.scala 148:23]
                      io.next_pc_selector <= UInt<1>("h00") @[control_unit.scala 149:29]
                      node _T_9 = eq(io.rs1, UInt<1>("h00")) @[control_unit.scala 150:22]
                      node _T_10 = eq(io.rd, UInt<1>("h00")) @[control_unit.scala 150:38]
                      node _T_11 = and(_T_9, _T_10) @[control_unit.scala 150:30]
                      when _T_11 : @[control_unit.scala 150:45]
                        io.operand_a <= UInt<1>("h00") @[control_unit.scala 151:26]
                        skip @[control_unit.scala 150:45]
                      else : @[control_unit.scala 153:50]
                        node _T_12 = eq(io.rs1, UInt<1>("h00")) @[control_unit.scala 153:26]
                        node _T_13 = neq(io.rd, UInt<1>("h00")) @[control_unit.scala 153:42]
                        node _T_14 = and(_T_12, _T_13) @[control_unit.scala 153:34]
                        when _T_14 : @[control_unit.scala 153:50]
                          io.operand_a <= UInt<1>("h00") @[control_unit.scala 154:26]
                          skip @[control_unit.scala 153:50]
                        else : @[control_unit.scala 156:19]
                          io.operand_a <= UInt<1>("h00") @[control_unit.scala 157:26]
                          skip @[control_unit.scala 156:19]
                      skip @[control_unit.scala 140:41]
                    else : @[control_unit.scala 162:41]
                      node _T_15 = eq(io.op_code, UInt<3>("h07")) @[control_unit.scala 162:25]
                      when _T_15 : @[control_unit.scala 162:41]
                        io.mem_write <= UInt<1>("h00") @[control_unit.scala 163:22]
                        io.branch <= UInt<1>("h00") @[control_unit.scala 164:19]
                        io.mem_read <= UInt<1>("h01") @[control_unit.scala 165:21]
                        io.reg_write <= UInt<1>("h00") @[control_unit.scala 166:22]
                        io.vec_write <= UInt<1>("h01") @[control_unit.scala 167:22]
                        io.mem_data_sel <= UInt<2>("h02") @[control_unit.scala 168:24]
                        io.operand_a <= UInt<1>("h00") @[control_unit.scala 169:22]
                        io.operand_b <= UInt<2>("h02") @[control_unit.scala 170:22]
                        io.extend_sel <= UInt<1>("h00") @[control_unit.scala 171:23]
                        io.next_pc_selector <= UInt<1>("h00") @[control_unit.scala 172:29]
                        skip @[control_unit.scala 162:41]
                      else : @[control_unit.scala 175:41]
                        node _T_16 = eq(io.op_code, UInt<6>("h027")) @[control_unit.scala 175:25]
                        when _T_16 : @[control_unit.scala 175:41]
                          io.mem_write <= UInt<1>("h01") @[control_unit.scala 176:22]
                          io.branch <= UInt<1>("h00") @[control_unit.scala 177:19]
                          io.mem_read <= UInt<1>("h00") @[control_unit.scala 178:21]
                          io.reg_write <= UInt<1>("h00") @[control_unit.scala 179:22]
                          io.vec_write <= UInt<1>("h00") @[control_unit.scala 180:22]
                          io.mem_data_sel <= UInt<1>("h00") @[control_unit.scala 181:24]
                          io.operand_a <= UInt<1>("h00") @[control_unit.scala 182:22]
                          io.operand_b <= UInt<1>("h01") @[control_unit.scala 183:22]
                          io.extend_sel <= UInt<2>("h03") @[control_unit.scala 184:23]
                          io.next_pc_selector <= UInt<1>("h00") @[control_unit.scala 185:29]
                          skip @[control_unit.scala 175:41]
                        else : @[control_unit.scala 189:15]
                          io.mem_write <= UInt<1>("h00") @[control_unit.scala 190:22]
                          io.branch <= UInt<1>("h00") @[control_unit.scala 191:19]
                          io.mem_read <= UInt<1>("h00") @[control_unit.scala 192:21]
                          io.reg_write <= UInt<1>("h00") @[control_unit.scala 193:22]
                          io.vec_write <= UInt<1>("h00") @[control_unit.scala 194:22]
                          io.mem_data_sel <= UInt<1>("h00") @[control_unit.scala 195:25]
                          io.operand_a <= UInt<1>("h00") @[control_unit.scala 196:22]
                          io.operand_b <= UInt<1>("h00") @[control_unit.scala 197:22]
                          io.extend_sel <= UInt<1>("h00") @[control_unit.scala 198:23]
                          io.next_pc_selector <= UInt<1>("h00") @[control_unit.scala 199:29]
                          skip @[control_unit.scala 189:15]
    
  module immediate_instruction : 
    input clock : Clock
    input reset : Reset
    output io : {flip i_instruction : UInt<32>, out : SInt<32>, flip pc_in : UInt<32>, out_j_b : SInt<32>}
    
    node op_code = bits(io.i_instruction, 6, 0) @[immediate_instruction.scala 13:35]
    node _T = eq(op_code, UInt<5>("h013")) @[immediate_instruction.scala 17:18]
    node _T_1 = eq(op_code, UInt<7>("h067")) @[immediate_instruction.scala 17:44]
    node _T_2 = or(_T, _T_1) @[immediate_instruction.scala 17:34]
    node _T_3 = eq(op_code, UInt<2>("h03")) @[immediate_instruction.scala 17:70]
    node _T_4 = or(_T_2, _T_3) @[immediate_instruction.scala 17:60]
    when _T_4 : @[immediate_instruction.scala 17:86]
      node _io_out_T = bits(io.i_instruction, 31, 20) @[immediate_instruction.scala 18:35]
      node _io_out_T_1 = asSInt(_io_out_T) @[immediate_instruction.scala 18:43]
      io.out <= _io_out_T_1 @[immediate_instruction.scala 18:16]
      io.out_j_b <= asSInt(UInt<1>("h00")) @[immediate_instruction.scala 19:20]
      skip @[immediate_instruction.scala 17:86]
    else : @[immediate_instruction.scala 22:38]
      node _T_5 = eq(op_code, UInt<6>("h023")) @[immediate_instruction.scala 22:22]
      when _T_5 : @[immediate_instruction.scala 22:38]
        node io_out_hi = bits(io.i_instruction, 31, 25) @[immediate_instruction.scala 23:40]
        node io_out_lo = bits(io.i_instruction, 11, 7) @[immediate_instruction.scala 23:64]
        node _io_out_T_2 = cat(io_out_hi, io_out_lo) @[Cat.scala 30:58]
        node _io_out_T_3 = asSInt(_io_out_T_2) @[immediate_instruction.scala 23:73]
        io.out <= _io_out_T_3 @[immediate_instruction.scala 23:16]
        io.out_j_b <= asSInt(UInt<1>("h00")) @[immediate_instruction.scala 24:20]
        skip @[immediate_instruction.scala 22:38]
      else : @[immediate_instruction.scala 27:38]
        node _T_6 = eq(op_code, UInt<7>("h063")) @[immediate_instruction.scala 27:22]
        when _T_6 : @[immediate_instruction.scala 27:38]
          node b_hi_hi_hi = bits(io.i_instruction, 31, 31) @[immediate_instruction.scala 28:37]
          node b_hi_hi_lo = bits(io.i_instruction, 7, 7) @[immediate_instruction.scala 28:58]
          node b_hi_lo = bits(io.i_instruction, 30, 25) @[immediate_instruction.scala 28:78]
          node b_lo_hi = bits(io.i_instruction, 11, 8) @[immediate_instruction.scala 28:102]
          node b_lo = cat(b_lo_hi, UInt<1>("h00")) @[Cat.scala 30:58]
          node b_hi_hi = cat(b_hi_hi_hi, b_hi_hi_lo) @[Cat.scala 30:58]
          node b_hi = cat(b_hi_hi, b_hi_lo) @[Cat.scala 30:58]
          node _b_T = cat(b_hi, b_lo) @[Cat.scala 30:58]
          node b = asSInt(_b_T) @[immediate_instruction.scala 28:117]
          node _io_out_j_b_T = asSInt(io.pc_in) @[immediate_instruction.scala 29:36]
          node _io_out_j_b_T_1 = add(b, _io_out_j_b_T) @[immediate_instruction.scala 29:25]
          node _io_out_j_b_T_2 = tail(_io_out_j_b_T_1, 1) @[immediate_instruction.scala 29:25]
          node _io_out_j_b_T_3 = asSInt(_io_out_j_b_T_2) @[immediate_instruction.scala 29:25]
          io.out_j_b <= _io_out_j_b_T_3 @[immediate_instruction.scala 29:20]
          io.out <= asSInt(UInt<1>("h00")) @[immediate_instruction.scala 30:16]
          skip @[immediate_instruction.scala 27:38]
        else : @[immediate_instruction.scala 33:38]
          node _T_7 = eq(op_code, UInt<6>("h037")) @[immediate_instruction.scala 33:22]
          when _T_7 : @[immediate_instruction.scala 33:38]
            node io_out_hi_1 = bits(io.i_instruction, 31, 12) @[immediate_instruction.scala 34:40]
            node _io_out_T_4 = cat(io_out_hi_1, UInt<1>("h00")) @[Cat.scala 30:58]
            node _io_out_T_5 = asSInt(_io_out_T_4) @[immediate_instruction.scala 34:67]
            io.out <= _io_out_T_5 @[immediate_instruction.scala 34:16]
            io.out_j_b <= asSInt(UInt<1>("h00")) @[immediate_instruction.scala 35:20]
            skip @[immediate_instruction.scala 33:38]
          else : @[immediate_instruction.scala 38:38]
            node _T_8 = eq(op_code, UInt<7>("h06f")) @[immediate_instruction.scala 38:22]
            when _T_8 : @[immediate_instruction.scala 38:38]
              node a_hi_hi_hi = bits(io.i_instruction, 31, 31) @[immediate_instruction.scala 39:37]
              node a_hi_hi_lo = bits(io.i_instruction, 19, 12) @[immediate_instruction.scala 39:58]
              node a_hi_lo = bits(io.i_instruction, 20, 20) @[immediate_instruction.scala 39:82]
              node a_lo_hi = bits(io.i_instruction, 30, 21) @[immediate_instruction.scala 39:103]
              node a_lo = cat(a_lo_hi, UInt<1>("h00")) @[Cat.scala 30:58]
              node a_hi_hi = cat(a_hi_hi_hi, a_hi_hi_lo) @[Cat.scala 30:58]
              node a_hi = cat(a_hi_hi, a_hi_lo) @[Cat.scala 30:58]
              node a = cat(a_hi, a_lo) @[Cat.scala 30:58]
              node _io_out_j_b_T_4 = asSInt(a) @[immediate_instruction.scala 40:25]
              node _io_out_j_b_T_5 = asSInt(io.pc_in) @[immediate_instruction.scala 40:43]
              node _io_out_j_b_T_6 = add(_io_out_j_b_T_4, _io_out_j_b_T_5) @[immediate_instruction.scala 40:32]
              node _io_out_j_b_T_7 = tail(_io_out_j_b_T_6, 1) @[immediate_instruction.scala 40:32]
              node _io_out_j_b_T_8 = asSInt(_io_out_j_b_T_7) @[immediate_instruction.scala 40:32]
              io.out_j_b <= _io_out_j_b_T_8 @[immediate_instruction.scala 40:20]
              io.out <= asSInt(UInt<1>("h00")) @[immediate_instruction.scala 41:16]
              skip @[immediate_instruction.scala 38:38]
            else : @[immediate_instruction.scala 43:15]
              io.out <= asSInt(UInt<1>("h00")) @[immediate_instruction.scala 44:16]
              io.out_j_b <= asSInt(UInt<1>("h00")) @[immediate_instruction.scala 45:20]
              skip @[immediate_instruction.scala 43:15]
    
  module instr_memory : 
    input clock : Clock
    input reset : Reset
    output io : {flip address : UInt<10>, r_data : UInt<32>}
    
    cmem memory : UInt<32>[1024] @[instr_memory.scala 13:21]
    read mport io_r_data_MPORT = memory[io.address], clock @[instr_memory.scala 15:29]
    io.r_data <= io_r_data_MPORT @[instr_memory.scala 15:15]
    
  module register_file : 
    input clock : Clock
    input reset : Reset
    output io : {flip rs1_in : UInt<5>, flip rs2_in : UInt<5>, flip rd : UInt<5>, flip reg_enable : UInt<1>, flip reg_data : SInt<32>, rs1_out : SInt<32>, rs2_out : SInt<32>}
    
    wire _regs_WIRE : SInt<32>[32] @[register_file.scala 21:31]
    _regs_WIRE[0] <= asSInt(UInt<32>("h00")) @[register_file.scala 21:31]
    _regs_WIRE[1] <= asSInt(UInt<32>("h00")) @[register_file.scala 21:31]
    _regs_WIRE[2] <= asSInt(UInt<32>("h00")) @[register_file.scala 21:31]
    _regs_WIRE[3] <= asSInt(UInt<32>("h00")) @[register_file.scala 21:31]
    _regs_WIRE[4] <= asSInt(UInt<32>("h00")) @[register_file.scala 21:31]
    _regs_WIRE[5] <= asSInt(UInt<32>("h00")) @[register_file.scala 21:31]
    _regs_WIRE[6] <= asSInt(UInt<32>("h00")) @[register_file.scala 21:31]
    _regs_WIRE[7] <= asSInt(UInt<32>("h00")) @[register_file.scala 21:31]
    _regs_WIRE[8] <= asSInt(UInt<32>("h00")) @[register_file.scala 21:31]
    _regs_WIRE[9] <= asSInt(UInt<32>("h00")) @[register_file.scala 21:31]
    _regs_WIRE[10] <= asSInt(UInt<32>("h00")) @[register_file.scala 21:31]
    _regs_WIRE[11] <= asSInt(UInt<32>("h00")) @[register_file.scala 21:31]
    _regs_WIRE[12] <= asSInt(UInt<32>("h00")) @[register_file.scala 21:31]
    _regs_WIRE[13] <= asSInt(UInt<32>("h00")) @[register_file.scala 21:31]
    _regs_WIRE[14] <= asSInt(UInt<32>("h00")) @[register_file.scala 21:31]
    _regs_WIRE[15] <= asSInt(UInt<32>("h00")) @[register_file.scala 21:31]
    _regs_WIRE[16] <= asSInt(UInt<32>("h00")) @[register_file.scala 21:31]
    _regs_WIRE[17] <= asSInt(UInt<32>("h00")) @[register_file.scala 21:31]
    _regs_WIRE[18] <= asSInt(UInt<32>("h00")) @[register_file.scala 21:31]
    _regs_WIRE[19] <= asSInt(UInt<32>("h00")) @[register_file.scala 21:31]
    _regs_WIRE[20] <= asSInt(UInt<32>("h00")) @[register_file.scala 21:31]
    _regs_WIRE[21] <= asSInt(UInt<32>("h00")) @[register_file.scala 21:31]
    _regs_WIRE[22] <= asSInt(UInt<32>("h00")) @[register_file.scala 21:31]
    _regs_WIRE[23] <= asSInt(UInt<32>("h00")) @[register_file.scala 21:31]
    _regs_WIRE[24] <= asSInt(UInt<32>("h00")) @[register_file.scala 21:31]
    _regs_WIRE[25] <= asSInt(UInt<32>("h00")) @[register_file.scala 21:31]
    _regs_WIRE[26] <= asSInt(UInt<32>("h00")) @[register_file.scala 21:31]
    _regs_WIRE[27] <= asSInt(UInt<32>("h00")) @[register_file.scala 21:31]
    _regs_WIRE[28] <= asSInt(UInt<32>("h00")) @[register_file.scala 21:31]
    _regs_WIRE[29] <= asSInt(UInt<32>("h00")) @[register_file.scala 21:31]
    _regs_WIRE[30] <= asSInt(UInt<32>("h00")) @[register_file.scala 21:31]
    _regs_WIRE[31] <= asSInt(UInt<32>("h00")) @[register_file.scala 21:31]
    reg regs : SInt<32>[32], clock with : (reset => (reset, _regs_WIRE)) @[register_file.scala 21:23]
    node _io_rs1_out_T = orr(io.rs1_in) @[register_file.scala 22:34]
    node _io_rs1_out_T_1 = mux(_io_rs1_out_T, regs[io.rs1_in], asSInt(UInt<1>("h00"))) @[register_file.scala 22:22]
    io.rs1_out <= _io_rs1_out_T_1 @[register_file.scala 22:16]
    node _io_rs2_out_T = orr(io.rs2_in) @[register_file.scala 23:34]
    node _io_rs2_out_T_1 = mux(_io_rs2_out_T, regs[io.rs2_in], asSInt(UInt<1>("h00"))) @[register_file.scala 23:22]
    io.rs2_out <= _io_rs2_out_T_1 @[register_file.scala 23:16]
    node _T = orr(io.rd) @[register_file.scala 24:33]
    node _T_1 = and(io.reg_enable, _T) @[register_file.scala 24:25]
    when _T_1 : @[register_file.scala 24:37]
      regs[io.rd] <= io.reg_data @[register_file.scala 25:20]
      skip @[register_file.scala 24:37]
    
  module s_memory : 
    input clock : Clock
    input reset : Reset
    output io : {flip addr : UInt<32>, flip mem_data : SInt<32>, flip w_enable : UInt<1>, flip r_enable : UInt<1>, dataout : SInt<128>}
    
    cmem memory : SInt<32>[1024] @[s_memory.scala 13:21]
    when io.w_enable : @[s_memory.scala 15:22]
      node _T = bits(io.addr, 9, 0)
      write mport MPORT = memory[_T], clock
      MPORT <= io.mem_data
      skip @[s_memory.scala 15:22]
    read mport io_dataout_MPORT = memory[UInt<7>("h05a")], clock @[s_memory.scala 18:30]
    io.dataout <= io_dataout_MPORT @[s_memory.scala 18:16]
    
  module vlsu : 
    input clock : Clock
    input reset : Reset
    output io : {flip vlmul : UInt<3>, flip vsew : UInt<3>, flip opcode : UInt<7>, flip mew : UInt<1>, flip width_lw : UInt<3>, out : UInt<32>}
    
    node _T = eq(io.opcode, UInt<7>("h057")) @[vlsu.scala 15:21]
    when _T : @[vlsu.scala 15:38]
      node _T_1 = eq(io.vlmul, UInt<2>("h03")) @[vlsu.scala 16:23]
      node _T_2 = eq(io.vsew, UInt<1>("h00")) @[vlsu.scala 16:45]
      node _T_3 = and(_T_1, _T_2) @[vlsu.scala 16:35]
      when _T_3 : @[vlsu.scala 16:57]
        io.out <= UInt<8>("h080") @[vlsu.scala 17:20]
        skip @[vlsu.scala 16:57]
      else : @[vlsu.scala 20:9]
        node _T_4 = eq(io.vlmul, UInt<2>("h02")) @[vlsu.scala 19:29]
        node _T_5 = eq(io.vsew, UInt<1>("h00")) @[vlsu.scala 19:52]
        node _T_6 = and(_T_4, _T_5) @[vlsu.scala 19:42]
        node _T_7 = eq(io.vlmul, UInt<2>("h03")) @[vlsu.scala 19:77]
        node _T_8 = eq(io.vsew, UInt<1>("h01")) @[vlsu.scala 19:99]
        node _T_9 = and(_T_7, _T_8) @[vlsu.scala 19:89]
        node _T_10 = or(_T_6, _T_9) @[vlsu.scala 19:65]
        when _T_10 : @[vlsu.scala 20:9]
          io.out <= UInt<7>("h040") @[vlsu.scala 21:20]
          skip @[vlsu.scala 20:9]
        else : @[vlsu.scala 25:9]
          node _T_11 = eq(io.vlmul, UInt<1>("h01")) @[vlsu.scala 23:29]
          node _T_12 = eq(io.vsew, UInt<1>("h00")) @[vlsu.scala 23:51]
          node _T_13 = and(_T_11, _T_12) @[vlsu.scala 23:41]
          node _T_14 = eq(io.vlmul, UInt<2>("h02")) @[vlsu.scala 23:76]
          node _T_15 = eq(io.vsew, UInt<1>("h01")) @[vlsu.scala 23:98]
          node _T_16 = and(_T_14, _T_15) @[vlsu.scala 23:88]
          node _T_17 = or(_T_13, _T_16) @[vlsu.scala 23:64]
          node _T_18 = eq(io.vlmul, UInt<2>("h03")) @[vlsu.scala 24:18]
          node _T_19 = eq(io.vsew, UInt<2>("h02")) @[vlsu.scala 24:40]
          node _T_20 = and(_T_18, _T_19) @[vlsu.scala 24:30]
          node _T_21 = or(_T_17, _T_20) @[vlsu.scala 23:111]
          when _T_21 : @[vlsu.scala 25:9]
            io.out <= UInt<6>("h020") @[vlsu.scala 26:20]
            skip @[vlsu.scala 25:9]
          else : @[vlsu.scala 31:9]
            node _T_22 = eq(io.vlmul, UInt<1>("h00")) @[vlsu.scala 29:29]
            node _T_23 = eq(io.vsew, UInt<1>("h00")) @[vlsu.scala 29:51]
            node _T_24 = and(_T_22, _T_23) @[vlsu.scala 29:41]
            node _T_25 = eq(io.vlmul, UInt<1>("h01")) @[vlsu.scala 29:76]
            node _T_26 = eq(io.vsew, UInt<1>("h01")) @[vlsu.scala 29:98]
            node _T_27 = and(_T_25, _T_26) @[vlsu.scala 29:88]
            node _T_28 = or(_T_24, _T_27) @[vlsu.scala 29:64]
            node _T_29 = eq(io.vlmul, UInt<2>("h02")) @[vlsu.scala 30:18]
            node _T_30 = eq(io.vsew, UInt<2>("h02")) @[vlsu.scala 30:40]
            node _T_31 = and(_T_29, _T_30) @[vlsu.scala 30:30]
            node _T_32 = or(_T_28, _T_31) @[vlsu.scala 29:111]
            node _T_33 = eq(io.vlmul, UInt<2>("h03")) @[vlsu.scala 30:65]
            node _T_34 = eq(io.vsew, UInt<2>("h03")) @[vlsu.scala 30:87]
            node _T_35 = and(_T_33, _T_34) @[vlsu.scala 30:77]
            node _T_36 = or(_T_32, _T_35) @[vlsu.scala 30:53]
            when _T_36 : @[vlsu.scala 31:9]
              io.out <= UInt<5>("h010") @[vlsu.scala 32:20]
              skip @[vlsu.scala 31:9]
            else : @[vlsu.scala 37:9]
              node _T_37 = eq(io.vlmul, UInt<1>("h00")) @[vlsu.scala 35:29]
              node _T_38 = eq(io.vsew, UInt<1>("h01")) @[vlsu.scala 35:51]
              node _T_39 = and(_T_37, _T_38) @[vlsu.scala 35:41]
              node _T_40 = eq(io.vlmul, UInt<1>("h01")) @[vlsu.scala 35:76]
              node _T_41 = eq(io.vsew, UInt<2>("h02")) @[vlsu.scala 35:98]
              node _T_42 = and(_T_40, _T_41) @[vlsu.scala 35:88]
              node _T_43 = or(_T_39, _T_42) @[vlsu.scala 35:64]
              node _T_44 = eq(io.vlmul, UInt<2>("h02")) @[vlsu.scala 36:18]
              node _T_45 = eq(io.vsew, UInt<2>("h03")) @[vlsu.scala 36:40]
              node _T_46 = and(_T_44, _T_45) @[vlsu.scala 36:30]
              node _T_47 = or(_T_43, _T_46) @[vlsu.scala 35:111]
              node _T_48 = eq(io.vlmul, UInt<3>("h07")) @[vlsu.scala 36:65]
              node _T_49 = eq(io.vsew, UInt<1>("h00")) @[vlsu.scala 36:87]
              node _T_50 = and(_T_48, _T_49) @[vlsu.scala 36:77]
              node _T_51 = or(_T_47, _T_50) @[vlsu.scala 36:53]
              when _T_51 : @[vlsu.scala 37:9]
                io.out <= UInt<4>("h08") @[vlsu.scala 38:20]
                skip @[vlsu.scala 37:9]
              else : @[vlsu.scala 43:9]
                node _T_52 = eq(io.vlmul, UInt<1>("h00")) @[vlsu.scala 41:29]
                node _T_53 = eq(io.vsew, UInt<2>("h02")) @[vlsu.scala 41:51]
                node _T_54 = and(_T_52, _T_53) @[vlsu.scala 41:41]
                node _T_55 = eq(io.vlmul, UInt<1>("h01")) @[vlsu.scala 41:77]
                node _T_56 = eq(io.vsew, UInt<2>("h03")) @[vlsu.scala 41:99]
                node _T_57 = and(_T_55, _T_56) @[vlsu.scala 41:89]
                node _T_58 = or(_T_54, _T_57) @[vlsu.scala 41:65]
                node _T_59 = eq(io.vlmul, UInt<3>("h07")) @[vlsu.scala 42:18]
                node _T_60 = eq(io.vsew, UInt<1>("h01")) @[vlsu.scala 42:40]
                node _T_61 = and(_T_59, _T_60) @[vlsu.scala 42:30]
                node _T_62 = or(_T_58, _T_61) @[vlsu.scala 41:113]
                node _T_63 = eq(io.vlmul, UInt<3>("h06")) @[vlsu.scala 42:65]
                node _T_64 = eq(io.vsew, UInt<1>("h00")) @[vlsu.scala 42:87]
                node _T_65 = and(_T_63, _T_64) @[vlsu.scala 42:77]
                node _T_66 = or(_T_62, _T_65) @[vlsu.scala 42:53]
                when _T_66 : @[vlsu.scala 43:9]
                  io.out <= UInt<3>("h04") @[vlsu.scala 44:20]
                  skip @[vlsu.scala 43:9]
                else : @[vlsu.scala 48:9]
                  node _T_67 = eq(io.vlmul, UInt<1>("h00")) @[vlsu.scala 46:29]
                  node _T_68 = eq(io.vsew, UInt<2>("h03")) @[vlsu.scala 46:51]
                  node _T_69 = and(_T_67, _T_68) @[vlsu.scala 46:41]
                  node _T_70 = eq(io.vlmul, UInt<3>("h07")) @[vlsu.scala 46:76]
                  node _T_71 = eq(io.vsew, UInt<2>("h02")) @[vlsu.scala 46:98]
                  node _T_72 = and(_T_70, _T_71) @[vlsu.scala 46:88]
                  node _T_73 = or(_T_69, _T_72) @[vlsu.scala 46:64]
                  node _T_74 = eq(io.vlmul, UInt<3>("h06")) @[vlsu.scala 47:18]
                  node _T_75 = eq(io.vsew, UInt<1>("h01")) @[vlsu.scala 47:40]
                  node _T_76 = and(_T_74, _T_75) @[vlsu.scala 47:30]
                  node _T_77 = or(_T_73, _T_76) @[vlsu.scala 46:111]
                  node _T_78 = eq(io.vlmul, UInt<3>("h05")) @[vlsu.scala 47:65]
                  node _T_79 = eq(io.vsew, UInt<1>("h00")) @[vlsu.scala 47:87]
                  node _T_80 = and(_T_78, _T_79) @[vlsu.scala 47:77]
                  node _T_81 = or(_T_77, _T_80) @[vlsu.scala 47:53]
                  when _T_81 : @[vlsu.scala 48:9]
                    io.out <= UInt<2>("h02") @[vlsu.scala 49:20]
                    skip @[vlsu.scala 48:9]
                  else : @[vlsu.scala 53:9]
                    node _T_82 = eq(io.vlmul, UInt<3>("h07")) @[vlsu.scala 51:29]
                    node _T_83 = eq(io.vsew, UInt<2>("h03")) @[vlsu.scala 51:51]
                    node _T_84 = and(_T_82, _T_83) @[vlsu.scala 51:41]
                    node _T_85 = eq(io.vlmul, UInt<3>("h06")) @[vlsu.scala 51:76]
                    node _T_86 = eq(io.vsew, UInt<2>("h02")) @[vlsu.scala 51:98]
                    node _T_87 = and(_T_85, _T_86) @[vlsu.scala 51:88]
                    node _T_88 = or(_T_84, _T_87) @[vlsu.scala 51:64]
                    node _T_89 = eq(io.vlmul, UInt<3>("h05")) @[vlsu.scala 52:18]
                    node _T_90 = eq(io.vsew, UInt<1>("h01")) @[vlsu.scala 52:40]
                    node _T_91 = and(_T_89, _T_90) @[vlsu.scala 52:30]
                    node _T_92 = or(_T_88, _T_91) @[vlsu.scala 51:111]
                    when _T_92 : @[vlsu.scala 53:9]
                      io.out <= UInt<1>("h01") @[vlsu.scala 54:20]
                      skip @[vlsu.scala 53:9]
                    else : @[vlsu.scala 56:19]
                      io.out <= UInt<1>("h00") @[vlsu.scala 57:16]
                      skip @[vlsu.scala 56:19]
      skip @[vlsu.scala 15:38]
    else : @[vlsu.scala 61:40]
      node _T_93 = eq(io.opcode, UInt<3>("h07")) @[vlsu.scala 61:24]
      when _T_93 : @[vlsu.scala 61:40]
        node _T_94 = eq(io.mew, UInt<1>("h00")) @[vlsu.scala 62:20]
        node _T_95 = eq(io.width_lw, UInt<1>("h00")) @[vlsu.scala 62:41]
        node _T_96 = and(_T_94, _T_95) @[vlsu.scala 62:27]
        when _T_96 : @[vlsu.scala 62:53]
          io.out <= UInt<4>("h08") @[vlsu.scala 63:20]
          skip @[vlsu.scala 62:53]
        else : @[vlsu.scala 65:58]
          node _T_97 = eq(io.mew, UInt<1>("h00")) @[vlsu.scala 65:25]
          node _T_98 = eq(io.width_lw, UInt<3>("h05")) @[vlsu.scala 65:46]
          node _T_99 = and(_T_97, _T_98) @[vlsu.scala 65:32]
          when _T_99 : @[vlsu.scala 65:58]
            io.out <= UInt<5>("h010") @[vlsu.scala 66:20]
            skip @[vlsu.scala 65:58]
          else : @[vlsu.scala 68:58]
            node _T_100 = eq(io.mew, UInt<1>("h00")) @[vlsu.scala 68:25]
            node _T_101 = eq(io.width_lw, UInt<3>("h06")) @[vlsu.scala 68:46]
            node _T_102 = and(_T_100, _T_101) @[vlsu.scala 68:32]
            when _T_102 : @[vlsu.scala 68:58]
              io.out <= UInt<6>("h020") @[vlsu.scala 69:20]
              skip @[vlsu.scala 68:58]
            else : @[vlsu.scala 71:58]
              node _T_103 = eq(io.mew, UInt<1>("h00")) @[vlsu.scala 71:25]
              node _T_104 = eq(io.width_lw, UInt<3>("h07")) @[vlsu.scala 71:46]
              node _T_105 = and(_T_103, _T_104) @[vlsu.scala 71:32]
              when _T_105 : @[vlsu.scala 71:58]
                io.out <= UInt<7>("h040") @[vlsu.scala 72:20]
                skip @[vlsu.scala 71:58]
              else : @[vlsu.scala 74:19]
                io.out <= UInt<1>("h00") @[vlsu.scala 75:20]
                skip @[vlsu.scala 74:19]
        skip @[vlsu.scala 61:40]
      else : @[vlsu.scala 78:15]
        io.out <= UInt<1>("h00") @[vlsu.scala 79:12]
        skip @[vlsu.scala 78:15]
    
  module vector_file : 
    input clock : Clock
    input reset : Reset
    output io : {flip vs1_in : UInt<5>, flip vs2_in : UInt<5>, flip vd : UInt<5>, flip vec_enable : UInt<1>, flip vec_data : SInt<128>, vs1_out : SInt<128>, vs2_out : SInt<128>}
    
    wire _regs_WIRE : SInt<128>[32] @[vector_file.scala 15:31]
    _regs_WIRE[0] <= asSInt(UInt<128>("h00")) @[vector_file.scala 15:31]
    _regs_WIRE[1] <= asSInt(UInt<128>("h00")) @[vector_file.scala 15:31]
    _regs_WIRE[2] <= asSInt(UInt<128>("h00")) @[vector_file.scala 15:31]
    _regs_WIRE[3] <= asSInt(UInt<128>("h00")) @[vector_file.scala 15:31]
    _regs_WIRE[4] <= asSInt(UInt<128>("h00")) @[vector_file.scala 15:31]
    _regs_WIRE[5] <= asSInt(UInt<128>("h00")) @[vector_file.scala 15:31]
    _regs_WIRE[6] <= asSInt(UInt<128>("h00")) @[vector_file.scala 15:31]
    _regs_WIRE[7] <= asSInt(UInt<128>("h00")) @[vector_file.scala 15:31]
    _regs_WIRE[8] <= asSInt(UInt<128>("h00")) @[vector_file.scala 15:31]
    _regs_WIRE[9] <= asSInt(UInt<128>("h00")) @[vector_file.scala 15:31]
    _regs_WIRE[10] <= asSInt(UInt<128>("h00")) @[vector_file.scala 15:31]
    _regs_WIRE[11] <= asSInt(UInt<128>("h00")) @[vector_file.scala 15:31]
    _regs_WIRE[12] <= asSInt(UInt<128>("h00")) @[vector_file.scala 15:31]
    _regs_WIRE[13] <= asSInt(UInt<128>("h00")) @[vector_file.scala 15:31]
    _regs_WIRE[14] <= asSInt(UInt<128>("h00")) @[vector_file.scala 15:31]
    _regs_WIRE[15] <= asSInt(UInt<128>("h00")) @[vector_file.scala 15:31]
    _regs_WIRE[16] <= asSInt(UInt<128>("h00")) @[vector_file.scala 15:31]
    _regs_WIRE[17] <= asSInt(UInt<128>("h00")) @[vector_file.scala 15:31]
    _regs_WIRE[18] <= asSInt(UInt<128>("h00")) @[vector_file.scala 15:31]
    _regs_WIRE[19] <= asSInt(UInt<128>("h00")) @[vector_file.scala 15:31]
    _regs_WIRE[20] <= asSInt(UInt<128>("h00")) @[vector_file.scala 15:31]
    _regs_WIRE[21] <= asSInt(UInt<128>("h00")) @[vector_file.scala 15:31]
    _regs_WIRE[22] <= asSInt(UInt<128>("h00")) @[vector_file.scala 15:31]
    _regs_WIRE[23] <= asSInt(UInt<128>("h00")) @[vector_file.scala 15:31]
    _regs_WIRE[24] <= asSInt(UInt<128>("h00")) @[vector_file.scala 15:31]
    _regs_WIRE[25] <= asSInt(UInt<128>("h00")) @[vector_file.scala 15:31]
    _regs_WIRE[26] <= asSInt(UInt<128>("h00")) @[vector_file.scala 15:31]
    _regs_WIRE[27] <= asSInt(UInt<128>("h00")) @[vector_file.scala 15:31]
    _regs_WIRE[28] <= asSInt(UInt<128>("h00")) @[vector_file.scala 15:31]
    _regs_WIRE[29] <= asSInt(UInt<128>("h00")) @[vector_file.scala 15:31]
    _regs_WIRE[30] <= asSInt(UInt<128>("h00")) @[vector_file.scala 15:31]
    _regs_WIRE[31] <= asSInt(UInt<128>("h00")) @[vector_file.scala 15:31]
    reg regs : SInt<128>[32], clock with : (reset => (reset, _regs_WIRE)) @[vector_file.scala 15:23]
    node _io_vs1_out_T = orr(io.vs1_in) @[vector_file.scala 16:34]
    node _io_vs1_out_T_1 = mux(_io_vs1_out_T, regs[io.vs1_in], asSInt(UInt<1>("h00"))) @[vector_file.scala 16:22]
    io.vs1_out <= _io_vs1_out_T_1 @[vector_file.scala 16:16]
    node _io_vs2_out_T = orr(io.vs2_in) @[vector_file.scala 17:34]
    node _io_vs2_out_T_1 = mux(_io_vs2_out_T, regs[io.vs2_in], asSInt(UInt<1>("h00"))) @[vector_file.scala 17:22]
    io.vs2_out <= _io_vs2_out_T_1 @[vector_file.scala 17:16]
    node _T = orr(io.vd) @[vector_file.scala 18:33]
    node _T_1 = and(io.vec_enable, _T) @[vector_file.scala 18:25]
    when _T_1 : @[vector_file.scala 18:37]
      regs[io.vd] <= io.vec_data @[vector_file.scala 19:20]
      skip @[vector_file.scala 18:37]
    
  module top_file : 
    input clock : Clock
    input reset : UInt<1>
    output io : {}
    
    inst pc_module of pc_counter_plus_4 @[top_file.scala 8:27]
    pc_module.clock <= clock
    pc_module.reset <= reset
    inst alu_control_module of alu_control @[top_file.scala 10:36]
    alu_control_module.clock <= clock
    alu_control_module.reset <= reset
    inst alu_module of alu @[top_file.scala 12:28]
    alu_module.clock <= clock
    alu_module.reset <= reset
    inst control_unit_module of control_unit @[top_file.scala 14:37]
    control_unit_module.clock <= clock
    control_unit_module.reset <= reset
    inst immediate_module of immediate_instruction @[top_file.scala 16:34]
    immediate_module.clock <= clock
    immediate_module.reset <= reset
    inst instr_module of instr_memory @[top_file.scala 18:30]
    instr_module.clock <= clock
    instr_module.reset <= reset
    inst register_file_module of register_file @[top_file.scala 20:38]
    register_file_module.clock <= clock
    register_file_module.reset <= reset
    inst s_memory_module of s_memory @[top_file.scala 22:33]
    s_memory_module.clock <= clock
    s_memory_module.reset <= reset
    inst vlsu_module of vlsu @[top_file.scala 24:29]
    vlsu_module.clock <= clock
    vlsu_module.reset <= reset
    inst vector_file_module of vector_file @[top_file.scala 26:36]
    vector_file_module.clock <= clock
    vector_file_module.reset <= reset
    node _instr_module_io_address_T = dshr(pc_module.io.out, UInt<2>("h02")) @[top_file.scala 30:49]
    instr_module.io.address <= _instr_module_io_address_T @[top_file.scala 30:29]
    node _control_unit_module_io_op_code_T = bits(instr_module.io.r_data, 7, 0) @[top_file.scala 31:61]
    control_unit_module.io.op_code <= _control_unit_module_io_op_code_T @[top_file.scala 31:36]
    node _control_unit_module_io_rs1_T = bits(instr_module.io.r_data, 19, 15) @[top_file.scala 32:57]
    control_unit_module.io.rs1 <= _control_unit_module_io_rs1_T @[top_file.scala 32:32]
    node _control_unit_module_io_rd_T = bits(instr_module.io.r_data, 11, 7) @[top_file.scala 33:56]
    control_unit_module.io.rd <= _control_unit_module_io_rd_T @[top_file.scala 33:31]
    node _register_file_module_io_rs1_in_T = bits(instr_module.io.r_data, 19, 15) @[top_file.scala 35:61]
    register_file_module.io.rs1_in <= _register_file_module_io_rs1_in_T @[top_file.scala 35:36]
    node _register_file_module_io_rs2_in_T = bits(instr_module.io.r_data, 24, 20) @[top_file.scala 36:61]
    register_file_module.io.rs2_in <= _register_file_module_io_rs2_in_T @[top_file.scala 36:36]
    node _vector_file_module_io_vs1_in_T = bits(instr_module.io.r_data, 19, 15) @[top_file.scala 38:59]
    vector_file_module.io.vs1_in <= _vector_file_module_io_vs1_in_T @[top_file.scala 38:34]
    node _vector_file_module_io_vs2_in_T = bits(instr_module.io.r_data, 24, 20) @[top_file.scala 39:59]
    vector_file_module.io.vs2_in <= _vector_file_module_io_vs2_in_T @[top_file.scala 39:34]
    node _vlsu_module_io_vlmul_T = bits(instr_module.io.r_data, 22, 20) @[top_file.scala 41:51]
    vlsu_module.io.vlmul <= _vlsu_module_io_vlmul_T @[top_file.scala 41:26]
    node _vlsu_module_io_vsew_T = bits(instr_module.io.r_data, 25, 23) @[top_file.scala 42:50]
    vlsu_module.io.vsew <= _vlsu_module_io_vsew_T @[top_file.scala 42:25]
    node _vlsu_module_io_opcode_T = bits(instr_module.io.r_data, 7, 0) @[top_file.scala 44:52]
    vlsu_module.io.opcode <= _vlsu_module_io_opcode_T @[top_file.scala 44:27]
    node _vlsu_module_io_mew_T = bits(instr_module.io.r_data, 28, 28) @[top_file.scala 45:49]
    vlsu_module.io.mew <= _vlsu_module_io_mew_T @[top_file.scala 45:24]
    node _vlsu_module_io_width_lw_T = bits(instr_module.io.r_data, 14, 12) @[top_file.scala 46:54]
    vlsu_module.io.width_lw <= _vlsu_module_io_width_lw_T @[top_file.scala 46:29]
    immediate_module.io.i_instruction <= instr_module.io.r_data @[top_file.scala 48:39]
    node _alu_control_module_io_op_code_T = bits(instr_module.io.r_data, 7, 0) @[top_file.scala 50:60]
    alu_control_module.io.op_code <= _alu_control_module_io_op_code_T @[top_file.scala 50:35]
    node _alu_control_module_io_fn3_T = bits(instr_module.io.r_data, 14, 12) @[top_file.scala 51:56]
    alu_control_module.io.fn3 <= _alu_control_module_io_fn3_T @[top_file.scala 51:31]
    node _alu_control_module_io_fn7_T = bits(instr_module.io.r_data, 30, 30) @[top_file.scala 52:56]
    alu_control_module.io.fn7 <= _alu_control_module_io_fn7_T @[top_file.scala 52:31]
    node _alu_control_module_io_lumop_T = bits(instr_module.io.r_data, 24, 20) @[top_file.scala 53:58]
    alu_control_module.io.lumop <= _alu_control_module_io_lumop_T @[top_file.scala 53:33]
    immediate_module.io.pc_in <= pc_module.io.out @[top_file.scala 55:31]
    node _alu_module_io_a32_0_T = asSInt(pc_module.io.out4) @[top_file.scala 59:36]
    node _alu_module_io_a32_0_T_1 = asSInt(pc_module.io.out) @[top_file.scala 60:35]
    node _alu_module_io_a32_0_T_2 = eq(UInt<1>("h01"), control_unit_module.io.operand_a) @[Mux.scala 80:60]
    node _alu_module_io_a32_0_T_3 = mux(_alu_module_io_a32_0_T_2, _alu_module_io_a32_0_T, register_file_module.io.rs1_out) @[Mux.scala 80:57]
    node _alu_module_io_a32_0_T_4 = eq(UInt<2>("h02"), control_unit_module.io.operand_a) @[Mux.scala 80:60]
    node _alu_module_io_a32_0_T_5 = mux(_alu_module_io_a32_0_T_4, _alu_module_io_a32_0_T_1, _alu_module_io_a32_0_T_3) @[Mux.scala 80:57]
    node _alu_module_io_a32_0_T_6 = eq(UInt<2>("h03"), control_unit_module.io.operand_a) @[Mux.scala 80:60]
    node _alu_module_io_a32_0_T_7 = mux(_alu_module_io_a32_0_T_6, register_file_module.io.rs1_out, _alu_module_io_a32_0_T_5) @[Mux.scala 80:57]
    alu_module.io.a32[0] <= _alu_module_io_a32_0_T_7 @[top_file.scala 57:26]
    node _alu_module_io_b32_0_T = asSInt(vlsu_module.io.out) @[top_file.scala 68:37]
    node _alu_module_io_b32_0_T_1 = eq(UInt<1>("h00"), control_unit_module.io.operand_b) @[Mux.scala 80:60]
    node _alu_module_io_b32_0_T_2 = mux(_alu_module_io_b32_0_T_1, register_file_module.io.rs2_out, asSInt(UInt<1>("h00"))) @[Mux.scala 80:57]
    node _alu_module_io_b32_0_T_3 = eq(UInt<1>("h01"), control_unit_module.io.operand_b) @[Mux.scala 80:60]
    node _alu_module_io_b32_0_T_4 = mux(_alu_module_io_b32_0_T_3, immediate_module.io.out, _alu_module_io_b32_0_T_2) @[Mux.scala 80:57]
    node _alu_module_io_b32_0_T_5 = eq(UInt<2>("h02"), control_unit_module.io.operand_b) @[Mux.scala 80:60]
    node _alu_module_io_b32_0_T_6 = mux(_alu_module_io_b32_0_T_5, _alu_module_io_b32_0_T, _alu_module_io_b32_0_T_4) @[Mux.scala 80:57]
    alu_module.io.b32[0] <= _alu_module_io_b32_0_T_6 @[top_file.scala 65:26]
    alu_module.io.alu <= alu_control_module.io.out @[top_file.scala 71:23]
    node s_memory_module_io_addr_lo = asUInt(alu_module.io.out[0]) @[top_file.scala 72:50]
    node s_memory_module_io_addr_hi = asUInt(alu_module.io.out[1]) @[top_file.scala 72:50]
    node _s_memory_module_io_addr_T = cat(s_memory_module_io_addr_hi, s_memory_module_io_addr_lo) @[top_file.scala 72:50]
    s_memory_module.io.addr <= _s_memory_module_io_addr_T @[top_file.scala 72:29]
    s_memory_module.io.mem_data <= register_file_module.io.rs2_out @[top_file.scala 73:33]
    s_memory_module.io.w_enable <= control_unit_module.io.mem_write @[top_file.scala 74:33]
    s_memory_module.io.r_enable <= control_unit_module.io.mem_read @[top_file.scala 75:33]
    node _register_file_module_io_rd_T = bits(instr_module.io.r_data, 11, 7) @[top_file.scala 81:57]
    register_file_module.io.rd <= _register_file_module_io_rd_T @[top_file.scala 81:32]
    register_file_module.io.reg_enable <= control_unit_module.io.reg_write @[top_file.scala 82:41]
    node _vector_file_module_io_vd_T = bits(instr_module.io.r_data, 11, 7) @[top_file.scala 84:55]
    vector_file_module.io.vd <= _vector_file_module_io_vd_T @[top_file.scala 84:30]
    vector_file_module.io.vec_enable <= control_unit_module.io.vec_write @[top_file.scala 85:39]
    node _register_file_module_io_reg_data_T = eq(UInt<1>("h00"), control_unit_module.io.mem_data_sel) @[Mux.scala 80:60]
    node _register_file_module_io_reg_data_T_1 = mux(_register_file_module_io_reg_data_T, alu_module.io.out[0], asSInt(UInt<1>("h00"))) @[Mux.scala 80:57]
    node _register_file_module_io_reg_data_T_2 = eq(UInt<1>("h01"), control_unit_module.io.mem_data_sel) @[Mux.scala 80:60]
    node _register_file_module_io_reg_data_T_3 = mux(_register_file_module_io_reg_data_T_2, s_memory_module.io.dataout, _register_file_module_io_reg_data_T_1) @[Mux.scala 80:57]
    register_file_module.io.reg_data <= _register_file_module_io_reg_data_T_3 @[top_file.scala 88:38]
    node _vector_file_module_io_vec_data_T = eq(UInt<1>("h00"), control_unit_module.io.mem_data_sel) @[Mux.scala 80:60]
    node _vector_file_module_io_vec_data_T_1 = mux(_vector_file_module_io_vec_data_T, alu_module.io.out[0], asSInt(UInt<1>("h00"))) @[Mux.scala 80:57]
    node _vector_file_module_io_vec_data_T_2 = eq(UInt<2>("h02"), control_unit_module.io.mem_data_sel) @[Mux.scala 80:60]
    node _vector_file_module_io_vec_data_T_3 = mux(_vector_file_module_io_vec_data_T_2, s_memory_module.io.dataout, _vector_file_module_io_vec_data_T_1) @[Mux.scala 80:57]
    vector_file_module.io.vec_data <= _vector_file_module_io_vec_data_T_3 @[top_file.scala 94:36]
    node logically_end = and(alu_module.io.branch, control_unit_module.io.branch) @[top_file.scala 109:46]
    node _mux1_T = asSInt(pc_module.io.out4) @[top_file.scala 111:80]
    node mux1 = mux(logically_end, immediate_module.io.out_j_b, _mux1_T) @[top_file.scala 111:19]
    node _plus_T = add(immediate_module.io.out, register_file_module.io.rs1_out) @[top_file.scala 112:40]
    node _plus_T_1 = tail(_plus_T, 1) @[top_file.scala 112:40]
    node plus = asSInt(_plus_T_1) @[top_file.scala 112:40]
    node _nextPC_T = asUInt(mux1) @[top_file.scala 116:23]
    node _nextPC_T_1 = asUInt(immediate_module.io.out_j_b) @[top_file.scala 117:46]
    node _nextPC_T_2 = asUInt(plus) @[top_file.scala 118:23]
    node _nextPC_T_3 = eq(UInt<1>("h01"), control_unit_module.io.next_pc_selector) @[Mux.scala 80:60]
    node _nextPC_T_4 = mux(_nextPC_T_3, _nextPC_T, pc_module.io.out4) @[Mux.scala 80:57]
    node _nextPC_T_5 = eq(UInt<2>("h02"), control_unit_module.io.next_pc_selector) @[Mux.scala 80:60]
    node _nextPC_T_6 = mux(_nextPC_T_5, _nextPC_T_1, _nextPC_T_4) @[Mux.scala 80:57]
    node _nextPC_T_7 = eq(UInt<2>("h03"), control_unit_module.io.next_pc_selector) @[Mux.scala 80:60]
    node nextPC = mux(_nextPC_T_7, _nextPC_T_2, _nextPC_T_6) @[Mux.scala 80:57]
    pc_module.io.pc <= nextPC @[top_file.scala 120:21]
    
