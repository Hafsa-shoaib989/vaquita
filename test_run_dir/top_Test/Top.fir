;buildInfoPackage: chisel3, version: 3.4.3, scalaVersion: 2.12.12, sbtVersion: 1.3.10
circuit Top : 
  module pc : 
    input clock : Clock
    input reset : Reset
    output io : {flip input : UInt<32>, pc4 : UInt<32>, pc : UInt<32>}
    
    reg reg : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[pc.scala 10:26]
    reg <= io.input @[pc.scala 11:9]
    node _io_pc4_T = add(reg, UInt<3>("h04")) @[pc.scala 12:23]
    node _io_pc4_T_1 = tail(_io_pc4_T, 1) @[pc.scala 12:23]
    io.pc4 <= _io_pc4_T_1 @[pc.scala 12:16]
    io.pc <= reg @[pc.scala 13:15]
    
  module ALU_ : 
    input clock : Clock
    input reset : Reset
    output io : {flip in_A : SInt<32>, flip in_B : SInt<32>, flip vs1 : UInt<128>, flip vs2 : UInt<128>, flip aluc : UInt<9>, flip sew : UInt<3>, flip v_ins : UInt<1>, output : SInt<32>, v_output : UInt<128>}
    
    wire sew_8_a : UInt<8>[16] @[alu.scala 58:22]
    sew_8_a[0] <= UInt<8>("h00") @[alu.scala 58:22]
    sew_8_a[1] <= UInt<8>("h00") @[alu.scala 58:22]
    sew_8_a[2] <= UInt<8>("h00") @[alu.scala 58:22]
    sew_8_a[3] <= UInt<8>("h00") @[alu.scala 58:22]
    sew_8_a[4] <= UInt<8>("h00") @[alu.scala 58:22]
    sew_8_a[5] <= UInt<8>("h00") @[alu.scala 58:22]
    sew_8_a[6] <= UInt<8>("h00") @[alu.scala 58:22]
    sew_8_a[7] <= UInt<8>("h00") @[alu.scala 58:22]
    sew_8_a[8] <= UInt<8>("h00") @[alu.scala 58:22]
    sew_8_a[9] <= UInt<8>("h00") @[alu.scala 58:22]
    sew_8_a[10] <= UInt<8>("h00") @[alu.scala 58:22]
    sew_8_a[11] <= UInt<8>("h00") @[alu.scala 58:22]
    sew_8_a[12] <= UInt<8>("h00") @[alu.scala 58:22]
    sew_8_a[13] <= UInt<8>("h00") @[alu.scala 58:22]
    sew_8_a[14] <= UInt<8>("h00") @[alu.scala 58:22]
    sew_8_a[15] <= UInt<8>("h00") @[alu.scala 58:22]
    wire sew_16_a : UInt<16>[8] @[alu.scala 59:27]
    sew_16_a[0] <= UInt<16>("h00") @[alu.scala 59:27]
    sew_16_a[1] <= UInt<16>("h00") @[alu.scala 59:27]
    sew_16_a[2] <= UInt<16>("h00") @[alu.scala 59:27]
    sew_16_a[3] <= UInt<16>("h00") @[alu.scala 59:27]
    sew_16_a[4] <= UInt<16>("h00") @[alu.scala 59:27]
    sew_16_a[5] <= UInt<16>("h00") @[alu.scala 59:27]
    sew_16_a[6] <= UInt<16>("h00") @[alu.scala 59:27]
    sew_16_a[7] <= UInt<16>("h00") @[alu.scala 59:27]
    wire sew_32_a : UInt<32>[4] @[alu.scala 60:27]
    sew_32_a[0] <= UInt<32>("h00") @[alu.scala 60:27]
    sew_32_a[1] <= UInt<32>("h00") @[alu.scala 60:27]
    sew_32_a[2] <= UInt<32>("h00") @[alu.scala 60:27]
    sew_32_a[3] <= UInt<32>("h00") @[alu.scala 60:27]
    wire sew_64_a : UInt<64>[2] @[alu.scala 61:27]
    sew_64_a[0] <= UInt<64>("h00") @[alu.scala 61:27]
    sew_64_a[1] <= UInt<64>("h00") @[alu.scala 61:27]
    wire sew_8_b : UInt<8>[16] @[alu.scala 63:26]
    sew_8_b[0] <= UInt<8>("h00") @[alu.scala 63:26]
    sew_8_b[1] <= UInt<8>("h00") @[alu.scala 63:26]
    sew_8_b[2] <= UInt<8>("h00") @[alu.scala 63:26]
    sew_8_b[3] <= UInt<8>("h00") @[alu.scala 63:26]
    sew_8_b[4] <= UInt<8>("h00") @[alu.scala 63:26]
    sew_8_b[5] <= UInt<8>("h00") @[alu.scala 63:26]
    sew_8_b[6] <= UInt<8>("h00") @[alu.scala 63:26]
    sew_8_b[7] <= UInt<8>("h00") @[alu.scala 63:26]
    sew_8_b[8] <= UInt<8>("h00") @[alu.scala 63:26]
    sew_8_b[9] <= UInt<8>("h00") @[alu.scala 63:26]
    sew_8_b[10] <= UInt<8>("h00") @[alu.scala 63:26]
    sew_8_b[11] <= UInt<8>("h00") @[alu.scala 63:26]
    sew_8_b[12] <= UInt<8>("h00") @[alu.scala 63:26]
    sew_8_b[13] <= UInt<8>("h00") @[alu.scala 63:26]
    sew_8_b[14] <= UInt<8>("h00") @[alu.scala 63:26]
    sew_8_b[15] <= UInt<8>("h00") @[alu.scala 63:26]
    wire sew_16_b : UInt<16>[8] @[alu.scala 64:27]
    sew_16_b[0] <= UInt<16>("h00") @[alu.scala 64:27]
    sew_16_b[1] <= UInt<16>("h00") @[alu.scala 64:27]
    sew_16_b[2] <= UInt<16>("h00") @[alu.scala 64:27]
    sew_16_b[3] <= UInt<16>("h00") @[alu.scala 64:27]
    sew_16_b[4] <= UInt<16>("h00") @[alu.scala 64:27]
    sew_16_b[5] <= UInt<16>("h00") @[alu.scala 64:27]
    sew_16_b[6] <= UInt<16>("h00") @[alu.scala 64:27]
    sew_16_b[7] <= UInt<16>("h00") @[alu.scala 64:27]
    wire sew_32_b : UInt<32>[4] @[alu.scala 65:27]
    sew_32_b[0] <= UInt<32>("h00") @[alu.scala 65:27]
    sew_32_b[1] <= UInt<32>("h00") @[alu.scala 65:27]
    sew_32_b[2] <= UInt<32>("h00") @[alu.scala 65:27]
    sew_32_b[3] <= UInt<32>("h00") @[alu.scala 65:27]
    wire sew_64_b : UInt<64>[2] @[alu.scala 66:27]
    sew_64_b[0] <= UInt<64>("h00") @[alu.scala 66:27]
    sew_64_b[1] <= UInt<64>("h00") @[alu.scala 66:27]
    wire out8 : UInt<8>[16] @[alu.scala 69:23]
    out8[0] <= UInt<8>("h00") @[alu.scala 69:23]
    out8[1] <= UInt<8>("h00") @[alu.scala 69:23]
    out8[2] <= UInt<8>("h00") @[alu.scala 69:23]
    out8[3] <= UInt<8>("h00") @[alu.scala 69:23]
    out8[4] <= UInt<8>("h00") @[alu.scala 69:23]
    out8[5] <= UInt<8>("h00") @[alu.scala 69:23]
    out8[6] <= UInt<8>("h00") @[alu.scala 69:23]
    out8[7] <= UInt<8>("h00") @[alu.scala 69:23]
    out8[8] <= UInt<8>("h00") @[alu.scala 69:23]
    out8[9] <= UInt<8>("h00") @[alu.scala 69:23]
    out8[10] <= UInt<8>("h00") @[alu.scala 69:23]
    out8[11] <= UInt<8>("h00") @[alu.scala 69:23]
    out8[12] <= UInt<8>("h00") @[alu.scala 69:23]
    out8[13] <= UInt<8>("h00") @[alu.scala 69:23]
    out8[14] <= UInt<8>("h00") @[alu.scala 69:23]
    out8[15] <= UInt<8>("h00") @[alu.scala 69:23]
    wire out16 : UInt<16>[8] @[alu.scala 70:24]
    out16[0] <= UInt<16>("h00") @[alu.scala 70:24]
    out16[1] <= UInt<16>("h00") @[alu.scala 70:24]
    out16[2] <= UInt<16>("h00") @[alu.scala 70:24]
    out16[3] <= UInt<16>("h00") @[alu.scala 70:24]
    out16[4] <= UInt<16>("h00") @[alu.scala 70:24]
    out16[5] <= UInt<16>("h00") @[alu.scala 70:24]
    out16[6] <= UInt<16>("h00") @[alu.scala 70:24]
    out16[7] <= UInt<16>("h00") @[alu.scala 70:24]
    wire out32 : UInt<32>[4] @[alu.scala 71:24]
    out32[0] <= UInt<32>("h00") @[alu.scala 71:24]
    out32[1] <= UInt<32>("h00") @[alu.scala 71:24]
    out32[2] <= UInt<32>("h00") @[alu.scala 71:24]
    out32[3] <= UInt<32>("h00") @[alu.scala 71:24]
    wire out64 : UInt<64>[2] @[alu.scala 72:24]
    out64[0] <= UInt<64>("h00") @[alu.scala 72:24]
    out64[1] <= UInt<64>("h00") @[alu.scala 72:24]
    node _sew_8_a_0_T = bits(io.vs1, 7, 0) @[alu.scala 75:25]
    sew_8_a[0] <= _sew_8_a_0_T @[alu.scala 75:16]
    node _sew_8_a_1_T = bits(io.vs1, 15, 8) @[alu.scala 76:25]
    sew_8_a[1] <= _sew_8_a_1_T @[alu.scala 76:16]
    node _sew_8_a_2_T = bits(io.vs1, 23, 16) @[alu.scala 77:25]
    sew_8_a[2] <= _sew_8_a_2_T @[alu.scala 77:16]
    node _sew_8_a_3_T = bits(io.vs1, 31, 24) @[alu.scala 78:25]
    sew_8_a[3] <= _sew_8_a_3_T @[alu.scala 78:16]
    node _sew_8_a_4_T = bits(io.vs1, 39, 32) @[alu.scala 79:25]
    sew_8_a[4] <= _sew_8_a_4_T @[alu.scala 79:16]
    node _sew_8_a_5_T = bits(io.vs1, 47, 40) @[alu.scala 80:25]
    sew_8_a[5] <= _sew_8_a_5_T @[alu.scala 80:16]
    node _sew_8_a_6_T = bits(io.vs1, 55, 48) @[alu.scala 81:25]
    sew_8_a[6] <= _sew_8_a_6_T @[alu.scala 81:16]
    node _sew_8_a_7_T = bits(io.vs1, 63, 56) @[alu.scala 82:25]
    sew_8_a[7] <= _sew_8_a_7_T @[alu.scala 82:16]
    node _sew_8_a_8_T = bits(io.vs1, 71, 64) @[alu.scala 83:25]
    sew_8_a[8] <= _sew_8_a_8_T @[alu.scala 83:16]
    node _sew_8_a_9_T = bits(io.vs1, 79, 72) @[alu.scala 84:25]
    sew_8_a[9] <= _sew_8_a_9_T @[alu.scala 84:16]
    node _sew_8_a_10_T = bits(io.vs1, 87, 80) @[alu.scala 85:26]
    sew_8_a[10] <= _sew_8_a_10_T @[alu.scala 85:17]
    node _sew_8_a_11_T = bits(io.vs1, 95, 88) @[alu.scala 86:26]
    sew_8_a[11] <= _sew_8_a_11_T @[alu.scala 86:17]
    node _sew_8_a_12_T = bits(io.vs1, 103, 96) @[alu.scala 87:26]
    sew_8_a[12] <= _sew_8_a_12_T @[alu.scala 87:17]
    node _sew_8_a_13_T = bits(io.vs1, 111, 104) @[alu.scala 88:26]
    sew_8_a[13] <= _sew_8_a_13_T @[alu.scala 88:17]
    node _sew_8_a_14_T = bits(io.vs1, 119, 112) @[alu.scala 89:26]
    sew_8_a[14] <= _sew_8_a_14_T @[alu.scala 89:17]
    node _sew_8_a_15_T = bits(io.vs1, 127, 120) @[alu.scala 90:26]
    sew_8_a[15] <= _sew_8_a_15_T @[alu.scala 90:17]
    node _sew_8_b_0_T = bits(io.vs2, 7, 0) @[alu.scala 93:25]
    sew_8_b[0] <= _sew_8_b_0_T @[alu.scala 93:16]
    node _sew_8_b_1_T = bits(io.vs2, 15, 8) @[alu.scala 94:25]
    sew_8_b[1] <= _sew_8_b_1_T @[alu.scala 94:16]
    node _sew_8_b_2_T = bits(io.vs2, 23, 16) @[alu.scala 95:25]
    sew_8_b[2] <= _sew_8_b_2_T @[alu.scala 95:16]
    node _sew_8_b_3_T = bits(io.vs2, 31, 24) @[alu.scala 96:25]
    sew_8_b[3] <= _sew_8_b_3_T @[alu.scala 96:16]
    node _sew_8_b_4_T = bits(io.vs2, 39, 32) @[alu.scala 97:25]
    sew_8_b[4] <= _sew_8_b_4_T @[alu.scala 97:16]
    node _sew_8_b_5_T = bits(io.vs2, 47, 40) @[alu.scala 98:25]
    sew_8_b[5] <= _sew_8_b_5_T @[alu.scala 98:16]
    node _sew_8_b_6_T = bits(io.vs2, 55, 48) @[alu.scala 99:25]
    sew_8_b[6] <= _sew_8_b_6_T @[alu.scala 99:16]
    node _sew_8_b_7_T = bits(io.vs2, 63, 56) @[alu.scala 100:25]
    sew_8_b[7] <= _sew_8_b_7_T @[alu.scala 100:16]
    node _sew_8_b_8_T = bits(io.vs2, 71, 64) @[alu.scala 101:25]
    sew_8_b[8] <= _sew_8_b_8_T @[alu.scala 101:16]
    node _sew_8_b_9_T = bits(io.vs2, 79, 72) @[alu.scala 102:25]
    sew_8_b[9] <= _sew_8_b_9_T @[alu.scala 102:16]
    node _sew_8_b_10_T = bits(io.vs2, 87, 80) @[alu.scala 103:26]
    sew_8_b[10] <= _sew_8_b_10_T @[alu.scala 103:17]
    node _sew_8_b_11_T = bits(io.vs2, 95, 88) @[alu.scala 104:26]
    sew_8_b[11] <= _sew_8_b_11_T @[alu.scala 104:17]
    node _sew_8_b_12_T = bits(io.vs2, 103, 96) @[alu.scala 105:26]
    sew_8_b[12] <= _sew_8_b_12_T @[alu.scala 105:17]
    node _sew_8_b_13_T = bits(io.vs2, 111, 104) @[alu.scala 106:26]
    sew_8_b[13] <= _sew_8_b_13_T @[alu.scala 106:17]
    node _sew_8_b_14_T = bits(io.vs2, 119, 112) @[alu.scala 107:26]
    sew_8_b[14] <= _sew_8_b_14_T @[alu.scala 107:17]
    node _sew_8_b_15_T = bits(io.vs2, 127, 120) @[alu.scala 108:26]
    sew_8_b[15] <= _sew_8_b_15_T @[alu.scala 108:17]
    node _sew_16_a_0_T = bits(io.vs1, 15, 0) @[alu.scala 111:26]
    sew_16_a[0] <= _sew_16_a_0_T @[alu.scala 111:17]
    node _sew_16_a_1_T = bits(io.vs1, 31, 16) @[alu.scala 112:26]
    sew_16_a[1] <= _sew_16_a_1_T @[alu.scala 112:17]
    node _sew_16_a_2_T = bits(io.vs1, 47, 32) @[alu.scala 113:26]
    sew_16_a[2] <= _sew_16_a_2_T @[alu.scala 113:17]
    node _sew_16_a_3_T = bits(io.vs1, 63, 48) @[alu.scala 114:26]
    sew_16_a[3] <= _sew_16_a_3_T @[alu.scala 114:17]
    node _sew_16_a_4_T = bits(io.vs1, 79, 64) @[alu.scala 115:26]
    sew_16_a[4] <= _sew_16_a_4_T @[alu.scala 115:17]
    node _sew_16_a_5_T = bits(io.vs1, 95, 80) @[alu.scala 116:26]
    sew_16_a[5] <= _sew_16_a_5_T @[alu.scala 116:17]
    node _sew_16_a_6_T = bits(io.vs1, 111, 96) @[alu.scala 117:26]
    sew_16_a[6] <= _sew_16_a_6_T @[alu.scala 117:17]
    node _sew_16_a_7_T = bits(io.vs1, 127, 112) @[alu.scala 118:26]
    sew_16_a[7] <= _sew_16_a_7_T @[alu.scala 118:17]
    node _sew_16_b_0_T = bits(io.vs2, 15, 0) @[alu.scala 121:26]
    sew_16_b[0] <= _sew_16_b_0_T @[alu.scala 121:17]
    node _sew_16_b_1_T = bits(io.vs2, 31, 16) @[alu.scala 122:26]
    sew_16_b[1] <= _sew_16_b_1_T @[alu.scala 122:17]
    node _sew_16_b_2_T = bits(io.vs2, 47, 32) @[alu.scala 123:26]
    sew_16_b[2] <= _sew_16_b_2_T @[alu.scala 123:17]
    node _sew_16_b_3_T = bits(io.vs2, 63, 48) @[alu.scala 124:26]
    sew_16_b[3] <= _sew_16_b_3_T @[alu.scala 124:17]
    node _sew_16_b_4_T = bits(io.vs2, 79, 64) @[alu.scala 125:26]
    sew_16_b[4] <= _sew_16_b_4_T @[alu.scala 125:17]
    node _sew_16_b_5_T = bits(io.vs2, 95, 80) @[alu.scala 126:26]
    sew_16_b[5] <= _sew_16_b_5_T @[alu.scala 126:17]
    node _sew_16_b_6_T = bits(io.vs2, 111, 96) @[alu.scala 127:26]
    sew_16_b[6] <= _sew_16_b_6_T @[alu.scala 127:17]
    node _sew_16_b_7_T = bits(io.vs2, 127, 112) @[alu.scala 128:26]
    sew_16_b[7] <= _sew_16_b_7_T @[alu.scala 128:17]
    node _sew_32_a_0_T = bits(io.vs1, 31, 0) @[alu.scala 131:26]
    sew_32_a[0] <= _sew_32_a_0_T @[alu.scala 131:17]
    node _sew_32_a_1_T = bits(io.vs1, 63, 32) @[alu.scala 132:26]
    sew_32_a[1] <= _sew_32_a_1_T @[alu.scala 132:17]
    node _sew_32_a_2_T = bits(io.vs1, 95, 64) @[alu.scala 133:26]
    sew_32_a[2] <= _sew_32_a_2_T @[alu.scala 133:17]
    node _sew_32_a_3_T = bits(io.vs1, 127, 96) @[alu.scala 134:26]
    sew_32_a[3] <= _sew_32_a_3_T @[alu.scala 134:17]
    node _sew_32_b_0_T = bits(io.vs2, 31, 0) @[alu.scala 137:26]
    sew_32_b[0] <= _sew_32_b_0_T @[alu.scala 137:17]
    node _sew_32_b_1_T = bits(io.vs2, 63, 32) @[alu.scala 138:26]
    sew_32_b[1] <= _sew_32_b_1_T @[alu.scala 138:17]
    node _sew_32_b_2_T = bits(io.vs2, 95, 64) @[alu.scala 139:26]
    sew_32_b[2] <= _sew_32_b_2_T @[alu.scala 139:17]
    node _sew_32_b_3_T = bits(io.vs2, 127, 96) @[alu.scala 140:26]
    sew_32_b[3] <= _sew_32_b_3_T @[alu.scala 140:17]
    node _sew_64_a_0_T = bits(io.vs1, 63, 0) @[alu.scala 143:26]
    sew_64_a[0] <= _sew_64_a_0_T @[alu.scala 143:17]
    node _sew_64_a_1_T = bits(io.vs1, 127, 64) @[alu.scala 144:26]
    sew_64_a[1] <= _sew_64_a_1_T @[alu.scala 144:17]
    node _sew_64_b_0_T = bits(io.vs2, 63, 0) @[alu.scala 147:26]
    sew_64_b[0] <= _sew_64_b_0_T @[alu.scala 147:17]
    node _sew_64_b_1_T = bits(io.vs2, 127, 64) @[alu.scala 148:26]
    sew_64_b[1] <= _sew_64_b_1_T @[alu.scala 148:17]
    io.v_output <= UInt<1>("h00") @[alu.scala 150:17]
    io.output <= asSInt(UInt<1>("h00")) @[alu.scala 152:14]
    node _T = neq(io.v_ins, UInt<1>("h01")) @[alu.scala 154:20]
    when _T : @[alu.scala 154:29]
      node _io_output_T = add(io.in_A, io.in_B) @[alu.scala 156:27]
      node _io_output_T_1 = tail(_io_output_T, 1) @[alu.scala 156:27]
      node _io_output_T_2 = asSInt(_io_output_T_1) @[alu.scala 156:27]
      node _io_output_T_3 = bits(io.in_B, 4, 0) @[alu.scala 157:37]
      node _io_output_T_4 = dshl(io.in_A, _io_output_T_3) @[alu.scala 157:27]
      node _io_output_T_5 = lt(io.in_A, io.in_B) @[alu.scala 158:30]
      node _io_output_T_6 = mux(_io_output_T_5, asSInt(UInt<2>("h01")), asSInt(UInt<1>("h00"))) @[alu.scala 158:21]
      node _io_output_T_7 = asUInt(io.in_A) @[alu.scala 159:31]
      node _io_output_T_8 = asUInt(io.in_B) @[alu.scala 159:48]
      node _io_output_T_9 = lt(_io_output_T_7, _io_output_T_8) @[alu.scala 159:38]
      node _io_output_T_10 = mux(_io_output_T_9, asSInt(UInt<2>("h01")), asSInt(UInt<1>("h00"))) @[alu.scala 159:22]
      node _io_output_T_11 = xor(io.in_A, io.in_B) @[alu.scala 160:27]
      node _io_output_T_12 = asSInt(_io_output_T_11) @[alu.scala 160:27]
      node _io_output_T_13 = asUInt(io.in_A) @[alu.scala 161:27]
      node _io_output_T_14 = bits(io.in_B, 4, 0) @[alu.scala 161:44]
      node _io_output_T_15 = dshr(_io_output_T_13, _io_output_T_14) @[alu.scala 161:34]
      node _io_output_T_16 = asSInt(_io_output_T_15) @[alu.scala 161:59]
      node _io_output_T_17 = or(io.in_A, io.in_B) @[alu.scala 162:26]
      node _io_output_T_18 = asSInt(_io_output_T_17) @[alu.scala 162:26]
      node _io_output_T_19 = and(io.in_A, io.in_B) @[alu.scala 163:27]
      node _io_output_T_20 = asSInt(_io_output_T_19) @[alu.scala 163:27]
      node _io_output_T_21 = sub(io.in_A, io.in_B) @[alu.scala 164:27]
      node _io_output_T_22 = tail(_io_output_T_21, 1) @[alu.scala 164:27]
      node _io_output_T_23 = asSInt(_io_output_T_22) @[alu.scala 164:27]
      node _io_output_T_24 = bits(io.in_B, 4, 0) @[alu.scala 165:37]
      node _io_output_T_25 = dshr(io.in_A, _io_output_T_24) @[alu.scala 165:27]
      node _io_output_T_26 = eq(UInt<1>("h00"), io.aluc) @[Mux.scala 80:60]
      node _io_output_T_27 = mux(_io_output_T_26, _io_output_T_2, io.in_A) @[Mux.scala 80:57]
      node _io_output_T_28 = eq(UInt<1>("h01"), io.aluc) @[Mux.scala 80:60]
      node _io_output_T_29 = mux(_io_output_T_28, _io_output_T_4, _io_output_T_27) @[Mux.scala 80:57]
      node _io_output_T_30 = eq(UInt<2>("h02"), io.aluc) @[Mux.scala 80:60]
      node _io_output_T_31 = mux(_io_output_T_30, _io_output_T_6, _io_output_T_29) @[Mux.scala 80:57]
      node _io_output_T_32 = eq(UInt<2>("h03"), io.aluc) @[Mux.scala 80:60]
      node _io_output_T_33 = mux(_io_output_T_32, _io_output_T_10, _io_output_T_31) @[Mux.scala 80:57]
      node _io_output_T_34 = eq(UInt<3>("h04"), io.aluc) @[Mux.scala 80:60]
      node _io_output_T_35 = mux(_io_output_T_34, _io_output_T_12, _io_output_T_33) @[Mux.scala 80:57]
      node _io_output_T_36 = eq(UInt<3>("h05"), io.aluc) @[Mux.scala 80:60]
      node _io_output_T_37 = mux(_io_output_T_36, _io_output_T_16, _io_output_T_35) @[Mux.scala 80:57]
      node _io_output_T_38 = eq(UInt<3>("h06"), io.aluc) @[Mux.scala 80:60]
      node _io_output_T_39 = mux(_io_output_T_38, _io_output_T_18, _io_output_T_37) @[Mux.scala 80:57]
      node _io_output_T_40 = eq(UInt<3>("h07"), io.aluc) @[Mux.scala 80:60]
      node _io_output_T_41 = mux(_io_output_T_40, _io_output_T_20, _io_output_T_39) @[Mux.scala 80:57]
      node _io_output_T_42 = eq(UInt<4>("h08"), io.aluc) @[Mux.scala 80:60]
      node _io_output_T_43 = mux(_io_output_T_42, _io_output_T_23, _io_output_T_41) @[Mux.scala 80:57]
      node _io_output_T_44 = eq(UInt<4>("h0d"), io.aluc) @[Mux.scala 80:60]
      node _io_output_T_45 = mux(_io_output_T_44, _io_output_T_25, _io_output_T_43) @[Mux.scala 80:57]
      node _io_output_T_46 = eq(UInt<5>("h01f"), io.aluc) @[Mux.scala 80:60]
      node _io_output_T_47 = mux(_io_output_T_46, io.in_A, _io_output_T_45) @[Mux.scala 80:57]
      io.output <= _io_output_T_47 @[alu.scala 155:15]
      skip @[alu.scala 154:29]
    else : @[alu.scala 169:15]
      node _T_1 = eq(io.sew, UInt<2>("h03")) @[alu.scala 170:22]
      node _T_2 = eq(io.aluc, UInt<1>("h00")) @[alu.scala 170:46]
      node _T_3 = and(_T_1, _T_2) @[alu.scala 170:35]
      when _T_3 : @[alu.scala 170:56]
        node _T_4 = eq(UInt<1>("h01"), UInt<1>("h00")) @[alu.scala 172:24]
        when _T_4 : @[alu.scala 172:33]
          out64[0] <= UInt<1>("h00") @[alu.scala 173:24]
          skip @[alu.scala 172:33]
        else : @[alu.scala 174:24]
          node _out64_0_T = add(sew_64_a[0], sew_64_b[0]) @[alu.scala 175:39]
          node _out64_0_T_1 = tail(_out64_0_T, 1) @[alu.scala 175:39]
          out64[0] <= _out64_0_T_1 @[alu.scala 175:24]
          skip @[alu.scala 174:24]
        node _T_5 = eq(UInt<1>("h00"), UInt<1>("h00")) @[alu.scala 172:24]
        when _T_5 : @[alu.scala 172:33]
          out64[1] <= UInt<1>("h00") @[alu.scala 173:24]
          skip @[alu.scala 172:33]
        else : @[alu.scala 174:24]
          node _out64_1_T = add(sew_64_a[1], sew_64_b[1]) @[alu.scala 175:39]
          node _out64_1_T_1 = tail(_out64_1_T, 1) @[alu.scala 175:39]
          out64[1] <= _out64_1_T_1 @[alu.scala 175:24]
          skip @[alu.scala 174:24]
        node _io_v_output_T = cat(out64[1], out64[0]) @[Cat.scala 30:58]
        io.v_output <= _io_v_output_T @[alu.scala 178:29]
        skip @[alu.scala 170:56]
      else : @[alu.scala 180:62]
        node _T_6 = eq(io.sew, UInt<2>("h02")) @[alu.scala 180:28]
        node _T_7 = eq(io.aluc, UInt<1>("h00")) @[alu.scala 180:52]
        node _T_8 = and(_T_6, _T_7) @[alu.scala 180:41]
        when _T_8 : @[alu.scala 180:62]
          node _out32_0_T = add(sew_32_a[0], sew_32_b[0]) @[alu.scala 182:37]
          node _out32_0_T_1 = tail(_out32_0_T, 1) @[alu.scala 182:37]
          out32[0] <= _out32_0_T_1 @[alu.scala 182:22]
          node _out32_1_T = add(sew_32_a[1], sew_32_b[1]) @[alu.scala 182:37]
          node _out32_1_T_1 = tail(_out32_1_T, 1) @[alu.scala 182:37]
          out32[1] <= _out32_1_T_1 @[alu.scala 182:22]
          node _out32_2_T = add(sew_32_a[2], sew_32_b[2]) @[alu.scala 182:37]
          node _out32_2_T_1 = tail(_out32_2_T, 1) @[alu.scala 182:37]
          out32[2] <= _out32_2_T_1 @[alu.scala 182:22]
          node _out32_3_T = add(sew_32_a[3], sew_32_b[3]) @[alu.scala 182:37]
          node _out32_3_T_1 = tail(_out32_3_T, 1) @[alu.scala 182:37]
          out32[3] <= _out32_3_T_1 @[alu.scala 182:22]
          node io_v_output_lo = cat(out32[1], out32[0]) @[Cat.scala 30:58]
          node io_v_output_hi = cat(out32[3], out32[2]) @[Cat.scala 30:58]
          node _io_v_output_T_1 = cat(io_v_output_hi, io_v_output_lo) @[Cat.scala 30:58]
          io.v_output <= _io_v_output_T_1 @[alu.scala 184:21]
          skip @[alu.scala 180:62]
        else : @[alu.scala 186:62]
          node _T_9 = eq(io.sew, UInt<1>("h01")) @[alu.scala 186:28]
          node _T_10 = eq(io.aluc, UInt<1>("h00")) @[alu.scala 186:52]
          node _T_11 = and(_T_9, _T_10) @[alu.scala 186:41]
          when _T_11 : @[alu.scala 186:62]
            node _out16_0_T = add(sew_16_a[0], sew_16_b[0]) @[alu.scala 188:37]
            node _out16_0_T_1 = tail(_out16_0_T, 1) @[alu.scala 188:37]
            out16[0] <= _out16_0_T_1 @[alu.scala 188:22]
            node _out16_1_T = add(sew_16_a[1], sew_16_b[1]) @[alu.scala 188:37]
            node _out16_1_T_1 = tail(_out16_1_T, 1) @[alu.scala 188:37]
            out16[1] <= _out16_1_T_1 @[alu.scala 188:22]
            node _out16_2_T = add(sew_16_a[2], sew_16_b[2]) @[alu.scala 188:37]
            node _out16_2_T_1 = tail(_out16_2_T, 1) @[alu.scala 188:37]
            out16[2] <= _out16_2_T_1 @[alu.scala 188:22]
            node _out16_3_T = add(sew_16_a[3], sew_16_b[3]) @[alu.scala 188:37]
            node _out16_3_T_1 = tail(_out16_3_T, 1) @[alu.scala 188:37]
            out16[3] <= _out16_3_T_1 @[alu.scala 188:22]
            node _out16_4_T = add(sew_16_a[4], sew_16_b[4]) @[alu.scala 188:37]
            node _out16_4_T_1 = tail(_out16_4_T, 1) @[alu.scala 188:37]
            out16[4] <= _out16_4_T_1 @[alu.scala 188:22]
            node _out16_5_T = add(sew_16_a[5], sew_16_b[5]) @[alu.scala 188:37]
            node _out16_5_T_1 = tail(_out16_5_T, 1) @[alu.scala 188:37]
            out16[5] <= _out16_5_T_1 @[alu.scala 188:22]
            node _out16_6_T = add(sew_16_a[6], sew_16_b[6]) @[alu.scala 188:37]
            node _out16_6_T_1 = tail(_out16_6_T, 1) @[alu.scala 188:37]
            out16[6] <= _out16_6_T_1 @[alu.scala 188:22]
            node _out16_7_T = add(sew_16_a[7], sew_16_b[7]) @[alu.scala 188:37]
            node _out16_7_T_1 = tail(_out16_7_T, 1) @[alu.scala 188:37]
            out16[7] <= _out16_7_T_1 @[alu.scala 188:22]
            node io_v_output_lo_lo = cat(out16[1], out16[0]) @[Cat.scala 30:58]
            node io_v_output_lo_hi = cat(out16[3], out16[2]) @[Cat.scala 30:58]
            node io_v_output_lo_1 = cat(io_v_output_lo_hi, io_v_output_lo_lo) @[Cat.scala 30:58]
            node io_v_output_hi_lo = cat(out16[5], out16[4]) @[Cat.scala 30:58]
            node io_v_output_hi_hi = cat(out16[7], out16[6]) @[Cat.scala 30:58]
            node io_v_output_hi_1 = cat(io_v_output_hi_hi, io_v_output_hi_lo) @[Cat.scala 30:58]
            node _io_v_output_T_2 = cat(io_v_output_hi_1, io_v_output_lo_1) @[Cat.scala 30:58]
            io.v_output <= _io_v_output_T_2 @[alu.scala 190:29]
            skip @[alu.scala 186:62]
          else : @[alu.scala 192:62]
            node _T_12 = eq(io.sew, UInt<1>("h00")) @[alu.scala 192:28]
            node _T_13 = eq(io.aluc, UInt<1>("h00")) @[alu.scala 192:52]
            node _T_14 = and(_T_12, _T_13) @[alu.scala 192:41]
            when _T_14 : @[alu.scala 192:62]
              node _out8_0_T = add(sew_8_a[0], sew_8_b[0]) @[alu.scala 194:35]
              node _out8_0_T_1 = tail(_out8_0_T, 1) @[alu.scala 194:35]
              out8[0] <= _out8_0_T_1 @[alu.scala 194:21]
              node _out8_1_T = add(sew_8_a[1], sew_8_b[1]) @[alu.scala 194:35]
              node _out8_1_T_1 = tail(_out8_1_T, 1) @[alu.scala 194:35]
              out8[1] <= _out8_1_T_1 @[alu.scala 194:21]
              node _out8_2_T = add(sew_8_a[2], sew_8_b[2]) @[alu.scala 194:35]
              node _out8_2_T_1 = tail(_out8_2_T, 1) @[alu.scala 194:35]
              out8[2] <= _out8_2_T_1 @[alu.scala 194:21]
              node _out8_3_T = add(sew_8_a[3], sew_8_b[3]) @[alu.scala 194:35]
              node _out8_3_T_1 = tail(_out8_3_T, 1) @[alu.scala 194:35]
              out8[3] <= _out8_3_T_1 @[alu.scala 194:21]
              node _out8_4_T = add(sew_8_a[4], sew_8_b[4]) @[alu.scala 194:35]
              node _out8_4_T_1 = tail(_out8_4_T, 1) @[alu.scala 194:35]
              out8[4] <= _out8_4_T_1 @[alu.scala 194:21]
              node _out8_5_T = add(sew_8_a[5], sew_8_b[5]) @[alu.scala 194:35]
              node _out8_5_T_1 = tail(_out8_5_T, 1) @[alu.scala 194:35]
              out8[5] <= _out8_5_T_1 @[alu.scala 194:21]
              node _out8_6_T = add(sew_8_a[6], sew_8_b[6]) @[alu.scala 194:35]
              node _out8_6_T_1 = tail(_out8_6_T, 1) @[alu.scala 194:35]
              out8[6] <= _out8_6_T_1 @[alu.scala 194:21]
              node _out8_7_T = add(sew_8_a[7], sew_8_b[7]) @[alu.scala 194:35]
              node _out8_7_T_1 = tail(_out8_7_T, 1) @[alu.scala 194:35]
              out8[7] <= _out8_7_T_1 @[alu.scala 194:21]
              node _out8_8_T = add(sew_8_a[8], sew_8_b[8]) @[alu.scala 194:35]
              node _out8_8_T_1 = tail(_out8_8_T, 1) @[alu.scala 194:35]
              out8[8] <= _out8_8_T_1 @[alu.scala 194:21]
              node _out8_9_T = add(sew_8_a[9], sew_8_b[9]) @[alu.scala 194:35]
              node _out8_9_T_1 = tail(_out8_9_T, 1) @[alu.scala 194:35]
              out8[9] <= _out8_9_T_1 @[alu.scala 194:21]
              node _out8_10_T = add(sew_8_a[10], sew_8_b[10]) @[alu.scala 194:35]
              node _out8_10_T_1 = tail(_out8_10_T, 1) @[alu.scala 194:35]
              out8[10] <= _out8_10_T_1 @[alu.scala 194:21]
              node _out8_11_T = add(sew_8_a[11], sew_8_b[11]) @[alu.scala 194:35]
              node _out8_11_T_1 = tail(_out8_11_T, 1) @[alu.scala 194:35]
              out8[11] <= _out8_11_T_1 @[alu.scala 194:21]
              node _out8_12_T = add(sew_8_a[12], sew_8_b[12]) @[alu.scala 194:35]
              node _out8_12_T_1 = tail(_out8_12_T, 1) @[alu.scala 194:35]
              out8[12] <= _out8_12_T_1 @[alu.scala 194:21]
              node _out8_13_T = add(sew_8_a[13], sew_8_b[13]) @[alu.scala 194:35]
              node _out8_13_T_1 = tail(_out8_13_T, 1) @[alu.scala 194:35]
              out8[13] <= _out8_13_T_1 @[alu.scala 194:21]
              node _out8_14_T = add(sew_8_a[14], sew_8_b[14]) @[alu.scala 194:35]
              node _out8_14_T_1 = tail(_out8_14_T, 1) @[alu.scala 194:35]
              out8[14] <= _out8_14_T_1 @[alu.scala 194:21]
              node _out8_15_T = add(sew_8_a[15], sew_8_b[15]) @[alu.scala 194:35]
              node _out8_15_T_1 = tail(_out8_15_T, 1) @[alu.scala 194:35]
              out8[15] <= _out8_15_T_1 @[alu.scala 194:21]
              node io_v_output_lo_lo_lo = cat(out8[1], out8[0]) @[Cat.scala 30:58]
              node io_v_output_lo_lo_hi = cat(out8[3], out8[2]) @[Cat.scala 30:58]
              node io_v_output_lo_lo_1 = cat(io_v_output_lo_lo_hi, io_v_output_lo_lo_lo) @[Cat.scala 30:58]
              node io_v_output_lo_hi_lo = cat(out8[5], out8[4]) @[Cat.scala 30:58]
              node io_v_output_lo_hi_hi = cat(out8[7], out8[6]) @[Cat.scala 30:58]
              node io_v_output_lo_hi_1 = cat(io_v_output_lo_hi_hi, io_v_output_lo_hi_lo) @[Cat.scala 30:58]
              node io_v_output_lo_2 = cat(io_v_output_lo_hi_1, io_v_output_lo_lo_1) @[Cat.scala 30:58]
              node io_v_output_hi_lo_lo = cat(out8[9], out8[8]) @[Cat.scala 30:58]
              node io_v_output_hi_lo_hi = cat(out8[11], out8[10]) @[Cat.scala 30:58]
              node io_v_output_hi_lo_1 = cat(io_v_output_hi_lo_hi, io_v_output_hi_lo_lo) @[Cat.scala 30:58]
              node io_v_output_hi_hi_lo = cat(out8[13], out8[12]) @[Cat.scala 30:58]
              node io_v_output_hi_hi_hi = cat(out8[15], out8[14]) @[Cat.scala 30:58]
              node io_v_output_hi_hi_1 = cat(io_v_output_hi_hi_hi, io_v_output_hi_hi_lo) @[Cat.scala 30:58]
              node io_v_output_hi_2 = cat(io_v_output_hi_hi_1, io_v_output_hi_lo_1) @[Cat.scala 30:58]
              node _io_v_output_T_3 = cat(io_v_output_hi_2, io_v_output_lo_2) @[Cat.scala 30:58]
              io.v_output <= _io_v_output_T_3 @[alu.scala 196:29]
              skip @[alu.scala 192:62]
            else : @[alu.scala 198:63]
              node _T_15 = eq(io.sew, UInt<2>("h03")) @[alu.scala 198:28]
              node _T_16 = eq(io.aluc, UInt<2>("h03")) @[alu.scala 198:52]
              node _T_17 = and(_T_15, _T_16) @[alu.scala 198:41]
              when _T_17 : @[alu.scala 198:63]
                node imm_lo = asUInt(io.in_B) @[alu.scala 199:50]
                node imm = cat(UInt<32>("h00"), imm_lo) @[Cat.scala 30:58]
                node _out64_0_T_2 = add(sew_64_b[0], imm) @[alu.scala 201:37]
                node _out64_0_T_3 = tail(_out64_0_T_2, 1) @[alu.scala 201:37]
                out64[0] <= _out64_0_T_3 @[alu.scala 201:22]
                node _out64_1_T_2 = add(sew_64_b[1], imm) @[alu.scala 201:37]
                node _out64_1_T_3 = tail(_out64_1_T_2, 1) @[alu.scala 201:37]
                out64[1] <= _out64_1_T_3 @[alu.scala 201:22]
                node _io_v_output_T_4 = cat(out64[1], out64[0]) @[Cat.scala 30:58]
                io.v_output <= _io_v_output_T_4 @[alu.scala 203:29]
                skip @[alu.scala 198:63]
              else : @[alu.scala 204:63]
                node _T_18 = eq(io.sew, UInt<2>("h02")) @[alu.scala 204:28]
                node _T_19 = eq(io.aluc, UInt<2>("h03")) @[alu.scala 204:52]
                node _T_20 = and(_T_18, _T_19) @[alu.scala 204:41]
                when _T_20 : @[alu.scala 204:63]
                  node imm_1 = bits(io.in_B, 31, 0) @[alu.scala 206:24]
                  node _out32_0_T_2 = add(sew_32_b[0], imm_1) @[alu.scala 207:37]
                  node _out32_0_T_3 = tail(_out32_0_T_2, 1) @[alu.scala 207:37]
                  out32[0] <= _out32_0_T_3 @[alu.scala 207:22]
                  node imm_2 = bits(io.in_B, 31, 0) @[alu.scala 206:24]
                  node _out32_1_T_2 = add(sew_32_b[1], imm_2) @[alu.scala 207:37]
                  node _out32_1_T_3 = tail(_out32_1_T_2, 1) @[alu.scala 207:37]
                  out32[1] <= _out32_1_T_3 @[alu.scala 207:22]
                  node imm_3 = bits(io.in_B, 31, 0) @[alu.scala 206:24]
                  node _out32_2_T_2 = add(sew_32_b[2], imm_3) @[alu.scala 207:37]
                  node _out32_2_T_3 = tail(_out32_2_T_2, 1) @[alu.scala 207:37]
                  out32[2] <= _out32_2_T_3 @[alu.scala 207:22]
                  node imm_4 = bits(io.in_B, 31, 0) @[alu.scala 206:24]
                  node _out32_3_T_2 = add(sew_32_b[3], imm_4) @[alu.scala 207:37]
                  node _out32_3_T_3 = tail(_out32_3_T_2, 1) @[alu.scala 207:37]
                  out32[3] <= _out32_3_T_3 @[alu.scala 207:22]
                  node io_v_output_lo_3 = cat(out32[1], out32[0]) @[Cat.scala 30:58]
                  node io_v_output_hi_3 = cat(out32[3], out32[2]) @[Cat.scala 30:58]
                  node _io_v_output_T_5 = cat(io_v_output_hi_3, io_v_output_lo_3) @[Cat.scala 30:58]
                  io.v_output <= _io_v_output_T_5 @[alu.scala 209:21]
                  skip @[alu.scala 204:63]
                else : @[alu.scala 211:63]
                  node _T_21 = eq(io.sew, UInt<1>("h00")) @[alu.scala 211:28]
                  node _T_22 = eq(io.aluc, UInt<2>("h03")) @[alu.scala 211:52]
                  node _T_23 = and(_T_21, _T_22) @[alu.scala 211:41]
                  when _T_23 : @[alu.scala 211:63]
                    node imm_5 = bits(io.in_B, 7, 0) @[alu.scala 212:34]
                    node _out8_0_T_2 = add(sew_8_b[0], imm_5) @[alu.scala 214:35]
                    node _out8_0_T_3 = tail(_out8_0_T_2, 1) @[alu.scala 214:35]
                    out8[0] <= _out8_0_T_3 @[alu.scala 214:21]
                    node _out8_1_T_2 = add(sew_8_b[1], imm_5) @[alu.scala 214:35]
                    node _out8_1_T_3 = tail(_out8_1_T_2, 1) @[alu.scala 214:35]
                    out8[1] <= _out8_1_T_3 @[alu.scala 214:21]
                    node _out8_2_T_2 = add(sew_8_b[2], imm_5) @[alu.scala 214:35]
                    node _out8_2_T_3 = tail(_out8_2_T_2, 1) @[alu.scala 214:35]
                    out8[2] <= _out8_2_T_3 @[alu.scala 214:21]
                    node _out8_3_T_2 = add(sew_8_b[3], imm_5) @[alu.scala 214:35]
                    node _out8_3_T_3 = tail(_out8_3_T_2, 1) @[alu.scala 214:35]
                    out8[3] <= _out8_3_T_3 @[alu.scala 214:21]
                    node _out8_4_T_2 = add(sew_8_b[4], imm_5) @[alu.scala 214:35]
                    node _out8_4_T_3 = tail(_out8_4_T_2, 1) @[alu.scala 214:35]
                    out8[4] <= _out8_4_T_3 @[alu.scala 214:21]
                    node _out8_5_T_2 = add(sew_8_b[5], imm_5) @[alu.scala 214:35]
                    node _out8_5_T_3 = tail(_out8_5_T_2, 1) @[alu.scala 214:35]
                    out8[5] <= _out8_5_T_3 @[alu.scala 214:21]
                    node _out8_6_T_2 = add(sew_8_b[6], imm_5) @[alu.scala 214:35]
                    node _out8_6_T_3 = tail(_out8_6_T_2, 1) @[alu.scala 214:35]
                    out8[6] <= _out8_6_T_3 @[alu.scala 214:21]
                    node _out8_7_T_2 = add(sew_8_b[7], imm_5) @[alu.scala 214:35]
                    node _out8_7_T_3 = tail(_out8_7_T_2, 1) @[alu.scala 214:35]
                    out8[7] <= _out8_7_T_3 @[alu.scala 214:21]
                    node _out8_8_T_2 = add(sew_8_b[8], imm_5) @[alu.scala 214:35]
                    node _out8_8_T_3 = tail(_out8_8_T_2, 1) @[alu.scala 214:35]
                    out8[8] <= _out8_8_T_3 @[alu.scala 214:21]
                    node _out8_9_T_2 = add(sew_8_b[9], imm_5) @[alu.scala 214:35]
                    node _out8_9_T_3 = tail(_out8_9_T_2, 1) @[alu.scala 214:35]
                    out8[9] <= _out8_9_T_3 @[alu.scala 214:21]
                    node _out8_10_T_2 = add(sew_8_b[10], imm_5) @[alu.scala 214:35]
                    node _out8_10_T_3 = tail(_out8_10_T_2, 1) @[alu.scala 214:35]
                    out8[10] <= _out8_10_T_3 @[alu.scala 214:21]
                    node _out8_11_T_2 = add(sew_8_b[11], imm_5) @[alu.scala 214:35]
                    node _out8_11_T_3 = tail(_out8_11_T_2, 1) @[alu.scala 214:35]
                    out8[11] <= _out8_11_T_3 @[alu.scala 214:21]
                    node _out8_12_T_2 = add(sew_8_b[12], imm_5) @[alu.scala 214:35]
                    node _out8_12_T_3 = tail(_out8_12_T_2, 1) @[alu.scala 214:35]
                    out8[12] <= _out8_12_T_3 @[alu.scala 214:21]
                    node _out8_13_T_2 = add(sew_8_b[13], imm_5) @[alu.scala 214:35]
                    node _out8_13_T_3 = tail(_out8_13_T_2, 1) @[alu.scala 214:35]
                    out8[13] <= _out8_13_T_3 @[alu.scala 214:21]
                    node _out8_14_T_2 = add(sew_8_b[14], imm_5) @[alu.scala 214:35]
                    node _out8_14_T_3 = tail(_out8_14_T_2, 1) @[alu.scala 214:35]
                    out8[14] <= _out8_14_T_3 @[alu.scala 214:21]
                    node _out8_15_T_2 = add(sew_8_b[15], imm_5) @[alu.scala 214:35]
                    node _out8_15_T_3 = tail(_out8_15_T_2, 1) @[alu.scala 214:35]
                    out8[15] <= _out8_15_T_3 @[alu.scala 214:21]
                    node io_v_output_lo_lo_lo_1 = cat(out8[1], out8[0]) @[Cat.scala 30:58]
                    node io_v_output_lo_lo_hi_1 = cat(out8[3], out8[2]) @[Cat.scala 30:58]
                    node io_v_output_lo_lo_2 = cat(io_v_output_lo_lo_hi_1, io_v_output_lo_lo_lo_1) @[Cat.scala 30:58]
                    node io_v_output_lo_hi_lo_1 = cat(out8[5], out8[4]) @[Cat.scala 30:58]
                    node io_v_output_lo_hi_hi_1 = cat(out8[7], out8[6]) @[Cat.scala 30:58]
                    node io_v_output_lo_hi_2 = cat(io_v_output_lo_hi_hi_1, io_v_output_lo_hi_lo_1) @[Cat.scala 30:58]
                    node io_v_output_lo_4 = cat(io_v_output_lo_hi_2, io_v_output_lo_lo_2) @[Cat.scala 30:58]
                    node io_v_output_hi_lo_lo_1 = cat(out8[9], out8[8]) @[Cat.scala 30:58]
                    node io_v_output_hi_lo_hi_1 = cat(out8[11], out8[10]) @[Cat.scala 30:58]
                    node io_v_output_hi_lo_2 = cat(io_v_output_hi_lo_hi_1, io_v_output_hi_lo_lo_1) @[Cat.scala 30:58]
                    node io_v_output_hi_hi_lo_1 = cat(out8[13], out8[12]) @[Cat.scala 30:58]
                    node io_v_output_hi_hi_hi_1 = cat(out8[15], out8[14]) @[Cat.scala 30:58]
                    node io_v_output_hi_hi_2 = cat(io_v_output_hi_hi_hi_1, io_v_output_hi_hi_lo_1) @[Cat.scala 30:58]
                    node io_v_output_hi_4 = cat(io_v_output_hi_hi_2, io_v_output_hi_lo_2) @[Cat.scala 30:58]
                    node _io_v_output_T_6 = cat(io_v_output_hi_4, io_v_output_lo_4) @[Cat.scala 30:58]
                    io.v_output <= _io_v_output_T_6 @[alu.scala 216:29]
                    skip @[alu.scala 211:63]
                  else : @[alu.scala 218:64]
                    node _T_24 = eq(io.sew, UInt<1>("h01")) @[alu.scala 218:29]
                    node _T_25 = eq(io.aluc, UInt<2>("h03")) @[alu.scala 218:53]
                    node _T_26 = and(_T_24, _T_25) @[alu.scala 218:42]
                    when _T_26 : @[alu.scala 218:64]
                      node imm_6 = bits(io.in_B, 15, 0) @[alu.scala 219:34]
                      node _T_27 = eq(UInt<1>("h01"), UInt<1>("h00")) @[alu.scala 221:18]
                      when _T_27 : @[alu.scala 221:27]
                        out16[0] <= UInt<1>("h00") @[alu.scala 222:24]
                        skip @[alu.scala 221:27]
                      else : @[alu.scala 223:24]
                        node _out16_0_T_2 = add(sew_16_a[0], imm_6) @[alu.scala 224:39]
                        node _out16_0_T_3 = tail(_out16_0_T_2, 1) @[alu.scala 224:39]
                        out16[0] <= _out16_0_T_3 @[alu.scala 224:24]
                        skip @[alu.scala 223:24]
                      node _T_28 = eq(UInt<1>("h00"), UInt<1>("h00")) @[alu.scala 221:18]
                      when _T_28 : @[alu.scala 221:27]
                        out16[1] <= UInt<1>("h00") @[alu.scala 222:24]
                        skip @[alu.scala 221:27]
                      else : @[alu.scala 223:24]
                        node _out16_1_T_2 = add(sew_16_a[1], imm_6) @[alu.scala 224:39]
                        node _out16_1_T_3 = tail(_out16_1_T_2, 1) @[alu.scala 224:39]
                        out16[1] <= _out16_1_T_3 @[alu.scala 224:24]
                        skip @[alu.scala 223:24]
                      node _T_29 = eq(UInt<1>("h01"), UInt<1>("h00")) @[alu.scala 221:18]
                      when _T_29 : @[alu.scala 221:27]
                        out16[2] <= UInt<1>("h00") @[alu.scala 222:24]
                        skip @[alu.scala 221:27]
                      else : @[alu.scala 223:24]
                        node _out16_2_T_2 = add(sew_16_a[2], imm_6) @[alu.scala 224:39]
                        node _out16_2_T_3 = tail(_out16_2_T_2, 1) @[alu.scala 224:39]
                        out16[2] <= _out16_2_T_3 @[alu.scala 224:24]
                        skip @[alu.scala 223:24]
                      node _T_30 = eq(UInt<1>("h01"), UInt<1>("h00")) @[alu.scala 221:18]
                      when _T_30 : @[alu.scala 221:27]
                        out16[3] <= UInt<1>("h00") @[alu.scala 222:24]
                        skip @[alu.scala 221:27]
                      else : @[alu.scala 223:24]
                        node _out16_3_T_2 = add(sew_16_a[3], imm_6) @[alu.scala 224:39]
                        node _out16_3_T_3 = tail(_out16_3_T_2, 1) @[alu.scala 224:39]
                        out16[3] <= _out16_3_T_3 @[alu.scala 224:24]
                        skip @[alu.scala 223:24]
                      node _T_31 = eq(UInt<1>("h00"), UInt<1>("h00")) @[alu.scala 221:18]
                      when _T_31 : @[alu.scala 221:27]
                        out16[4] <= UInt<1>("h00") @[alu.scala 222:24]
                        skip @[alu.scala 221:27]
                      else : @[alu.scala 223:24]
                        node _out16_4_T_2 = add(sew_16_a[4], imm_6) @[alu.scala 224:39]
                        node _out16_4_T_3 = tail(_out16_4_T_2, 1) @[alu.scala 224:39]
                        out16[4] <= _out16_4_T_3 @[alu.scala 224:24]
                        skip @[alu.scala 223:24]
                      node _T_32 = eq(UInt<1>("h01"), UInt<1>("h00")) @[alu.scala 221:18]
                      when _T_32 : @[alu.scala 221:27]
                        out16[5] <= UInt<1>("h00") @[alu.scala 222:24]
                        skip @[alu.scala 221:27]
                      else : @[alu.scala 223:24]
                        node _out16_5_T_2 = add(sew_16_a[5], imm_6) @[alu.scala 224:39]
                        node _out16_5_T_3 = tail(_out16_5_T_2, 1) @[alu.scala 224:39]
                        out16[5] <= _out16_5_T_3 @[alu.scala 224:24]
                        skip @[alu.scala 223:24]
                      node _T_33 = eq(UInt<1>("h00"), UInt<1>("h00")) @[alu.scala 221:18]
                      when _T_33 : @[alu.scala 221:27]
                        out16[6] <= UInt<1>("h00") @[alu.scala 222:24]
                        skip @[alu.scala 221:27]
                      else : @[alu.scala 223:24]
                        node _out16_6_T_2 = add(sew_16_a[6], imm_6) @[alu.scala 224:39]
                        node _out16_6_T_3 = tail(_out16_6_T_2, 1) @[alu.scala 224:39]
                        out16[6] <= _out16_6_T_3 @[alu.scala 224:24]
                        skip @[alu.scala 223:24]
                      node _T_34 = eq(UInt<1>("h01"), UInt<1>("h00")) @[alu.scala 221:18]
                      when _T_34 : @[alu.scala 221:27]
                        out16[7] <= UInt<1>("h00") @[alu.scala 222:24]
                        skip @[alu.scala 221:27]
                      else : @[alu.scala 223:24]
                        node _out16_7_T_2 = add(sew_16_a[7], imm_6) @[alu.scala 224:39]
                        node _out16_7_T_3 = tail(_out16_7_T_2, 1) @[alu.scala 224:39]
                        out16[7] <= _out16_7_T_3 @[alu.scala 224:24]
                        skip @[alu.scala 223:24]
                      node io_v_output_lo_lo_3 = cat(out16[1], out16[0]) @[Cat.scala 30:58]
                      node io_v_output_lo_hi_3 = cat(out16[3], out16[2]) @[Cat.scala 30:58]
                      node io_v_output_lo_5 = cat(io_v_output_lo_hi_3, io_v_output_lo_lo_3) @[Cat.scala 30:58]
                      node io_v_output_hi_lo_3 = cat(out16[5], out16[4]) @[Cat.scala 30:58]
                      node io_v_output_hi_hi_3 = cat(out16[7], out16[6]) @[Cat.scala 30:58]
                      node io_v_output_hi_5 = cat(io_v_output_hi_hi_3, io_v_output_hi_lo_3) @[Cat.scala 30:58]
                      node _io_v_output_T_7 = cat(io_v_output_hi_5, io_v_output_lo_5) @[Cat.scala 30:58]
                      io.v_output <= _io_v_output_T_7 @[alu.scala 227:29]
                      skip @[alu.scala 218:64]
                    else : @[alu.scala 230:33]
                      node _T_35 = eq(io.aluc, UInt<8>("h0bc")) @[alu.scala 230:24]
                      when _T_35 : @[alu.scala 230:33]
                        node io_v_output_lo_6 = asUInt(io.in_A) @[Cat.scala 30:58]
                        node _io_v_output_T_8 = cat(UInt<96>("h00"), io_v_output_lo_6) @[Cat.scala 30:58]
                        io.v_output <= _io_v_output_T_8 @[alu.scala 232:17]
                        skip @[alu.scala 230:33]
      skip @[alu.scala 169:15]
    
  module Alu_Control : 
    input clock : Clock
    input reset : Reset
    output io : {flip func3 : UInt<3>, flip func7 : UInt<1>, flip aluOp : UInt<3>, flip V_inst : UInt<1>, flip func6 : UInt<6>, aluc : UInt<9>, out_V : UInt<1>}
    
    node _T = eq(io.V_inst, UInt<1>("h00")) @[alucontrol.scala 18:17]
    when _T : @[alucontrol.scala 18:26]
      node _T_1 = eq(io.aluOp, UInt<1>("h00")) @[alucontrol.scala 20:20]
      when _T_1 : @[alucontrol.scala 20:29]
        node io_aluc_hi = cat(UInt<1>("h00"), io.func7) @[Cat.scala 30:58]
        node _io_aluc_T = cat(io_aluc_hi, io.func3) @[Cat.scala 30:58]
        io.aluc <= _io_aluc_T @[alucontrol.scala 21:17]
        io.out_V <= UInt<1>("h00") @[alucontrol.scala 22:18]
        skip @[alucontrol.scala 20:29]
      else : @[alucontrol.scala 25:35]
        node _T_2 = eq(io.aluOp, UInt<1>("h01")) @[alucontrol.scala 25:26]
        when _T_2 : @[alucontrol.scala 25:35]
          node _io_aluc_T_1 = cat(UInt<1>("h00"), io.func3) @[Cat.scala 30:58]
          io.aluc <= _io_aluc_T_1 @[alucontrol.scala 26:17]
          io.out_V <= UInt<1>("h00") @[alucontrol.scala 27:18]
          skip @[alucontrol.scala 25:35]
        else : @[alucontrol.scala 30:35]
          node _T_3 = eq(io.aluOp, UInt<2>("h02")) @[alucontrol.scala 30:26]
          when _T_3 : @[alucontrol.scala 30:35]
            node io_aluc_lo = cat(UInt<1>("h00"), io.func3) @[Cat.scala 30:58]
            node io_aluc_hi_1 = cat(UInt<1>("h00"), UInt<1>("h01")) @[Cat.scala 30:58]
            node _io_aluc_T_2 = cat(io_aluc_hi_1, io_aluc_lo) @[Cat.scala 30:58]
            io.aluc <= _io_aluc_T_2 @[alucontrol.scala 31:17]
            io.out_V <= UInt<1>("h00") @[alucontrol.scala 32:18]
            skip @[alucontrol.scala 30:35]
          else : @[alucontrol.scala 35:35]
            node _T_4 = eq(io.aluOp, UInt<2>("h03")) @[alucontrol.scala 35:26]
            when _T_4 : @[alucontrol.scala 35:35]
              io.aluc <= UInt<5>("h01f") @[alucontrol.scala 36:17]
              io.out_V <= UInt<1>("h00") @[alucontrol.scala 37:18]
              skip @[alucontrol.scala 35:35]
            else : @[alucontrol.scala 40:35]
              node _T_5 = eq(io.aluOp, UInt<3>("h04")) @[alucontrol.scala 40:26]
              when _T_5 : @[alucontrol.scala 40:35]
                io.aluc <= UInt<1>("h00") @[alucontrol.scala 41:17]
                io.out_V <= UInt<1>("h00") @[alucontrol.scala 42:18]
                skip @[alucontrol.scala 40:35]
              else : @[alucontrol.scala 45:35]
                node _T_6 = eq(io.aluOp, UInt<3>("h05")) @[alucontrol.scala 45:26]
                when _T_6 : @[alucontrol.scala 45:35]
                  io.aluc <= UInt<1>("h00") @[alucontrol.scala 46:17]
                  io.out_V <= UInt<1>("h00") @[alucontrol.scala 47:18]
                  skip @[alucontrol.scala 45:35]
                else : @[alucontrol.scala 50:35]
                  node _T_7 = eq(io.aluOp, UInt<3>("h06")) @[alucontrol.scala 50:26]
                  when _T_7 : @[alucontrol.scala 50:35]
                    io.aluc <= UInt<1>("h00") @[alucontrol.scala 51:17]
                    io.out_V <= UInt<1>("h00") @[alucontrol.scala 52:18]
                    skip @[alucontrol.scala 50:35]
                  else : @[alucontrol.scala 55:35]
                    node _T_8 = eq(io.aluOp, UInt<3>("h07")) @[alucontrol.scala 55:26]
                    when _T_8 : @[alucontrol.scala 55:35]
                      io.aluc <= UInt<1>("h00") @[alucontrol.scala 56:17]
                      io.out_V <= UInt<1>("h00") @[alucontrol.scala 57:18]
                      skip @[alucontrol.scala 55:35]
                    else : @[alucontrol.scala 59:16]
                      io.aluc <= UInt<1>("h00") @[alucontrol.scala 60:17]
                      io.out_V <= UInt<1>("h00") @[alucontrol.scala 61:18]
                      skip @[alucontrol.scala 59:16]
      skip @[alucontrol.scala 18:26]
    else : @[alucontrol.scala 64:32]
      node _T_9 = eq(io.V_inst, UInt<1>("h01")) @[alucontrol.scala 64:23]
      when _T_9 : @[alucontrol.scala 64:32]
        node _T_10 = eq(io.aluOp, UInt<1>("h00")) @[alucontrol.scala 66:20]
        when _T_10 : @[alucontrol.scala 66:29]
          node _io_aluc_T_3 = cat(UInt<1>("h00"), io.func3) @[Cat.scala 30:58]
          io.aluc <= _io_aluc_T_3 @[alucontrol.scala 67:17]
          io.out_V <= UInt<1>("h01") @[alucontrol.scala 68:18]
          skip @[alucontrol.scala 66:29]
        else : @[alucontrol.scala 71:35]
          node _T_11 = eq(io.aluOp, UInt<1>("h01")) @[alucontrol.scala 71:26]
          when _T_11 : @[alucontrol.scala 71:35]
            node _io_aluc_T_4 = cat(io.func6, io.func3) @[Cat.scala 30:58]
            io.aluc <= _io_aluc_T_4 @[alucontrol.scala 72:17]
            io.out_V <= UInt<1>("h01") @[alucontrol.scala 73:18]
            skip @[alucontrol.scala 71:35]
          else : @[alucontrol.scala 75:35]
            node _T_12 = eq(io.aluOp, UInt<2>("h02")) @[alucontrol.scala 75:26]
            when _T_12 : @[alucontrol.scala 75:35]
              node _io_aluc_T_5 = cat(io.func6, io.func3) @[Cat.scala 30:58]
              io.aluc <= _io_aluc_T_5 @[alucontrol.scala 76:17]
              io.out_V <= UInt<1>("h01") @[alucontrol.scala 77:18]
              skip @[alucontrol.scala 75:35]
            else : @[alucontrol.scala 79:35]
              node _T_13 = eq(io.aluOp, UInt<2>("h03")) @[alucontrol.scala 79:26]
              when _T_13 : @[alucontrol.scala 79:35]
                node _io_aluc_T_6 = cat(io.func6, io.func3) @[Cat.scala 30:58]
                io.aluc <= _io_aluc_T_6 @[alucontrol.scala 80:17]
                io.out_V <= UInt<1>("h01") @[alucontrol.scala 81:18]
                skip @[alucontrol.scala 79:35]
              else : @[alucontrol.scala 83:17]
                io.aluc <= UInt<1>("h00") @[alucontrol.scala 84:17]
                io.out_V <= UInt<1>("h00") @[alucontrol.scala 85:18]
                skip @[alucontrol.scala 83:17]
        skip @[alucontrol.scala 64:32]
      else : @[alucontrol.scala 88:13]
        io.aluc <= UInt<1>("h00") @[alucontrol.scala 89:13]
        io.out_V <= UInt<1>("h00") @[alucontrol.scala 90:14]
        skip @[alucontrol.scala 88:13]
    
  module BranchControl_ : 
    input clock : Clock
    input reset : Reset
    output io : {flip aluc : UInt<5>, flip branch : UInt<1>, flip arg_x : SInt<32>, flip arg_y : SInt<32>, br_taken : UInt<1>}
    
    io.br_taken <= UInt<1>("h00") @[branchcontrol.scala 26:13]
    node _T = eq(UInt<5>("h010"), io.aluc) @[Conditional.scala 37:30]
    when _T : @[Conditional.scala 40:58]
      node _T_1 = eq(io.arg_x, io.arg_y) @[branchcontrol.scala 29:16]
      when _T_1 : @[branchcontrol.scala 29:29]
        node _io_br_taken_T = and(UInt<1>("h01"), io.branch) @[branchcontrol.scala 30:24]
        io.br_taken <= _io_br_taken_T @[branchcontrol.scala 30:17]
        skip @[branchcontrol.scala 29:29]
      else : @[branchcontrol.scala 31:12]
        node _io_br_taken_T_1 = and(UInt<1>("h00"), io.branch) @[branchcontrol.scala 32:20]
        io.br_taken <= _io_br_taken_T_1 @[branchcontrol.scala 32:13]
        skip @[branchcontrol.scala 31:12]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_2 = eq(UInt<5>("h013"), io.aluc) @[Conditional.scala 37:30]
      when _T_2 : @[Conditional.scala 39:67]
        node _T_3 = neq(io.arg_x, io.arg_y) @[branchcontrol.scala 35:16]
        when _T_3 : @[branchcontrol.scala 35:29]
          node _io_br_taken_T_2 = and(UInt<1>("h01"), io.branch) @[branchcontrol.scala 36:24]
          io.br_taken <= _io_br_taken_T_2 @[branchcontrol.scala 36:17]
          skip @[branchcontrol.scala 35:29]
        else : @[branchcontrol.scala 37:12]
          node _io_br_taken_T_3 = and(UInt<1>("h00"), io.branch) @[branchcontrol.scala 38:20]
          io.br_taken <= _io_br_taken_T_3 @[branchcontrol.scala 38:13]
          skip @[branchcontrol.scala 37:12]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_4 = eq(UInt<5>("h014"), io.aluc) @[Conditional.scala 37:30]
        when _T_4 : @[Conditional.scala 39:67]
          node _T_5 = lt(io.arg_x, io.arg_y) @[branchcontrol.scala 41:16]
          when _T_5 : @[branchcontrol.scala 41:27]
            node _io_br_taken_T_4 = and(UInt<1>("h01"), io.branch) @[branchcontrol.scala 42:24]
            io.br_taken <= _io_br_taken_T_4 @[branchcontrol.scala 42:17]
            skip @[branchcontrol.scala 41:27]
          else : @[branchcontrol.scala 43:12]
            node _io_br_taken_T_5 = and(UInt<1>("h00"), io.branch) @[branchcontrol.scala 44:20]
            io.br_taken <= _io_br_taken_T_5 @[branchcontrol.scala 44:13]
            skip @[branchcontrol.scala 43:12]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_6 = eq(UInt<5>("h015"), io.aluc) @[Conditional.scala 37:30]
          when _T_6 : @[Conditional.scala 39:67]
            node _T_7 = geq(io.arg_x, io.arg_y) @[branchcontrol.scala 47:16]
            when _T_7 : @[branchcontrol.scala 47:28]
              node _io_br_taken_T_6 = and(UInt<1>("h01"), io.branch) @[branchcontrol.scala 48:24]
              io.br_taken <= _io_br_taken_T_6 @[branchcontrol.scala 48:17]
              skip @[branchcontrol.scala 47:28]
            else : @[branchcontrol.scala 49:12]
              node _io_br_taken_T_7 = and(UInt<1>("h00"), io.branch) @[branchcontrol.scala 50:19]
              io.br_taken <= _io_br_taken_T_7 @[branchcontrol.scala 50:13]
              skip @[branchcontrol.scala 49:12]
            skip @[Conditional.scala 39:67]
          else : @[Conditional.scala 39:67]
            node _T_8 = eq(UInt<5>("h016"), io.aluc) @[Conditional.scala 37:30]
            when _T_8 : @[Conditional.scala 39:67]
              node _T_9 = leq(io.arg_x, io.arg_y) @[branchcontrol.scala 53:16]
              when _T_9 : @[branchcontrol.scala 53:28]
                node _io_br_taken_T_8 = and(UInt<1>("h01"), io.branch) @[branchcontrol.scala 54:24]
                io.br_taken <= _io_br_taken_T_8 @[branchcontrol.scala 54:17]
                skip @[branchcontrol.scala 53:28]
              else : @[branchcontrol.scala 55:12]
                node _io_br_taken_T_9 = and(UInt<1>("h00"), io.branch) @[branchcontrol.scala 56:20]
                io.br_taken <= _io_br_taken_T_9 @[branchcontrol.scala 56:13]
                skip @[branchcontrol.scala 55:12]
              skip @[Conditional.scala 39:67]
            else : @[Conditional.scala 39:67]
              node _T_10 = eq(UInt<5>("h017"), io.aluc) @[Conditional.scala 37:30]
              when _T_10 : @[Conditional.scala 39:67]
                node _T_11 = geq(io.arg_x, io.arg_y) @[branchcontrol.scala 59:16]
                when _T_11 : @[branchcontrol.scala 59:28]
                  node _io_br_taken_T_10 = and(UInt<1>("h01"), io.branch) @[branchcontrol.scala 60:24]
                  io.br_taken <= _io_br_taken_T_10 @[branchcontrol.scala 60:17]
                  skip @[branchcontrol.scala 59:28]
                else : @[branchcontrol.scala 61:12]
                  node _io_br_taken_T_11 = and(UInt<1>("h00"), io.branch) @[branchcontrol.scala 62:20]
                  io.br_taken <= _io_br_taken_T_11 @[branchcontrol.scala 62:13]
                  skip @[branchcontrol.scala 61:12]
                skip @[Conditional.scala 39:67]
    
  module controldec : 
    input clock : Clock
    input reset : Reset
    output io : {flip Instruction : UInt<32>, MemWrite : UInt<1>, Branch : UInt<1>, MemRead : UInt<1>, RegWrite : UInt<1>, Mem2Reg : UInt<1>, opAsel : UInt<2>, opBsel : UInt<1>, Ex_sel : UInt<4>, nextPCsel : UInt<2>, aluop : UInt<5>, vset : UInt<1>, load : UInt<4>, v_ins : UInt<1>}
    
    io.MemWrite <= UInt<1>("h00") @[controldecoder.scala 22:17]
    io.Branch <= UInt<1>("h00") @[controldecoder.scala 23:15]
    io.MemRead <= UInt<1>("h00") @[controldecoder.scala 24:16]
    io.RegWrite <= UInt<1>("h00") @[controldecoder.scala 25:17]
    io.Mem2Reg <= UInt<1>("h00") @[controldecoder.scala 26:16]
    io.opAsel <= UInt<1>("h00") @[controldecoder.scala 27:15]
    io.opBsel <= UInt<1>("h00") @[controldecoder.scala 28:15]
    io.Ex_sel <= UInt<1>("h00") @[controldecoder.scala 29:15]
    io.nextPCsel <= UInt<1>("h00") @[controldecoder.scala 30:18]
    io.aluop <= UInt<3>("h07") @[controldecoder.scala 31:14]
    io.vset <= UInt<1>("h01") @[controldecoder.scala 32:13]
    io.load <= UInt<1>("h00") @[controldecoder.scala 33:13]
    io.v_ins <= UInt<1>("h00") @[controldecoder.scala 34:14]
    node configtype = bits(io.Instruction, 31, 30) @[controldecoder.scala 36:36]
    node opcode = bits(io.Instruction, 6, 0) @[controldecoder.scala 37:32]
    node func3 = bits(io.Instruction, 14, 12) @[controldecoder.scala 38:31]
    node _T = eq(UInt<6>("h033"), opcode) @[Conditional.scala 37:30]
    when _T : @[Conditional.scala 40:58]
      io.MemWrite <= UInt<1>("h00") @[controldecoder.scala 42:25]
      io.Branch <= UInt<1>("h00") @[controldecoder.scala 43:24]
      io.MemRead <= UInt<1>("h00") @[controldecoder.scala 44:25]
      io.RegWrite <= UInt<1>("h01") @[controldecoder.scala 45:26]
      io.Mem2Reg <= UInt<1>("h00") @[controldecoder.scala 46:25]
      io.opAsel <= UInt<1>("h00") @[controldecoder.scala 47:24]
      io.opBsel <= UInt<1>("h00") @[controldecoder.scala 48:24]
      io.Ex_sel <= UInt<1>("h00") @[controldecoder.scala 49:24]
      io.aluop <= UInt<1>("h00") @[controldecoder.scala 50:22]
      io.vset <= UInt<1>("h00") @[controldecoder.scala 51:21]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_1 = eq(UInt<5>("h013"), opcode) @[Conditional.scala 37:30]
      when _T_1 : @[Conditional.scala 39:67]
        io.MemWrite <= UInt<1>("h00") @[controldecoder.scala 55:26]
        io.Branch <= UInt<1>("h00") @[controldecoder.scala 56:24]
        io.MemRead <= UInt<1>("h00") @[controldecoder.scala 57:25]
        io.RegWrite <= UInt<1>("h01") @[controldecoder.scala 58:26]
        io.Mem2Reg <= UInt<1>("h00") @[controldecoder.scala 59:25]
        io.opAsel <= UInt<1>("h00") @[controldecoder.scala 60:24]
        io.opBsel <= UInt<1>("h01") @[controldecoder.scala 61:24]
        io.Ex_sel <= UInt<1>("h00") @[controldecoder.scala 62:24]
        io.aluop <= UInt<1>("h01") @[controldecoder.scala 63:22]
        io.vset <= UInt<1>("h00") @[controldecoder.scala 64:21]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_2 = eq(UInt<6>("h023"), opcode) @[Conditional.scala 37:30]
        when _T_2 : @[Conditional.scala 39:67]
          io.MemWrite <= UInt<1>("h01") @[controldecoder.scala 67:26]
          io.Branch <= UInt<1>("h00") @[controldecoder.scala 68:24]
          io.MemRead <= UInt<1>("h00") @[controldecoder.scala 69:25]
          io.RegWrite <= UInt<1>("h01") @[controldecoder.scala 70:26]
          io.Mem2Reg <= UInt<1>("h00") @[controldecoder.scala 71:25]
          io.opAsel <= UInt<1>("h00") @[controldecoder.scala 72:24]
          io.opBsel <= UInt<1>("h01") @[controldecoder.scala 73:24]
          io.Ex_sel <= UInt<1>("h01") @[controldecoder.scala 74:24]
          io.aluop <= UInt<3>("h05") @[controldecoder.scala 75:22]
          io.vset <= UInt<1>("h00") @[controldecoder.scala 76:21]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_3 = eq(UInt<2>("h03"), opcode) @[Conditional.scala 37:30]
          when _T_3 : @[Conditional.scala 39:67]
            io.MemWrite <= UInt<1>("h00") @[controldecoder.scala 79:26]
            io.Branch <= UInt<1>("h00") @[controldecoder.scala 80:24]
            io.MemRead <= UInt<1>("h01") @[controldecoder.scala 81:25]
            io.RegWrite <= UInt<1>("h01") @[controldecoder.scala 82:26]
            io.Mem2Reg <= UInt<1>("h01") @[controldecoder.scala 83:25]
            io.opAsel <= UInt<1>("h00") @[controldecoder.scala 84:24]
            io.opBsel <= UInt<1>("h01") @[controldecoder.scala 85:24]
            io.Ex_sel <= UInt<1>("h00") @[controldecoder.scala 86:24]
            io.aluop <= UInt<3>("h04") @[controldecoder.scala 87:22]
            io.vset <= UInt<1>("h00") @[controldecoder.scala 88:21]
            skip @[Conditional.scala 39:67]
          else : @[Conditional.scala 39:67]
            node _T_4 = eq(UInt<7>("h063"), opcode) @[Conditional.scala 37:30]
            when _T_4 : @[Conditional.scala 39:67]
              io.MemWrite <= UInt<1>("h00") @[controldecoder.scala 92:26]
              io.Branch <= UInt<1>("h01") @[controldecoder.scala 93:24]
              io.MemRead <= UInt<1>("h00") @[controldecoder.scala 94:25]
              io.RegWrite <= UInt<1>("h00") @[controldecoder.scala 95:26]
              io.Mem2Reg <= UInt<1>("h00") @[controldecoder.scala 96:25]
              io.opAsel <= UInt<1>("h00") @[controldecoder.scala 97:24]
              io.opBsel <= UInt<1>("h00") @[controldecoder.scala 98:24]
              io.Ex_sel <= UInt<1>("h00") @[controldecoder.scala 99:24]
              io.nextPCsel <= UInt<1>("h01") @[controldecoder.scala 100:26]
              io.aluop <= UInt<2>("h02") @[controldecoder.scala 101:22]
              io.vset <= UInt<1>("h00") @[controldecoder.scala 102:21]
              skip @[Conditional.scala 39:67]
            else : @[Conditional.scala 39:67]
              node _T_5 = eq(UInt<7>("h06f"), opcode) @[Conditional.scala 37:30]
              when _T_5 : @[Conditional.scala 39:67]
                io.MemWrite <= UInt<1>("h00") @[controldecoder.scala 105:26]
                io.Branch <= UInt<1>("h00") @[controldecoder.scala 106:24]
                io.MemRead <= UInt<1>("h00") @[controldecoder.scala 107:25]
                io.RegWrite <= UInt<1>("h01") @[controldecoder.scala 108:26]
                io.Mem2Reg <= UInt<1>("h00") @[controldecoder.scala 109:25]
                io.opAsel <= UInt<1>("h01") @[controldecoder.scala 110:24]
                io.opBsel <= UInt<1>("h00") @[controldecoder.scala 111:24]
                io.Ex_sel <= UInt<1>("h00") @[controldecoder.scala 112:24]
                io.nextPCsel <= UInt<2>("h02") @[controldecoder.scala 113:26]
                io.aluop <= UInt<2>("h03") @[controldecoder.scala 114:22]
                io.vset <= UInt<1>("h00") @[controldecoder.scala 115:21]
                skip @[Conditional.scala 39:67]
              else : @[Conditional.scala 39:67]
                node _T_6 = eq(UInt<7>("h067"), opcode) @[Conditional.scala 37:30]
                when _T_6 : @[Conditional.scala 39:67]
                  io.MemWrite <= UInt<1>("h00") @[controldecoder.scala 118:26]
                  io.Branch <= UInt<1>("h00") @[controldecoder.scala 119:24]
                  io.MemRead <= UInt<1>("h00") @[controldecoder.scala 120:25]
                  io.RegWrite <= UInt<1>("h01") @[controldecoder.scala 121:26]
                  io.Mem2Reg <= UInt<1>("h00") @[controldecoder.scala 122:25]
                  io.opAsel <= UInt<1>("h01") @[controldecoder.scala 123:24]
                  io.opBsel <= UInt<1>("h01") @[controldecoder.scala 124:24]
                  io.Ex_sel <= UInt<1>("h00") @[controldecoder.scala 125:24]
                  io.nextPCsel <= UInt<2>("h03") @[controldecoder.scala 126:26]
                  io.aluop <= UInt<2>("h03") @[controldecoder.scala 127:22]
                  io.vset <= UInt<1>("h00") @[controldecoder.scala 128:21]
                  skip @[Conditional.scala 39:67]
                else : @[Conditional.scala 39:67]
                  node _T_7 = eq(UInt<6>("h037"), opcode) @[Conditional.scala 37:30]
                  when _T_7 : @[Conditional.scala 39:67]
                    io.MemWrite <= UInt<1>("h00") @[controldecoder.scala 131:26]
                    io.Branch <= UInt<1>("h00") @[controldecoder.scala 132:24]
                    io.MemRead <= UInt<1>("h00") @[controldecoder.scala 133:25]
                    io.RegWrite <= UInt<1>("h01") @[controldecoder.scala 134:26]
                    io.Mem2Reg <= UInt<1>("h00") @[controldecoder.scala 135:25]
                    io.opAsel <= UInt<2>("h02") @[controldecoder.scala 136:24]
                    io.opBsel <= UInt<1>("h01") @[controldecoder.scala 137:24]
                    io.Ex_sel <= UInt<2>("h02") @[controldecoder.scala 138:24]
                    io.nextPCsel <= UInt<1>("h00") @[controldecoder.scala 139:26]
                    io.aluop <= UInt<3>("h06") @[controldecoder.scala 140:22]
                    io.vset <= UInt<1>("h00") @[controldecoder.scala 141:21]
                    skip @[Conditional.scala 39:67]
                  else : @[Conditional.scala 39:67]
                    node _T_8 = eq(UInt<7>("h057"), opcode) @[Conditional.scala 37:30]
                    when _T_8 : @[Conditional.scala 39:67]
                      io.v_ins <= UInt<1>("h01") @[controldecoder.scala 145:22]
                      node _T_9 = eq(func3, UInt<3>("h07")) @[controldecoder.scala 146:25]
                      node _T_10 = eq(configtype, UInt<1>("h00")) @[controldecoder.scala 146:52]
                      node _T_11 = eq(configtype, UInt<1>("h01")) @[controldecoder.scala 146:77]
                      node _T_12 = or(_T_10, _T_11) @[controldecoder.scala 146:63]
                      node _T_13 = and(_T_9, _T_12) @[controldecoder.scala 146:37]
                      when _T_13 : @[controldecoder.scala 146:90]
                        io.RegWrite <= UInt<1>("h01") @[controldecoder.scala 147:28]
                        io.aluop <= UInt<1>("h00") @[controldecoder.scala 148:25]
                        io.opBsel <= UInt<1>("h01") @[controldecoder.scala 149:26]
                        io.MemWrite <= UInt<1>("h00") @[controldecoder.scala 150:28]
                        io.Branch <= UInt<1>("h00") @[controldecoder.scala 151:26]
                        io.MemRead <= UInt<1>("h00") @[controldecoder.scala 152:28]
                        io.Mem2Reg <= UInt<1>("h00") @[controldecoder.scala 153:27]
                        io.opAsel <= UInt<1>("h00") @[controldecoder.scala 154:26]
                        io.Ex_sel <= UInt<2>("h03") @[controldecoder.scala 155:26]
                        io.nextPCsel <= UInt<1>("h00") @[controldecoder.scala 156:29]
                        io.vset <= UInt<1>("h01") @[controldecoder.scala 157:25]
                        skip @[controldecoder.scala 146:90]
                      else : @[controldecoder.scala 158:67]
                        node _T_14 = eq(func3, UInt<3>("h07")) @[controldecoder.scala 158:30]
                        node _T_15 = eq(configtype, UInt<2>("h02")) @[controldecoder.scala 158:56]
                        node _T_16 = and(_T_14, _T_15) @[controldecoder.scala 158:42]
                        when _T_16 : @[controldecoder.scala 158:67]
                          io.RegWrite <= UInt<1>("h01") @[controldecoder.scala 159:28]
                          io.aluop <= UInt<1>("h01") @[controldecoder.scala 160:25]
                          io.opBsel <= UInt<1>("h01") @[controldecoder.scala 161:26]
                          io.MemWrite <= UInt<1>("h00") @[controldecoder.scala 162:28]
                          io.Branch <= UInt<1>("h00") @[controldecoder.scala 163:26]
                          io.MemRead <= UInt<1>("h00") @[controldecoder.scala 164:28]
                          io.Mem2Reg <= UInt<1>("h00") @[controldecoder.scala 165:27]
                          io.opAsel <= UInt<1>("h00") @[controldecoder.scala 166:26]
                          io.Ex_sel <= UInt<2>("h03") @[controldecoder.scala 167:26]
                          io.nextPCsel <= UInt<1>("h00") @[controldecoder.scala 168:29]
                          io.vset <= UInt<1>("h01") @[controldecoder.scala 169:25]
                          skip @[controldecoder.scala 158:67]
                        else : @[controldecoder.scala 170:67]
                          node _T_17 = eq(func3, UInt<3>("h07")) @[controldecoder.scala 170:30]
                          node _T_18 = eq(configtype, UInt<2>("h03")) @[controldecoder.scala 170:56]
                          node _T_19 = and(_T_17, _T_18) @[controldecoder.scala 170:42]
                          when _T_19 : @[controldecoder.scala 170:67]
                            io.RegWrite <= UInt<1>("h01") @[controldecoder.scala 171:28]
                            io.MemWrite <= UInt<1>("h00") @[controldecoder.scala 172:28]
                            io.Branch <= UInt<1>("h00") @[controldecoder.scala 173:26]
                            io.MemRead <= UInt<1>("h00") @[controldecoder.scala 174:28]
                            io.Mem2Reg <= UInt<1>("h00") @[controldecoder.scala 175:27]
                            io.aluop <= UInt<1>("h00") @[controldecoder.scala 176:25]
                            io.opAsel <= UInt<1>("h00") @[controldecoder.scala 177:26]
                            io.opBsel <= UInt<1>("h00") @[controldecoder.scala 178:26]
                            io.Ex_sel <= UInt<2>("h03") @[controldecoder.scala 179:26]
                            io.nextPCsel <= UInt<1>("h00") @[controldecoder.scala 180:29]
                            io.vset <= UInt<1>("h01") @[controldecoder.scala 181:25]
                            skip @[controldecoder.scala 170:67]
                          else : @[controldecoder.scala 182:45]
                            node _T_20 = eq(func3, UInt<1>("h00")) @[controldecoder.scala 182:31]
                            when _T_20 : @[controldecoder.scala 182:45]
                              io.RegWrite <= UInt<1>("h01") @[controldecoder.scala 183:28]
                              io.MemWrite <= UInt<1>("h00") @[controldecoder.scala 184:28]
                              io.Branch <= UInt<1>("h00") @[controldecoder.scala 185:26]
                              io.MemRead <= UInt<1>("h00") @[controldecoder.scala 186:28]
                              io.Mem2Reg <= UInt<1>("h00") @[controldecoder.scala 187:27]
                              io.aluop <= UInt<2>("h02") @[controldecoder.scala 188:25]
                              io.opAsel <= UInt<1>("h00") @[controldecoder.scala 189:26]
                              io.opBsel <= UInt<1>("h00") @[controldecoder.scala 190:26]
                              io.Ex_sel <= UInt<3>("h04") @[controldecoder.scala 191:26]
                              io.nextPCsel <= UInt<1>("h00") @[controldecoder.scala 192:29]
                              io.v_ins <= UInt<1>("h01") @[controldecoder.scala 193:26]
                              io.vset <= UInt<1>("h00") @[controldecoder.scala 194:25]
                              skip @[controldecoder.scala 182:45]
                            else : @[controldecoder.scala 195:45]
                              node _T_21 = eq(func3, UInt<3>("h04")) @[controldecoder.scala 195:31]
                              when _T_21 : @[controldecoder.scala 195:45]
                                io.RegWrite <= UInt<1>("h01") @[controldecoder.scala 196:28]
                                io.MemWrite <= UInt<1>("h00") @[controldecoder.scala 197:28]
                                io.Branch <= UInt<1>("h00") @[controldecoder.scala 198:26]
                                io.MemRead <= UInt<1>("h00") @[controldecoder.scala 199:28]
                                io.Mem2Reg <= UInt<1>("h00") @[controldecoder.scala 200:27]
                                io.aluop <= UInt<2>("h03") @[controldecoder.scala 201:25]
                                io.opAsel <= UInt<1>("h00") @[controldecoder.scala 202:26]
                                io.opBsel <= UInt<1>("h00") @[controldecoder.scala 203:26]
                                io.Ex_sel <= UInt<3>("h04") @[controldecoder.scala 204:26]
                                io.nextPCsel <= UInt<1>("h00") @[controldecoder.scala 205:29]
                                skip @[controldecoder.scala 195:45]
                              else : @[controldecoder.scala 207:45]
                                node _T_22 = eq(func3, UInt<2>("h03")) @[controldecoder.scala 207:31]
                                when _T_22 : @[controldecoder.scala 207:45]
                                  io.RegWrite <= UInt<1>("h01") @[controldecoder.scala 208:28]
                                  io.MemWrite <= UInt<1>("h00") @[controldecoder.scala 209:28]
                                  io.Branch <= UInt<1>("h00") @[controldecoder.scala 210:26]
                                  io.MemRead <= UInt<1>("h00") @[controldecoder.scala 211:28]
                                  io.Mem2Reg <= UInt<1>("h00") @[controldecoder.scala 212:27]
                                  io.aluop <= UInt<1>("h01") @[controldecoder.scala 213:25]
                                  io.opAsel <= UInt<1>("h00") @[controldecoder.scala 214:26]
                                  io.opBsel <= UInt<1>("h01") @[controldecoder.scala 215:26]
                                  io.Ex_sel <= UInt<3>("h04") @[controldecoder.scala 216:26]
                                  io.nextPCsel <= UInt<1>("h00") @[controldecoder.scala 217:29]
                                  io.v_ins <= UInt<1>("h01") @[controldecoder.scala 218:26]
                                  io.vset <= UInt<1>("h00") @[controldecoder.scala 219:25]
                                  skip @[controldecoder.scala 207:45]
                      skip @[Conditional.scala 39:67]
                    else : @[Conditional.scala 39:67]
                      node _T_23 = eq(UInt<3>("h07"), opcode) @[Conditional.scala 37:30]
                      when _T_23 : @[Conditional.scala 39:67]
                        node _T_24 = bits(io.Instruction, 27, 26) @[controldecoder.scala 223:33]
                        node _T_25 = eq(_T_24, UInt<1>("h00")) @[controldecoder.scala 223:41]
                        node _T_26 = bits(io.Instruction, 24, 20) @[controldecoder.scala 223:69]
                        node _T_27 = eq(_T_26, UInt<1>("h00")) @[controldecoder.scala 223:77]
                        node _T_28 = and(_T_25, _T_27) @[controldecoder.scala 223:52]
                        when _T_28 : @[controldecoder.scala 223:92]
                          io.RegWrite <= UInt<1>("h01") @[controldecoder.scala 224:28]
                          io.MemWrite <= UInt<1>("h00") @[controldecoder.scala 225:28]
                          io.Branch <= UInt<1>("h00") @[controldecoder.scala 226:26]
                          io.MemRead <= UInt<1>("h01") @[controldecoder.scala 227:28]
                          io.Mem2Reg <= UInt<1>("h01") @[controldecoder.scala 228:27]
                          io.aluop <= UInt<3>("h07") @[controldecoder.scala 229:25]
                          io.opAsel <= UInt<1>("h00") @[controldecoder.scala 230:26]
                          io.opBsel <= UInt<1>("h00") @[controldecoder.scala 231:26]
                          io.Ex_sel <= UInt<2>("h03") @[controldecoder.scala 232:26]
                          io.nextPCsel <= UInt<1>("h00") @[controldecoder.scala 233:29]
                          io.load <= UInt<1>("h01") @[controldecoder.scala 234:25]
                          skip @[controldecoder.scala 223:92]
                        skip @[Conditional.scala 39:67]
    
  module datamem : 
    input clock : Clock
    input reset : Reset
    output io : {flip Addr : UInt<8>, flip Data : SInt<32>, flip MemWrite : UInt<1>, flip MemRead : UInt<1>, out : SInt<32>}
    
    cmem mem : SInt<32>[1024] @[datamemory.scala 14:22]
    node _T = eq(io.MemWrite, UInt<1>("h01")) @[datamemory.scala 15:27]
    when _T : @[datamemory.scala 15:35]
      write mport MPORT = mem[io.Addr], clock
      MPORT <= io.Data
      skip @[datamemory.scala 15:35]
    node _T_1 = eq(io.MemRead, UInt<1>("h01")) @[datamemory.scala 18:25]
    when _T_1 : @[datamemory.scala 18:33]
      read mport io_out_MPORT = mem[io.Addr], clock @[datamemory.scala 19:35]
      io.out <= io_out_MPORT @[datamemory.scala 19:24]
      skip @[datamemory.scala 18:33]
    else : @[datamemory.scala 21:20]
      io.out <= asSInt(UInt<1>("h00")) @[datamemory.scala 21:28]
      skip @[datamemory.scala 21:20]
    
  module ImmdValGen1 : 
    input clock : Clock
    input reset : Reset
    output io : {flip instruction : UInt<32>, flip pc : UInt<32>, s_imm : SInt<32>, sb_imm : SInt<32>, uj_imm : SInt<32>, u_imm : SInt<32>, i_imm : SInt<32>, z_imm : SInt<32>, addi_imm : SInt<32>}
    
    node s_imm__hi = bits(io.instruction, 31, 25) @[immgen.scala 21:41]
    node s_imm__lo = bits(io.instruction, 11, 7) @[immgen.scala 21:63]
    node s_imm_ = cat(s_imm__hi, s_imm__lo) @[Cat.scala 30:58]
    node _io_s_imm_T = bits(s_imm_, 11, 11) @[immgen.scala 22:40]
    node _io_s_imm_T_1 = bits(_io_s_imm_T, 0, 0) @[Bitwise.scala 72:15]
    node io_s_imm_hi = mux(_io_s_imm_T_1, UInt<20>("h0fffff"), UInt<20>("h00")) @[Bitwise.scala 72:12]
    node _io_s_imm_T_2 = cat(io_s_imm_hi, s_imm_) @[Cat.scala 30:58]
    node _io_s_imm_T_3 = asSInt(_io_s_imm_T_2) @[immgen.scala 22:55]
    io.s_imm <= _io_s_imm_T_3 @[immgen.scala 22:18]
    node sb_imm__hi_hi_hi = bits(io.instruction, 31, 31) @[immgen.scala 24:42]
    node sb_imm__hi_hi_lo = bits(io.instruction, 7, 7) @[immgen.scala 24:61]
    node sb_imm__hi_lo = bits(io.instruction, 30, 25) @[immgen.scala 24:79]
    node sb_imm__lo_hi = bits(io.instruction, 11, 8) @[immgen.scala 24:101]
    node sb_imm__lo = cat(sb_imm__lo_hi, UInt<1>("h00")) @[Cat.scala 30:58]
    node sb_imm__hi_hi = cat(sb_imm__hi_hi_hi, sb_imm__hi_hi_lo) @[Cat.scala 30:58]
    node sb_imm__hi = cat(sb_imm__hi_hi, sb_imm__hi_lo) @[Cat.scala 30:58]
    node sb_imm_ = cat(sb_imm__hi, sb_imm__lo) @[Cat.scala 30:58]
    node _io_sb_imm_T = bits(sb_imm_, 12, 12) @[immgen.scala 25:43]
    node _io_sb_imm_T_1 = bits(_io_sb_imm_T, 0, 0) @[Bitwise.scala 72:15]
    node io_sb_imm_hi = mux(_io_sb_imm_T_1, UInt<19>("h07ffff"), UInt<19>("h00")) @[Bitwise.scala 72:12]
    node _io_sb_imm_T_2 = cat(io_sb_imm_hi, sb_imm_) @[Cat.scala 30:58]
    node _io_sb_imm_T_3 = add(_io_sb_imm_T_2, io.pc) @[immgen.scala 25:59]
    node _io_sb_imm_T_4 = tail(_io_sb_imm_T_3, 1) @[immgen.scala 25:59]
    node _io_sb_imm_T_5 = asSInt(_io_sb_imm_T_4) @[immgen.scala 25:68]
    io.sb_imm <= _io_sb_imm_T_5 @[immgen.scala 25:19]
    node uj_imm__hi_hi_hi = bits(io.instruction, 31, 31) @[immgen.scala 27:42]
    node uj_imm__hi_hi_lo = bits(io.instruction, 19, 12) @[immgen.scala 27:61]
    node uj_imm__hi_lo = bits(io.instruction, 20, 20) @[immgen.scala 27:83]
    node uj_imm__lo_hi = bits(io.instruction, 30, 21) @[immgen.scala 27:102]
    node uj_imm__lo = cat(uj_imm__lo_hi, UInt<1>("h00")) @[Cat.scala 30:58]
    node uj_imm__hi_hi = cat(uj_imm__hi_hi_hi, uj_imm__hi_hi_lo) @[Cat.scala 30:58]
    node uj_imm__hi = cat(uj_imm__hi_hi, uj_imm__hi_lo) @[Cat.scala 30:58]
    node uj_imm_ = cat(uj_imm__hi, uj_imm__lo) @[Cat.scala 30:58]
    node _io_uj_imm_T = bits(uj_imm_, 20, 20) @[immgen.scala 28:43]
    node _io_uj_imm_T_1 = bits(_io_uj_imm_T, 0, 0) @[Bitwise.scala 72:15]
    node io_uj_imm_hi = mux(_io_uj_imm_T_1, UInt<12>("h0fff"), UInt<12>("h00")) @[Bitwise.scala 72:12]
    node _io_uj_imm_T_2 = cat(io_uj_imm_hi, uj_imm_) @[Cat.scala 30:58]
    node _io_uj_imm_T_3 = add(_io_uj_imm_T_2, io.pc) @[immgen.scala 28:59]
    node _io_uj_imm_T_4 = tail(_io_uj_imm_T_3, 1) @[immgen.scala 28:59]
    node _io_uj_imm_T_5 = asSInt(_io_uj_imm_T_4) @[immgen.scala 28:68]
    io.uj_imm <= _io_uj_imm_T_5 @[immgen.scala 28:19]
    node io_u_imm_hi = bits(io.instruction, 31, 12) @[immgen.scala 30:40]
    node io_u_imm_lo = mux(UInt<1>("h00"), UInt<12>("h0fff"), UInt<12>("h00")) @[Bitwise.scala 72:12]
    node _io_u_imm_T = cat(io_u_imm_hi, io_u_imm_lo) @[Cat.scala 30:58]
    node _io_u_imm_T_1 = asSInt(_io_u_imm_T) @[immgen.scala 30:66]
    io.u_imm <= _io_u_imm_T_1 @[immgen.scala 30:18]
    node _io_i_imm_T = bits(io.instruction, 31, 31) @[immgen.scala 32:48]
    node _io_i_imm_T_1 = bits(_io_i_imm_T, 0, 0) @[Bitwise.scala 72:15]
    node io_i_imm_hi = mux(_io_i_imm_T_1, UInt<20>("h0fffff"), UInt<20>("h00")) @[Bitwise.scala 72:12]
    node io_i_imm_lo = bits(io.instruction, 31, 20) @[immgen.scala 32:68]
    node _io_i_imm_T_2 = cat(io_i_imm_hi, io_i_imm_lo) @[Cat.scala 30:58]
    node _io_i_imm_T_3 = asSInt(_io_i_imm_T_2) @[immgen.scala 32:78]
    io.i_imm <= _io_i_imm_T_3 @[immgen.scala 32:18]
    node _io_z_imm_T = bits(io.instruction, 30, 30) @[immgen.scala 34:47]
    node _io_z_imm_T_1 = bits(_io_z_imm_T, 0, 0) @[Bitwise.scala 72:15]
    node io_z_imm_hi = mux(_io_z_imm_T_1, UInt<21>("h01fffff"), UInt<21>("h00")) @[Bitwise.scala 72:12]
    node io_z_imm_lo = bits(io.instruction, 30, 20) @[immgen.scala 34:67]
    node _io_z_imm_T_2 = cat(io_z_imm_hi, io_z_imm_lo) @[Cat.scala 30:58]
    node _io_z_imm_T_3 = asSInt(_io_z_imm_T_2) @[immgen.scala 34:77]
    io.z_imm <= _io_z_imm_T_3 @[immgen.scala 34:17]
    node io_addi_imm_hi = mux(UInt<1>("h00"), UInt<27>("h07ffffff"), UInt<27>("h00")) @[Bitwise.scala 72:12]
    node io_addi_imm_lo = bits(io.instruction, 19, 15) @[immgen.scala 35:49]
    node _io_addi_imm_T = cat(io_addi_imm_hi, io_addi_imm_lo) @[Cat.scala 30:58]
    node _io_addi_imm_T_1 = asSInt(_io_addi_imm_T) @[immgen.scala 35:58]
    io.addi_imm <= _io_addi_imm_T_1 @[immgen.scala 35:13]
    
  module InstMem : 
    input clock : Clock
    input reset : Reset
    output io : {flip addr : UInt<10>, inst : UInt<32>}
    
    cmem imemm : UInt<32>[1024] @[instmemory.scala 13:17]
    read mport io_inst_MPORT = imemm[io.addr], clock @[instmemory.scala 16:22]
    io.inst <= io_inst_MPORT @[instmemory.scala 16:9]
    
  module jalr : 
    input clock : Clock
    input reset : Reset
    output io : {flip rs1 : SInt<32>, flip imm : SInt<32>, out : SInt<32>}
    
    node _a_T = add(io.rs1, io.imm) @[jalr.scala 11:24]
    node _a_T_1 = tail(_a_T, 1) @[jalr.scala 11:24]
    node a = asSInt(_a_T_1) @[jalr.scala 11:24]
    node _io_out_T = and(a, asSInt(UInt<33>("h0fffffffe"))) @[jalr.scala 12:21]
    node _io_out_T_1 = asSInt(_io_out_T) @[jalr.scala 12:21]
    io.out <= _io_out_T_1 @[jalr.scala 12:16]
    
  module regfile : 
    input clock : Clock
    input reset : Reset
    output io : {flip RegWrite : UInt<1>, flip rs1 : UInt<5>, flip rs2 : UInt<5>, flip rd : UInt<5>, flip WriteData : SInt<32>, rdata1 : SInt<32>, rdata2 : SInt<32>}
    
    wire _register_WIRE : SInt<32>[32] @[registerfile.scala 16:39]
    _register_WIRE[0] <= asSInt(UInt<32>("h00")) @[registerfile.scala 16:39]
    _register_WIRE[1] <= asSInt(UInt<32>("h00")) @[registerfile.scala 16:39]
    _register_WIRE[2] <= asSInt(UInt<32>("h00")) @[registerfile.scala 16:39]
    _register_WIRE[3] <= asSInt(UInt<32>("h00")) @[registerfile.scala 16:39]
    _register_WIRE[4] <= asSInt(UInt<32>("h00")) @[registerfile.scala 16:39]
    _register_WIRE[5] <= asSInt(UInt<32>("h00")) @[registerfile.scala 16:39]
    _register_WIRE[6] <= asSInt(UInt<32>("h00")) @[registerfile.scala 16:39]
    _register_WIRE[7] <= asSInt(UInt<32>("h00")) @[registerfile.scala 16:39]
    _register_WIRE[8] <= asSInt(UInt<32>("h00")) @[registerfile.scala 16:39]
    _register_WIRE[9] <= asSInt(UInt<32>("h00")) @[registerfile.scala 16:39]
    _register_WIRE[10] <= asSInt(UInt<32>("h00")) @[registerfile.scala 16:39]
    _register_WIRE[11] <= asSInt(UInt<32>("h00")) @[registerfile.scala 16:39]
    _register_WIRE[12] <= asSInt(UInt<32>("h00")) @[registerfile.scala 16:39]
    _register_WIRE[13] <= asSInt(UInt<32>("h00")) @[registerfile.scala 16:39]
    _register_WIRE[14] <= asSInt(UInt<32>("h00")) @[registerfile.scala 16:39]
    _register_WIRE[15] <= asSInt(UInt<32>("h00")) @[registerfile.scala 16:39]
    _register_WIRE[16] <= asSInt(UInt<32>("h00")) @[registerfile.scala 16:39]
    _register_WIRE[17] <= asSInt(UInt<32>("h00")) @[registerfile.scala 16:39]
    _register_WIRE[18] <= asSInt(UInt<32>("h00")) @[registerfile.scala 16:39]
    _register_WIRE[19] <= asSInt(UInt<32>("h00")) @[registerfile.scala 16:39]
    _register_WIRE[20] <= asSInt(UInt<32>("h00")) @[registerfile.scala 16:39]
    _register_WIRE[21] <= asSInt(UInt<32>("h00")) @[registerfile.scala 16:39]
    _register_WIRE[22] <= asSInt(UInt<32>("h00")) @[registerfile.scala 16:39]
    _register_WIRE[23] <= asSInt(UInt<32>("h00")) @[registerfile.scala 16:39]
    _register_WIRE[24] <= asSInt(UInt<32>("h00")) @[registerfile.scala 16:39]
    _register_WIRE[25] <= asSInt(UInt<32>("h00")) @[registerfile.scala 16:39]
    _register_WIRE[26] <= asSInt(UInt<32>("h00")) @[registerfile.scala 16:39]
    _register_WIRE[27] <= asSInt(UInt<32>("h00")) @[registerfile.scala 16:39]
    _register_WIRE[28] <= asSInt(UInt<32>("h00")) @[registerfile.scala 16:39]
    _register_WIRE[29] <= asSInt(UInt<32>("h00")) @[registerfile.scala 16:39]
    _register_WIRE[30] <= asSInt(UInt<32>("h00")) @[registerfile.scala 16:39]
    _register_WIRE[31] <= asSInt(UInt<32>("h00")) @[registerfile.scala 16:39]
    reg register : SInt<32>[32], clock with : (reset => (reset, _register_WIRE)) @[registerfile.scala 16:31]
    register[0] <= asSInt(UInt<1>("h00")) @[registerfile.scala 17:21]
    io.rdata1 <= register[io.rs1] @[registerfile.scala 18:19]
    io.rdata2 <= register[io.rs2] @[registerfile.scala 19:19]
    node _T = eq(io.RegWrite, UInt<1>("h01")) @[registerfile.scala 20:26]
    when _T : @[registerfile.scala 20:34]
      node _T_1 = neq(io.rd, UInt<1>("h00")) @[registerfile.scala 21:28]
      when _T_1 : @[registerfile.scala 21:43]
        register[io.rd] <= io.WriteData @[registerfile.scala 21:60]
        skip @[registerfile.scala 21:43]
      else : @[registerfile.scala 23:28]
        register[io.rd] <= asSInt(UInt<1>("h00")) @[registerfile.scala 23:45]
        skip @[registerfile.scala 23:28]
      skip @[registerfile.scala 20:34]
    
  module configure : 
    input clock : Clock
    input reset : Reset
    output io : {flip zimm : UInt<32>, flip rs1 : UInt<5>, flip rd : UInt<5>, flip rs1_readdata : SInt<32>, flip current_vl : SInt<32>, sew : UInt<3>, lmul : UInt<3>, vl : SInt<32>, rd_out : UInt<5>, avl_o : SInt<32>, valmax_o : SInt<32>, zimm_o : UInt<32>}
    
    node vlmul = bits(io.zimm, 2, 0) @[configure.scala 24:24]
    node vsew = bits(io.zimm, 5, 3) @[configure.scala 25:22]
    wire valmax : SInt
    valmax <= asSInt(UInt<1>("h00"))
    wire avl : SInt
    avl <= asSInt(UInt<1>("h00"))
    node _T = eq(vlmul, UInt<3>("h05")) @[configure.scala 31:17]
    when _T : @[configure.scala 31:30]
      node _T_1 = eq(vsew, UInt<1>("h00")) @[configure.scala 33:20]
      when _T_1 : @[configure.scala 33:33]
        valmax <= asSInt(UInt<3>("h02")) @[configure.scala 34:20]
        skip @[configure.scala 33:33]
      else : @[configure.scala 35:38]
        node _T_2 = eq(vsew, UInt<1>("h01")) @[configure.scala 35:25]
        when _T_2 : @[configure.scala 35:38]
          valmax <= asSInt(UInt<2>("h01")) @[configure.scala 36:20]
          skip @[configure.scala 35:38]
        else : @[configure.scala 37:38]
          node _T_3 = eq(vsew, UInt<2>("h02")) @[configure.scala 37:25]
          when _T_3 : @[configure.scala 37:38]
            node _valmax_T = shr(asSInt(UInt<2>("h01")), 2) @[configure.scala 38:27]
            valmax <= _valmax_T @[configure.scala 38:20]
            skip @[configure.scala 37:38]
      skip @[configure.scala 31:30]
    else : @[configure.scala 44:35]
      node _T_4 = eq(vlmul, UInt<3>("h06")) @[configure.scala 44:22]
      when _T_4 : @[configure.scala 44:35]
        node _T_5 = eq(vsew, UInt<1>("h00")) @[configure.scala 46:20]
        when _T_5 : @[configure.scala 46:33]
          valmax <= asSInt(UInt<4>("h04")) @[configure.scala 47:20]
          skip @[configure.scala 46:33]
        else : @[configure.scala 48:38]
          node _T_6 = eq(vsew, UInt<1>("h01")) @[configure.scala 48:25]
          when _T_6 : @[configure.scala 48:38]
            valmax <= asSInt(UInt<3>("h02")) @[configure.scala 49:20]
            skip @[configure.scala 48:38]
          else : @[configure.scala 50:38]
            node _T_7 = eq(vsew, UInt<2>("h02")) @[configure.scala 50:25]
            when _T_7 : @[configure.scala 50:38]
              valmax <= asSInt(UInt<2>("h01")) @[configure.scala 51:20]
              skip @[configure.scala 50:38]
        skip @[configure.scala 44:35]
      else : @[configure.scala 56:35]
        node _T_8 = eq(vlmul, UInt<3>("h07")) @[configure.scala 56:22]
        when _T_8 : @[configure.scala 56:35]
          node _T_9 = eq(vsew, UInt<1>("h00")) @[configure.scala 58:20]
          when _T_9 : @[configure.scala 58:33]
            valmax <= asSInt(UInt<5>("h08")) @[configure.scala 59:20]
            skip @[configure.scala 58:33]
          else : @[configure.scala 60:38]
            node _T_10 = eq(vsew, UInt<1>("h01")) @[configure.scala 60:25]
            when _T_10 : @[configure.scala 60:38]
              valmax <= asSInt(UInt<4>("h04")) @[configure.scala 61:20]
              skip @[configure.scala 60:38]
            else : @[configure.scala 62:38]
              node _T_11 = eq(vsew, UInt<2>("h02")) @[configure.scala 62:25]
              when _T_11 : @[configure.scala 62:38]
                valmax <= asSInt(UInt<3>("h02")) @[configure.scala 63:20]
                skip @[configure.scala 62:38]
              else : @[configure.scala 64:37]
                node _T_12 = eq(vsew, UInt<2>("h03")) @[configure.scala 64:25]
                when _T_12 : @[configure.scala 64:37]
                  valmax <= asSInt(UInt<2>("h01")) @[configure.scala 65:20]
                  skip @[configure.scala 64:37]
          skip @[configure.scala 56:35]
        else : @[configure.scala 68:35]
          node _T_13 = eq(vlmul, UInt<1>("h00")) @[configure.scala 68:22]
          when _T_13 : @[configure.scala 68:35]
            node _T_14 = eq(vsew, UInt<1>("h00")) @[configure.scala 69:20]
            when _T_14 : @[configure.scala 69:33]
              valmax <= asSInt(UInt<6>("h010")) @[configure.scala 70:20]
              skip @[configure.scala 69:33]
            else : @[configure.scala 71:38]
              node _T_15 = eq(vsew, UInt<1>("h01")) @[configure.scala 71:25]
              when _T_15 : @[configure.scala 71:38]
                valmax <= asSInt(UInt<5>("h08")) @[configure.scala 72:20]
                skip @[configure.scala 71:38]
              else : @[configure.scala 73:38]
                node _T_16 = eq(vsew, UInt<2>("h02")) @[configure.scala 73:25]
                when _T_16 : @[configure.scala 73:38]
                  valmax <= asSInt(UInt<4>("h04")) @[configure.scala 74:20]
                  skip @[configure.scala 73:38]
                else : @[configure.scala 75:37]
                  node _T_17 = eq(vsew, UInt<2>("h03")) @[configure.scala 75:25]
                  when _T_17 : @[configure.scala 75:37]
                    valmax <= asSInt(UInt<3>("h02")) @[configure.scala 76:20]
                    skip @[configure.scala 75:37]
            skip @[configure.scala 68:35]
          else : @[configure.scala 78:35]
            node _T_18 = eq(vlmul, UInt<1>("h01")) @[configure.scala 78:22]
            when _T_18 : @[configure.scala 78:35]
              node _T_19 = eq(vsew, UInt<1>("h00")) @[configure.scala 79:20]
              when _T_19 : @[configure.scala 79:33]
                valmax <= asSInt(UInt<7>("h020")) @[configure.scala 80:20]
                skip @[configure.scala 79:33]
              else : @[configure.scala 81:38]
                node _T_20 = eq(vsew, UInt<1>("h01")) @[configure.scala 81:25]
                when _T_20 : @[configure.scala 81:38]
                  valmax <= asSInt(UInt<6>("h010")) @[configure.scala 82:20]
                  skip @[configure.scala 81:38]
                else : @[configure.scala 83:38]
                  node _T_21 = eq(vsew, UInt<2>("h02")) @[configure.scala 83:25]
                  when _T_21 : @[configure.scala 83:38]
                    valmax <= asSInt(UInt<5>("h08")) @[configure.scala 84:20]
                    skip @[configure.scala 83:38]
                  else : @[configure.scala 85:37]
                    node _T_22 = eq(vsew, UInt<2>("h03")) @[configure.scala 85:25]
                    when _T_22 : @[configure.scala 85:37]
                      valmax <= asSInt(UInt<4>("h04")) @[configure.scala 86:20]
                      skip @[configure.scala 85:37]
              skip @[configure.scala 78:35]
            else : @[configure.scala 88:35]
              node _T_23 = eq(vlmul, UInt<2>("h02")) @[configure.scala 88:22]
              when _T_23 : @[configure.scala 88:35]
                node _T_24 = eq(vsew, UInt<1>("h00")) @[configure.scala 89:20]
                when _T_24 : @[configure.scala 89:33]
                  valmax <= asSInt(UInt<8>("h040")) @[configure.scala 90:20]
                  skip @[configure.scala 89:33]
                else : @[configure.scala 91:38]
                  node _T_25 = eq(vsew, UInt<1>("h01")) @[configure.scala 91:25]
                  when _T_25 : @[configure.scala 91:38]
                    valmax <= asSInt(UInt<7>("h020")) @[configure.scala 92:20]
                    skip @[configure.scala 91:38]
                  else : @[configure.scala 93:38]
                    node _T_26 = eq(vsew, UInt<2>("h02")) @[configure.scala 93:25]
                    when _T_26 : @[configure.scala 93:38]
                      valmax <= asSInt(UInt<6>("h010")) @[configure.scala 94:20]
                      skip @[configure.scala 93:38]
                    else : @[configure.scala 95:37]
                      node _T_27 = eq(vsew, UInt<2>("h03")) @[configure.scala 95:25]
                      when _T_27 : @[configure.scala 95:37]
                        valmax <= asSInt(UInt<5>("h08")) @[configure.scala 96:20]
                        skip @[configure.scala 95:37]
                skip @[configure.scala 88:35]
              else : @[configure.scala 98:35]
                node _T_28 = eq(vlmul, UInt<2>("h03")) @[configure.scala 98:22]
                when _T_28 : @[configure.scala 98:35]
                  node _T_29 = eq(vsew, UInt<1>("h00")) @[configure.scala 99:20]
                  when _T_29 : @[configure.scala 99:33]
                    valmax <= asSInt(UInt<9>("h080")) @[configure.scala 100:20]
                    skip @[configure.scala 99:33]
                  else : @[configure.scala 101:38]
                    node _T_30 = eq(vsew, UInt<1>("h01")) @[configure.scala 101:25]
                    when _T_30 : @[configure.scala 101:38]
                      valmax <= asSInt(UInt<8>("h040")) @[configure.scala 102:20]
                      skip @[configure.scala 101:38]
                    else : @[configure.scala 103:38]
                      node _T_31 = eq(vsew, UInt<2>("h02")) @[configure.scala 103:25]
                      when _T_31 : @[configure.scala 103:38]
                        valmax <= asSInt(UInt<7>("h020")) @[configure.scala 104:20]
                        skip @[configure.scala 103:38]
                      else : @[configure.scala 105:37]
                        node _T_32 = eq(vsew, UInt<2>("h03")) @[configure.scala 105:25]
                        when _T_32 : @[configure.scala 105:37]
                          valmax <= asSInt(UInt<6>("h010")) @[configure.scala 106:20]
                          skip @[configure.scala 105:37]
                  skip @[configure.scala 98:35]
    node _avl_T = neq(io.rs1, UInt<1>("h00")) @[configure.scala 111:18]
    node _avl_T_1 = neq(io.rd, UInt<1>("h00")) @[configure.scala 112:15]
    node _avl_T_2 = eq(io.rs1, UInt<1>("h00")) @[configure.scala 112:40]
    node _avl_T_3 = and(_avl_T_1, _avl_T_2) @[configure.scala 112:30]
    node _avl_T_4 = eq(io.rs1, UInt<1>("h00")) @[configure.scala 113:16]
    node _avl_T_5 = eq(io.rd, UInt<1>("h00")) @[configure.scala 113:33]
    node _avl_T_6 = and(_avl_T_4, _avl_T_5) @[configure.scala 113:24]
    node _avl_T_7 = mux(_avl_T_6, io.current_vl, asSInt(UInt<1>("h00"))) @[configure.scala 113:8]
    node _avl_T_8 = mux(_avl_T_3, valmax, _avl_T_7) @[configure.scala 112:8]
    node _avl_T_9 = mux(_avl_T, io.rs1_readdata, _avl_T_8) @[configure.scala 111:10]
    avl <= _avl_T_9 @[configure.scala 111:4]
    node _T_33 = leq(avl, valmax) @[configure.scala 116:15]
    when _T_33 : @[configure.scala 116:25]
      io.vl <= avl @[configure.scala 117:14]
      skip @[configure.scala 116:25]
    else : @[configure.scala 118:16]
      io.vl <= valmax @[configure.scala 119:14]
      skip @[configure.scala 118:16]
    io.rd_out <= io.rd @[configure.scala 122:10]
    io.valmax_o <= valmax @[configure.scala 123:13]
    io.avl_o <= avl @[configure.scala 124:10]
    io.sew <= vsew @[configure.scala 125:7]
    io.lmul <= vlmul @[configure.scala 126:8]
    io.zimm_o <= io.zimm @[configure.scala 127:11]
    
  module vregfile : 
    input clock : Clock
    input reset : Reset
    output io : {flip vs1_addr : UInt<5>, flip vs2_addr : UInt<5>, flip vd_addr : UInt<5>, vs0_data : SInt<128>, vs1_data : SInt<128>, vs2_data : SInt<128>, vddata : SInt<128>, flip vd_data : SInt<128>, flip reg_write : UInt<1>}
    
    wire _register_WIRE : SInt<128>[32] @[vectorreg.scala 28:33]
    _register_WIRE[0] <= asSInt(UInt<128>("h00")) @[vectorreg.scala 28:33]
    _register_WIRE[1] <= asSInt(UInt<128>("h00")) @[vectorreg.scala 28:33]
    _register_WIRE[2] <= asSInt(UInt<128>("h00")) @[vectorreg.scala 28:33]
    _register_WIRE[3] <= asSInt(UInt<128>("h00")) @[vectorreg.scala 28:33]
    _register_WIRE[4] <= asSInt(UInt<128>("h00")) @[vectorreg.scala 28:33]
    _register_WIRE[5] <= asSInt(UInt<128>("h00")) @[vectorreg.scala 28:33]
    _register_WIRE[6] <= asSInt(UInt<128>("h00")) @[vectorreg.scala 28:33]
    _register_WIRE[7] <= asSInt(UInt<128>("h00")) @[vectorreg.scala 28:33]
    _register_WIRE[8] <= asSInt(UInt<128>("h00")) @[vectorreg.scala 28:33]
    _register_WIRE[9] <= asSInt(UInt<128>("h00")) @[vectorreg.scala 28:33]
    _register_WIRE[10] <= asSInt(UInt<128>("h00")) @[vectorreg.scala 28:33]
    _register_WIRE[11] <= asSInt(UInt<128>("h00")) @[vectorreg.scala 28:33]
    _register_WIRE[12] <= asSInt(UInt<128>("h00")) @[vectorreg.scala 28:33]
    _register_WIRE[13] <= asSInt(UInt<128>("h00")) @[vectorreg.scala 28:33]
    _register_WIRE[14] <= asSInt(UInt<128>("h00")) @[vectorreg.scala 28:33]
    _register_WIRE[15] <= asSInt(UInt<128>("h00")) @[vectorreg.scala 28:33]
    _register_WIRE[16] <= asSInt(UInt<128>("h00")) @[vectorreg.scala 28:33]
    _register_WIRE[17] <= asSInt(UInt<128>("h00")) @[vectorreg.scala 28:33]
    _register_WIRE[18] <= asSInt(UInt<128>("h00")) @[vectorreg.scala 28:33]
    _register_WIRE[19] <= asSInt(UInt<128>("h00")) @[vectorreg.scala 28:33]
    _register_WIRE[20] <= asSInt(UInt<128>("h00")) @[vectorreg.scala 28:33]
    _register_WIRE[21] <= asSInt(UInt<128>("h00")) @[vectorreg.scala 28:33]
    _register_WIRE[22] <= asSInt(UInt<128>("h00")) @[vectorreg.scala 28:33]
    _register_WIRE[23] <= asSInt(UInt<128>("h00")) @[vectorreg.scala 28:33]
    _register_WIRE[24] <= asSInt(UInt<128>("h00")) @[vectorreg.scala 28:33]
    _register_WIRE[25] <= asSInt(UInt<128>("h00")) @[vectorreg.scala 28:33]
    _register_WIRE[26] <= asSInt(UInt<128>("h00")) @[vectorreg.scala 28:33]
    _register_WIRE[27] <= asSInt(UInt<128>("h00")) @[vectorreg.scala 28:33]
    _register_WIRE[28] <= asSInt(UInt<128>("h00")) @[vectorreg.scala 28:33]
    _register_WIRE[29] <= asSInt(UInt<128>("h00")) @[vectorreg.scala 28:33]
    _register_WIRE[30] <= asSInt(UInt<128>("h00")) @[vectorreg.scala 28:33]
    _register_WIRE[31] <= asSInt(UInt<128>("h00")) @[vectorreg.scala 28:33]
    reg register : SInt<128>[32], clock with : (reset => (reset, _register_WIRE)) @[vectorreg.scala 28:25]
    io.vs1_data <= register[io.vs1_addr] @[vectorreg.scala 30:13]
    io.vs2_data <= register[io.vs2_addr] @[vectorreg.scala 31:13]
    io.vs0_data <= register[UInt<1>("h00")] @[vectorreg.scala 32:13]
    io.vddata <= register[io.vd_addr] @[vectorreg.scala 33:11]
    when io.reg_write : @[vectorreg.scala 35:23]
      register[io.vd_addr] <= io.vd_data @[vectorreg.scala 36:28]
      skip @[vectorreg.scala 35:23]
    
  module Top : 
    input clock : Clock
    input reset : UInt<1>
    output io : {out : UInt<32>, addr : UInt<10>, test1 : UInt<5>, test2 : UInt<5>, v_type : SInt<32>}
    
    inst PCMod of pc @[top.scala 15:19]
    PCMod.clock <= clock
    PCMod.reset <= reset
    inst ALUMod of ALU_ @[top.scala 16:20]
    ALUMod.clock <= clock
    ALUMod.reset <= reset
    inst ALUcMod of Alu_Control @[top.scala 17:22]
    ALUcMod.clock <= clock
    ALUcMod.reset <= reset
    inst BrcntrlMod of BranchControl_ @[top.scala 18:25]
    BrcntrlMod.clock <= clock
    BrcntrlMod.reset <= reset
    inst CntrlDecMod of controldec @[top.scala 19:26]
    CntrlDecMod.clock <= clock
    CntrlDecMod.reset <= reset
    inst datamemMod of datamem @[top.scala 20:25]
    datamemMod.clock <= clock
    datamemMod.reset <= reset
    inst ImmgenMod of ImmdValGen1 @[top.scala 21:23]
    ImmgenMod.clock <= clock
    ImmgenMod.reset <= reset
    inst instmemMod of InstMem @[top.scala 22:25]
    instmemMod.clock <= clock
    instmemMod.reset <= reset
    inst jalrCompMod of jalr @[top.scala 23:26]
    jalrCompMod.clock <= clock
    jalrCompMod.reset <= reset
    inst regfileMod of regfile @[top.scala 24:25]
    regfileMod.clock <= clock
    regfileMod.reset <= reset
    inst config of configure @[top.scala 25:19]
    config.clock <= clock
    config.reset <= reset
    inst vreg of vregfile @[top.scala 26:19]
    vreg.clock <= clock
    vreg.reset <= reset
    PCMod.io.input <= PCMod.io.pc4 @[top.scala 29:16]
    node _instmemMod_io_addr_T = bits(PCMod.io.pc, 11, 2) @[top.scala 31:34]
    instmemMod.io.addr <= _instmemMod_io_addr_T @[top.scala 31:20]
    CntrlDecMod.io.Instruction <= instmemMod.io.inst @[top.scala 32:28]
    io.addr <= instmemMod.io.addr @[top.scala 33:9]
    regfileMod.io.RegWrite <= CntrlDecMod.io.RegWrite @[top.scala 36:24]
    node _regfileMod_io_rs1_T = bits(instmemMod.io.inst, 19, 15) @[top.scala 37:39]
    regfileMod.io.rs1 <= _regfileMod_io_rs1_T @[top.scala 37:18]
    node _regfileMod_io_rs2_T = bits(instmemMod.io.inst, 24, 20) @[top.scala 38:40]
    regfileMod.io.rs2 <= _regfileMod_io_rs2_T @[top.scala 38:19]
    node _regfileMod_io_rd_T = bits(instmemMod.io.inst, 11, 7) @[top.scala 39:37]
    regfileMod.io.rd <= _regfileMod_io_rd_T @[top.scala 39:17]
    vreg.io.reg_write <= CntrlDecMod.io.RegWrite @[top.scala 42:20]
    node _vreg_io_vs1_addr_T = bits(instmemMod.io.inst, 19, 15) @[top.scala 43:38]
    vreg.io.vs1_addr <= _vreg_io_vs1_addr_T @[top.scala 43:17]
    node _vreg_io_vs2_addr_T = bits(instmemMod.io.inst, 24, 20) @[top.scala 44:39]
    vreg.io.vs2_addr <= _vreg_io_vs2_addr_T @[top.scala 44:18]
    node _vreg_io_vd_addr_T = bits(instmemMod.io.inst, 11, 7) @[top.scala 45:36]
    vreg.io.vd_addr <= _vreg_io_vd_addr_T @[top.scala 45:16]
    ImmgenMod.io.instruction <= instmemMod.io.inst @[top.scala 48:26]
    ImmgenMod.io.pc <= PCMod.io.pc @[top.scala 49:17]
    ALUcMod.io.aluOp <= CntrlDecMod.io.aluop @[top.scala 52:18]
    node _ALUcMod_io_func3_T = bits(instmemMod.io.inst, 14, 12) @[top.scala 53:39]
    ALUcMod.io.func3 <= _ALUcMod_io_func3_T @[top.scala 53:18]
    node _ALUcMod_io_func7_T = bits(instmemMod.io.inst, 30, 30) @[top.scala 54:39]
    ALUcMod.io.func7 <= _ALUcMod_io_func7_T @[top.scala 54:18]
    node _ALUcMod_io_func6_T = bits(instmemMod.io.inst, 31, 26) @[top.scala 55:39]
    ALUcMod.io.func6 <= _ALUcMod_io_func6_T @[top.scala 55:18]
    ALUcMod.io.V_inst <= UInt<1>("h01") @[top.scala 56:19]
    reg vtype : SInt<32>, clock with : (reset => (reset, asSInt(UInt<32>("h00")))) @[top.scala 59:20]
    node _T = eq(CntrlDecMod.io.vset, UInt<1>("h01")) @[top.scala 60:27]
    when _T : @[top.scala 60:35]
      vtype <= ImmgenMod.io.z_imm @[top.scala 61:14]
      skip @[top.scala 60:35]
    node _config_io_rs1_T = bits(instmemMod.io.inst, 19, 15) @[top.scala 65:35]
    config.io.rs1 <= _config_io_rs1_T @[top.scala 65:15]
    node _config_io_rd_T = bits(instmemMod.io.inst, 11, 7) @[top.scala 66:35]
    config.io.rd <= _config_io_rd_T @[top.scala 66:14]
    config.io.rs1_readdata <= regfileMod.io.rdata1 @[top.scala 67:25]
    node _config_io_zimm_T = bits(instmemMod.io.inst, 30, 20) @[top.scala 68:37]
    config.io.zimm <= _config_io_zimm_T @[top.scala 68:16]
    config.io.current_vl <= asSInt(UInt<3>("h02")) @[top.scala 69:22]
    node _ALUMod_io_in_A_T = eq(CntrlDecMod.io.opAsel, UInt<1>("h00")) @[top.scala 74:24]
    node _ALUMod_io_in_A_T_1 = eq(CntrlDecMod.io.opAsel, UInt<2>("h03")) @[top.scala 74:60]
    node _ALUMod_io_in_A_T_2 = or(_ALUMod_io_in_A_T, _ALUMod_io_in_A_T_1) @[top.scala 74:35]
    node _ALUMod_io_in_A_T_3 = eq(CntrlDecMod.io.opAsel, UInt<1>("h01")) @[top.scala 75:24]
    node _ALUMod_io_in_A_T_4 = asSInt(PCMod.io.pc4) @[top.scala 75:52]
    node _ALUMod_io_in_A_T_5 = eq(CntrlDecMod.io.opAsel, UInt<2>("h02")) @[top.scala 76:24]
    node _ALUMod_io_in_A_T_6 = asSInt(PCMod.io.pc) @[top.scala 76:51]
    node _ALUMod_io_in_A_T_7 = mux(_ALUMod_io_in_A_T_5, _ALUMod_io_in_A_T_6, asSInt(UInt<1>("h00"))) @[Mux.scala 98:16]
    node _ALUMod_io_in_A_T_8 = mux(_ALUMod_io_in_A_T_3, _ALUMod_io_in_A_T_4, _ALUMod_io_in_A_T_7) @[Mux.scala 98:16]
    node _ALUMod_io_in_A_T_9 = mux(_ALUMod_io_in_A_T_2, regfileMod.io.rdata1, _ALUMod_io_in_A_T_8) @[Mux.scala 98:16]
    ALUMod.io.in_A <= _ALUMod_io_in_A_T_9 @[top.scala 73:16]
    node _T_1 = eq(CntrlDecMod.io.Ex_sel, UInt<1>("h00")) @[top.scala 80:28]
    node _T_2 = eq(CntrlDecMod.io.opBsel, UInt<1>("h01")) @[top.scala 80:67]
    node _T_3 = and(_T_1, _T_2) @[top.scala 80:42]
    when _T_3 : @[top.scala 80:75]
      ALUMod.io.in_B <= ImmgenMod.io.i_imm @[top.scala 81:32]
      skip @[top.scala 80:75]
    else : @[top.scala 82:89]
      node _T_4 = eq(CntrlDecMod.io.Ex_sel, UInt<1>("h01")) @[top.scala 82:42]
      node _T_5 = eq(CntrlDecMod.io.opBsel, UInt<1>("h01")) @[top.scala 82:81]
      node _T_6 = and(_T_4, _T_5) @[top.scala 82:56]
      when _T_6 : @[top.scala 82:89]
        ALUMod.io.in_B <= ImmgenMod.io.s_imm @[top.scala 83:32]
        skip @[top.scala 82:89]
      else : @[top.scala 84:89]
        node _T_7 = eq(CntrlDecMod.io.Ex_sel, UInt<2>("h02")) @[top.scala 84:42]
        node _T_8 = eq(CntrlDecMod.io.opBsel, UInt<1>("h01")) @[top.scala 84:81]
        node _T_9 = and(_T_7, _T_8) @[top.scala 84:56]
        when _T_9 : @[top.scala 84:89]
          ALUMod.io.in_B <= ImmgenMod.io.u_imm @[top.scala 85:32]
          skip @[top.scala 84:89]
        else : @[top.scala 86:89]
          node _T_10 = eq(CntrlDecMod.io.Ex_sel, UInt<2>("h03")) @[top.scala 86:42]
          node _T_11 = eq(CntrlDecMod.io.opBsel, UInt<1>("h01")) @[top.scala 86:81]
          node _T_12 = and(_T_10, _T_11) @[top.scala 86:56]
          when _T_12 : @[top.scala 86:89]
            ALUMod.io.in_B <= ImmgenMod.io.z_imm @[top.scala 87:32]
            skip @[top.scala 86:89]
          else : @[top.scala 88:89]
            node _T_13 = eq(CntrlDecMod.io.Ex_sel, UInt<3>("h04")) @[top.scala 88:42]
            node _T_14 = eq(CntrlDecMod.io.opBsel, UInt<1>("h01")) @[top.scala 88:81]
            node _T_15 = and(_T_13, _T_14) @[top.scala 88:56]
            when _T_15 : @[top.scala 88:89]
              ALUMod.io.in_B <= ImmgenMod.io.addi_imm @[top.scala 89:32]
              skip @[top.scala 88:89]
            else : @[top.scala 90:20]
              ALUMod.io.in_B <= regfileMod.io.rdata2 @[top.scala 91:32]
              skip @[top.scala 90:20]
    node _ALUMod_io_vs1_T = asUInt(vreg.io.vs1_data) @[top.scala 93:35]
    ALUMod.io.vs1 <= _ALUMod_io_vs1_T @[top.scala 93:15]
    node _ALUMod_io_vs2_T = asUInt(vreg.io.vs2_data) @[top.scala 94:35]
    ALUMod.io.vs2 <= _ALUMod_io_vs2_T @[top.scala 94:15]
    ALUMod.io.aluc <= ALUcMod.io.aluc @[top.scala 95:16]
    node _ALUMod_io_sew_T = bits(vtype, 5, 3) @[top.scala 96:23]
    ALUMod.io.sew <= _ALUMod_io_sew_T @[top.scala 96:15]
    ALUMod.io.v_ins <= CntrlDecMod.io.v_ins @[top.scala 98:17]
    BrcntrlMod.io.branch <= CntrlDecMod.io.Branch @[top.scala 106:22]
    BrcntrlMod.io.arg_x <= asSInt(UInt<1>("h00")) @[top.scala 107:21]
    BrcntrlMod.io.arg_y <= asSInt(UInt<1>("h00")) @[top.scala 108:21]
    node _T_16 = eq(BrcntrlMod.io.branch, UInt<1>("h01")) @[top.scala 112:28]
    when _T_16 : @[top.scala 112:36]
      node _BrcntrlMod_io_arg_x_T = eq(CntrlDecMod.io.opAsel, UInt<1>("h00")) @[top.scala 114:24]
      node _BrcntrlMod_io_arg_x_T_1 = eq(CntrlDecMod.io.opAsel, UInt<1>("h01")) @[top.scala 115:24]
      node _BrcntrlMod_io_arg_x_T_2 = asSInt(PCMod.io.pc4) @[top.scala 115:54]
      node _BrcntrlMod_io_arg_x_T_3 = eq(CntrlDecMod.io.opAsel, UInt<2>("h02")) @[top.scala 116:24]
      node _BrcntrlMod_io_arg_x_T_4 = asSInt(PCMod.io.pc) @[top.scala 116:54]
      node _BrcntrlMod_io_arg_x_T_5 = eq(CntrlDecMod.io.opAsel, UInt<2>("h03")) @[top.scala 117:24]
      node _BrcntrlMod_io_arg_x_T_6 = mux(_BrcntrlMod_io_arg_x_T_5, regfileMod.io.rdata1, asSInt(UInt<1>("h00"))) @[Mux.scala 98:16]
      node _BrcntrlMod_io_arg_x_T_7 = mux(_BrcntrlMod_io_arg_x_T_3, _BrcntrlMod_io_arg_x_T_4, _BrcntrlMod_io_arg_x_T_6) @[Mux.scala 98:16]
      node _BrcntrlMod_io_arg_x_T_8 = mux(_BrcntrlMod_io_arg_x_T_1, _BrcntrlMod_io_arg_x_T_2, _BrcntrlMod_io_arg_x_T_7) @[Mux.scala 98:16]
      node _BrcntrlMod_io_arg_x_T_9 = mux(_BrcntrlMod_io_arg_x_T, regfileMod.io.rdata1, _BrcntrlMod_io_arg_x_T_8) @[Mux.scala 98:16]
      BrcntrlMod.io.arg_x <= _BrcntrlMod_io_arg_x_T_9 @[top.scala 113:25]
      node _T_17 = eq(CntrlDecMod.io.Ex_sel, UInt<1>("h00")) @[top.scala 121:29]
      node _T_18 = eq(CntrlDecMod.io.opBsel, UInt<1>("h01")) @[top.scala 121:66]
      node _T_19 = and(_T_17, _T_18) @[top.scala 121:41]
      when _T_19 : @[top.scala 121:74]
        BrcntrlMod.io.arg_y <= ImmgenMod.io.i_imm @[top.scala 122:37]
        skip @[top.scala 121:74]
      else : @[top.scala 123:87]
        node _T_20 = eq(CntrlDecMod.io.Ex_sel, UInt<1>("h01")) @[top.scala 123:42]
        node _T_21 = eq(CntrlDecMod.io.opBsel, UInt<1>("h01")) @[top.scala 123:79]
        node _T_22 = and(_T_20, _T_21) @[top.scala 123:54]
        when _T_22 : @[top.scala 123:87]
          BrcntrlMod.io.arg_y <= ImmgenMod.io.s_imm @[top.scala 124:37]
          skip @[top.scala 123:87]
        else : @[top.scala 125:87]
          node _T_23 = eq(CntrlDecMod.io.Ex_sel, UInt<2>("h02")) @[top.scala 125:42]
          node _T_24 = eq(CntrlDecMod.io.opBsel, UInt<1>("h01")) @[top.scala 125:79]
          node _T_25 = and(_T_23, _T_24) @[top.scala 125:54]
          when _T_25 : @[top.scala 125:87]
            BrcntrlMod.io.arg_y <= ImmgenMod.io.u_imm @[top.scala 126:37]
            skip @[top.scala 125:87]
          else : @[top.scala 127:20]
            BrcntrlMod.io.arg_y <= regfileMod.io.rdata2 @[top.scala 128:37]
            skip @[top.scala 127:20]
      skip @[top.scala 112:36]
    BrcntrlMod.io.aluc <= CntrlDecMod.io.aluop @[top.scala 132:20]
    jalrCompMod.io.rs1 <= regfileMod.io.rdata1 @[top.scala 135:20]
    jalrCompMod.io.imm <= ImmgenMod.io.i_imm @[top.scala 136:20]
    node _PCMod_io_input_T = eq(CntrlDecMod.io.nextPCsel, UInt<1>("h00")) @[top.scala 145:27]
    node _PCMod_io_input_T_1 = eq(CntrlDecMod.io.nextPCsel, UInt<1>("h01")) @[top.scala 146:27]
    node _PCMod_io_input_T_2 = asUInt(ImmgenMod.io.sb_imm) @[top.scala 146:92]
    node _PCMod_io_input_T_3 = mux(BrcntrlMod.io.br_taken, _PCMod_io_input_T_2, PCMod.io.pc4) @[top.scala 146:46]
    node _PCMod_io_input_T_4 = eq(CntrlDecMod.io.nextPCsel, UInt<2>("h02")) @[top.scala 147:27]
    node _PCMod_io_input_T_5 = asUInt(ImmgenMod.io.uj_imm) @[top.scala 147:65]
    node _PCMod_io_input_T_6 = eq(CntrlDecMod.io.nextPCsel, UInt<2>("h03")) @[top.scala 148:27]
    node _PCMod_io_input_T_7 = asUInt(jalrCompMod.io.out) @[top.scala 148:64]
    node _PCMod_io_input_T_8 = mux(_PCMod_io_input_T_6, _PCMod_io_input_T_7, UInt<1>("h00")) @[Mux.scala 98:16]
    node _PCMod_io_input_T_9 = mux(_PCMod_io_input_T_4, _PCMod_io_input_T_5, _PCMod_io_input_T_8) @[Mux.scala 98:16]
    node _PCMod_io_input_T_10 = mux(_PCMod_io_input_T_1, _PCMod_io_input_T_3, _PCMod_io_input_T_9) @[Mux.scala 98:16]
    node _PCMod_io_input_T_11 = mux(_PCMod_io_input_T, PCMod.io.pc4, _PCMod_io_input_T_10) @[Mux.scala 98:16]
    PCMod.io.input <= _PCMod_io_input_T_11 @[top.scala 144:16]
    node _datamemMod_io_Addr_T = bits(ALUMod.io.output, 9, 2) @[top.scala 152:40]
    datamemMod.io.Addr <= _datamemMod_io_Addr_T @[top.scala 152:20]
    datamemMod.io.Data <= regfileMod.io.rdata2 @[top.scala 153:20]
    datamemMod.io.MemWrite <= CntrlDecMod.io.MemWrite @[top.scala 154:24]
    datamemMod.io.MemRead <= CntrlDecMod.io.MemRead @[top.scala 155:23]
    node _regfileMod_io_WriteData_T = eq(CntrlDecMod.io.Mem2Reg, UInt<1>("h00")) @[top.scala 159:25]
    node _regfileMod_io_WriteData_T_1 = mux(CntrlDecMod.io.vset, config.io.vl, ALUMod.io.output) @[top.scala 159:41]
    node _regfileMod_io_WriteData_T_2 = eq(CntrlDecMod.io.Mem2Reg, UInt<1>("h01")) @[top.scala 160:25]
    node _regfileMod_io_WriteData_T_3 = mux(_regfileMod_io_WriteData_T_2, datamemMod.io.out, asSInt(UInt<1>("h00"))) @[Mux.scala 98:16]
    node _regfileMod_io_WriteData_T_4 = mux(_regfileMod_io_WriteData_T, _regfileMod_io_WriteData_T_1, _regfileMod_io_WriteData_T_3) @[Mux.scala 98:16]
    regfileMod.io.WriteData <= _regfileMod_io_WriteData_T_4 @[top.scala 158:25]
    node _vreg_io_vd_data_T = asSInt(ALUMod.io.v_output) @[top.scala 163:39]
    vreg.io.vd_data <= _vreg_io_vd_data_T @[top.scala 163:17]
    io.out <= UInt<1>("h00") @[top.scala 164:8]
    node _io_test1_T = bits(instmemMod.io.inst, 19, 15) @[top.scala 165:31]
    io.test1 <= _io_test1_T @[top.scala 165:10]
    node _io_test2_T = bits(instmemMod.io.inst, 11, 7) @[top.scala 166:31]
    io.test2 <= _io_test2_T @[top.scala 166:10]
    io.v_type <= vtype @[top.scala 167:11]
    
