circuit ALU_1 :
  module ALU_1 :
    input clock : Clock
    input reset : UInt<1>
    input io_in_A : SInt<32>
    input io_in_B : SInt<32>
    input io_in_I : UInt<1>
    input io_in_V : UInt<1>
    input io_alu_Op : UInt<5>
    output io_out : SInt<32>

    node _T = eq(io_in_I, UInt<1>("h1")) @[ALU.scala 49:15]
    node _out_T = eq(io_alu_Op, UInt<5>("h0")) @[ALU.scala 51:23]
    node _out_T_1 = eq(io_alu_Op, UInt<5>("h0")) @[ALU.scala 51:48]
    node _out_T_2 = or(_out_T, _out_T_1) @[ALU.scala 51:35]
    node _out_T_3 = eq(io_alu_Op, UInt<5>("h0")) @[ALU.scala 51:74]
    node _out_T_4 = or(_out_T_2, _out_T_3) @[ALU.scala 51:61]
    node _out_T_5 = eq(io_alu_Op, UInt<5>("h0")) @[ALU.scala 51:98]
    node _out_T_6 = or(_out_T_4, _out_T_5) @[ALU.scala 51:85]
    node _out_T_7 = eq(io_alu_Op, UInt<5>("h0")) @[ALU.scala 51:122]
    node _out_T_8 = or(_out_T_6, _out_T_7) @[ALU.scala 51:109]
    node _out_T_9 = eq(io_alu_Op, UInt<5>("h0")) @[ALU.scala 51:147]
    node _out_T_10 = or(_out_T_8, _out_T_9) @[ALU.scala 51:134]
    node _out_T_11 = add(io_in_A, io_in_B) @[ALU.scala 51:171]
    node _out_T_12 = tail(_out_T_11, 1) @[ALU.scala 51:171]
    node _out_T_13 = asSInt(_out_T_12) @[ALU.scala 51:171]
    node _out_T_14 = eq(io_alu_Op, UInt<5>("h1")) @[ALU.scala 52:23]
    node _out_T_15 = eq(io_alu_Op, UInt<5>("h1")) @[ALU.scala 52:48]
    node _out_T_16 = or(_out_T_14, _out_T_15) @[ALU.scala 52:35]
    node _out_T_17 = asUInt(io_in_A) @[ALU.scala 52:71]
    node _out_T_18 = bits(io_in_B, 18, 0) @[ALU.scala 52:88]
    node _out_T_19 = dshl(_out_T_17, _out_T_18) @[ALU.scala 52:78]
    node _out_T_20 = asSInt(_out_T_19) @[ALU.scala 52:104]
    node _out_T_21 = eq(io_alu_Op, UInt<5>("h2")) @[ALU.scala 53:23]
    node _out_T_22 = eq(io_alu_Op, UInt<5>("h2")) @[ALU.scala 53:48]
    node _out_T_23 = or(_out_T_21, _out_T_22) @[ALU.scala 53:35]
    node _out_T_24 = lt(io_in_A, io_in_B) @[ALU.scala 53:74]
    node _out_T_25 = mux(_out_T_24, asSInt(UInt<2>("h1")), asSInt(UInt<1>("h0"))) @[ALU.scala 53:65]
    node _out_T_26 = eq(io_alu_Op, UInt<5>("h3")) @[ALU.scala 54:23]
    node _out_T_27 = eq(io_alu_Op, UInt<5>("h3")) @[ALU.scala 54:49]
    node _out_T_28 = or(_out_T_26, _out_T_27) @[ALU.scala 54:36]
    node _out_T_29 = lt(io_in_A, io_in_B) @[ALU.scala 54:76]
    node _out_T_30 = mux(_out_T_29, asSInt(UInt<2>("h1")), asSInt(UInt<1>("h0"))) @[ALU.scala 54:67]
    node _out_T_31 = eq(io_alu_Op, UInt<5>("h4")) @[ALU.scala 55:23]
    node _out_T_32 = eq(io_alu_Op, UInt<5>("h4")) @[ALU.scala 55:48]
    node _out_T_33 = or(_out_T_31, _out_T_32) @[ALU.scala 55:35]
    node _out_T_34 = xor(io_in_A, io_in_B) @[ALU.scala 55:71]
    node _out_T_35 = asSInt(_out_T_34) @[ALU.scala 55:71]
    node _out_T_36 = eq(io_alu_Op, UInt<5>("h5")) @[ALU.scala 56:23]
    node _out_T_37 = eq(io_alu_Op, UInt<5>("h5")) @[ALU.scala 56:48]
    node _out_T_38 = or(_out_T_36, _out_T_37) @[ALU.scala 56:35]
    node _out_T_39 = asUInt(io_in_A) @[ALU.scala 56:71]
    node _out_T_40 = bits(io_in_B, 18, 0) @[ALU.scala 56:88]
    node _out_T_41 = dshr(_out_T_39, _out_T_40) @[ALU.scala 56:78]
    node _out_T_42 = asSInt(_out_T_41) @[ALU.scala 56:104]
    node _out_T_43 = eq(io_alu_Op, UInt<5>("h6")) @[ALU.scala 57:23]
    node _out_T_44 = eq(io_alu_Op, UInt<5>("h6")) @[ALU.scala 57:47]
    node _out_T_45 = or(_out_T_43, _out_T_44) @[ALU.scala 57:34]
    node _out_T_46 = or(io_in_A, io_in_B) @[ALU.scala 57:69]
    node _out_T_47 = asSInt(_out_T_46) @[ALU.scala 57:69]
    node _out_T_48 = eq(io_alu_Op, UInt<5>("h7")) @[ALU.scala 58:23]
    node _out_T_49 = eq(io_alu_Op, UInt<5>("h7")) @[ALU.scala 58:48]
    node _out_T_50 = or(_out_T_48, _out_T_49) @[ALU.scala 58:35]
    node _out_T_51 = and(io_in_A, io_in_B) @[ALU.scala 58:71]
    node _out_T_52 = asSInt(_out_T_51) @[ALU.scala 58:71]
    node _out_T_53 = eq(io_alu_Op, UInt<5>("h8")) @[ALU.scala 59:23]
    node _out_T_54 = sub(io_in_A, io_in_B) @[ALU.scala 59:45]
    node _out_T_55 = tail(_out_T_54, 1) @[ALU.scala 59:45]
    node _out_T_56 = asSInt(_out_T_55) @[ALU.scala 59:45]
    node _out_T_57 = eq(io_alu_Op, UInt<5>("hd")) @[ALU.scala 60:23]
    node _out_T_58 = eq(io_alu_Op, UInt<5>("hd")) @[ALU.scala 60:48]
    node _out_T_59 = or(_out_T_57, _out_T_58) @[ALU.scala 60:35]
    node _out_T_60 = asUInt(io_in_A) @[ALU.scala 60:71]
    node _out_T_61 = bits(io_in_B, 18, 0) @[ALU.scala 60:88]
    node _out_T_62 = dshr(_out_T_60, _out_T_61) @[ALU.scala 60:78]
    node _out_T_63 = asSInt(_out_T_62) @[ALU.scala 60:104]
    node _out_T_64 = eq(io_alu_Op, UInt<5>("h1f")) @[ALU.scala 61:23]
    node _out_T_65 = eq(io_alu_Op, UInt<5>("h1f")) @[ALU.scala 61:48]
    node _out_T_66 = or(_out_T_64, _out_T_65) @[ALU.scala 61:35]
    node _out_T_67 = mux(_out_T_66, io_in_A, asSInt(UInt<1>("h0"))) @[ALU.scala 61:12]
    node _out_T_68 = mux(_out_T_59, _out_T_63, _out_T_67) @[ALU.scala 60:12]
    node _out_T_69 = mux(_out_T_53, _out_T_56, _out_T_68) @[ALU.scala 59:12]
    node _out_T_70 = mux(_out_T_50, _out_T_52, _out_T_69) @[ALU.scala 58:12]
    node _out_T_71 = mux(_out_T_45, _out_T_47, _out_T_70) @[ALU.scala 57:12]
    node _out_T_72 = mux(_out_T_38, _out_T_42, _out_T_71) @[ALU.scala 56:12]
    node _out_T_73 = mux(_out_T_33, _out_T_35, _out_T_72) @[ALU.scala 55:12]
    node _out_T_74 = mux(_out_T_28, _out_T_30, _out_T_73) @[ALU.scala 54:12]
    node _out_T_75 = mux(_out_T_23, _out_T_25, _out_T_74) @[ALU.scala 53:12]
    node _out_T_76 = mux(_out_T_16, _out_T_20, _out_T_75) @[ALU.scala 52:12]
    node out = mux(_out_T_10, _out_T_13, _out_T_76) @[ALU.scala 51:12]
    node _T_1 = eq(io_in_V, UInt<1>("h1")) @[ALU.scala 65:21]
    node _T_2 = eq(io_alu_Op, UInt<5>("h7")) @[ALU.scala 66:25]
    node _T_3 = leq(io_in_A, io_in_B) @[ALU.scala 67:26]
    node _T_4 = mul(io_in_B, asSInt(UInt<3>("h2"))) @[ALU.scala 69:52]
    node _T_5 = geq(io_in_A, _T_4) @[ALU.scala 69:40]
    node _GEN_0 = mux(_T_5, io_in_B, asSInt(UInt<1>("h0"))) @[ALU.scala 69:59 ALU.scala 70:32 ALU.scala 72:32]
    node _GEN_1 = mux(_T_3, io_in_A, _GEN_0) @[ALU.scala 67:37 ALU.scala 68:32]
    node _GEN_2 = mux(_T_2, _GEN_1, asSInt(UInt<1>("h0"))) @[ALU.scala 66:42 ALU.scala 76:20]
    node _GEN_3 = mux(_T_1, _GEN_2, asSInt(UInt<1>("h0"))) @[ALU.scala 65:30 ALU.scala 80:12]
    node _GEN_4 = mux(_T, out, _GEN_3) @[ALU.scala 49:24 ALU.scala 63:12]
    io_out <= asSInt(bits(_GEN_4, 31, 0))
